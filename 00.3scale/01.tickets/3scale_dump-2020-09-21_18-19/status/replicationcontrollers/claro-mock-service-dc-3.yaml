apiVersion: v1
kind: ReplicationController
metadata:
  annotations:
    openshift.io/deployer-pod.completed-at: 2020-09-08 13:17:06 +0000 UTC
    openshift.io/deployer-pod.created-at: 2020-09-08 13:16:48 +0000 UTC
    openshift.io/deployer-pod.name: claro-mock-service-dc-3-deploy
    openshift.io/deployment-config.latest-version: "3"
    openshift.io/deployment-config.name: claro-mock-service-dc
    openshift.io/deployment.phase: Complete
    openshift.io/deployment.replicas: "1"
    openshift.io/deployment.status-reason: config change
    openshift.io/encoded-deployment-config: |
      {"kind":"DeploymentConfig","apiVersion":"apps.openshift.io/v1","metadata":{"name":"claro-mock-service-dc","namespace":"3scale-project","selfLink":"/apis/apps.openshift.io/v1/namespaces/3scale-project/deploymentconfigs/claro-mock-service-dc","uid":"fcbd970d-99c7-4be2-ad4f-afca15a19e04","resourceVersion":"250754568","generation":3,"creationTimestamp":"2020-09-08T13:07:42Z"},"spec":{"strategy":{"type":"Rolling","rollingParams":{"updatePeriodSeconds":1,"intervalSeconds":1,"timeoutSeconds":600,"maxUnavailable":"25%","maxSurge":"25%"},"resources":{},"activeDeadlineSeconds":21600},"triggers":[{"type":"ConfigChange"}],"replicas":1,"revisionHistoryLimit":10,"test":false,"selector":{"app":"claro-mock-service"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"claro-mock-service"}},"spec":{"containers":[{"name":"claro-mock-service","image":"image-registry.openshift-image-registry.svc:5000/3scale-project/claro-mock-service:1.0","ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always"}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","securityContext":{},"schedulerName":"default-scheduler"}}},"status":{"latestVersion":3,"observedGeneration":2,"replicas":1,"updatedReplicas":1,"availableReplicas":0,"unavailableReplicas":1,"details":{"message":"config change","causes":[{"type":"ConfigChange"}]},"conditions":[{"type":"Available","status":"False","lastUpdateTime":"2020-09-08T13:07:42Z","lastTransitionTime":"2020-09-08T13:07:42Z","message":"Deployment config does not have minimum availability."},{"type":"Progressing","status":"True","lastUpdateTime":"2020-09-08T13:12:16Z","lastTransitionTime":"2020-09-08T13:12:16Z","reason":"ReplicationControllerUpdated","message":"replication controller \"claro-mock-service-dc-2\" is progressing"}]}}
  creationTimestamp: "2020-09-08T13:16:48Z"
  generation: 2
  labels:
    openshift.io/deployment-config.name: claro-mock-service-dc
  name: claro-mock-service-dc-3
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.openshift.io/v1
    blockOwnerDeletion: true
    controller: true
    kind: DeploymentConfig
    name: claro-mock-service-dc
    uid: fcbd970d-99c7-4be2-ad4f-afca15a19e04
  resourceVersion: "250754914"
  selfLink: /api/v1/namespaces/3scale-project/replicationcontrollers/claro-mock-service-dc-3
  uid: d078b1ce-b490-440f-89a2-f0a470607151
spec:
  replicas: 1
  selector:
    app: claro-mock-service
    deployment: claro-mock-service-dc-3
    deploymentconfig: claro-mock-service-dc
  template:
    metadata:
      annotations:
        openshift.io/deployment-config.latest-version: "3"
        openshift.io/deployment-config.name: claro-mock-service-dc
        openshift.io/deployment.name: claro-mock-service-dc-3
      creationTimestamp: null
      labels:
        app: claro-mock-service
        deployment: claro-mock-service-dc-3
        deploymentconfig: claro-mock-service-dc
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/3scale-project/claro-mock-service:1.0
        imagePullPolicy: Always
        name: claro-mock-service
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  fullyLabeledReplicas: 1
  observedGeneration: 2
  readyReplicas: 1
  replicas: 1
