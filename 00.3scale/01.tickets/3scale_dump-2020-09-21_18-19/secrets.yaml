apiVersion: v1
data:
  .dockercfg: 
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: 3scale-operator
    kubernetes.io/service-account.uid: ba1fbb00-75de-4f9b-bfd1-37ea7328910e
    openshift.io/token-secret.name: 3scale-operator-token-9tmxb
    openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6ImhpT2k2TkEwSzhuT0paWEZzeTJzZ0I5T2dlZWs5bHU3LU9wQlpHVWNmUmMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiIzc2NhbGUtcHJvamVjdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiIzc2NhbGUtb3BlcmF0b3ItdG9rZW4tOXRteGIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiM3NjYWxlLW9wZXJhdG9yIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiYmExZmJiMDAtNzVkZS00ZjliLWJmZDEtMzdlYTczMjg5MTBlIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OjNzY2FsZS1wcm9qZWN0OjNzY2FsZS1vcGVyYXRvciJ9.YycKm36hVso-6ZJzFOn68-OsLsBGu6kfpoal5HBnogwDBxz1FLPDYimM8s7P6taGi-bDxfqU4qCBUuk5bDV9BkPDdBF_rT5SB2RLxX8O0DoDTRPrjsSn4ywJiPtXy2V4CJFvBE6EJh19_ZNHY3-m5sbgl3Gu1qVlgOPFxz_j-q8DP7YvGtKEC0Q31kEFpTVKZ3-4rZqJHqvZLNa4P6phTs4Z87c9Cf6xk-of96FDeZfGmWEt631L2mcoYidVpKYDTt991Uy8p_hSUBMuRyGpnw09upiAJV-w0nG5-VCvsSH1B-imJlZPFU4HPfFbkNY66IVmiyFtvk807SxtwLjLxQ
  creationTimestamp: "2020-07-27T12:57:04Z"
  name: 3scale-operator-dockercfg-l7552
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: v1
    blockOwnerDeletion: false
    controller: true
    kind: Secret
    name: 3scale-operator-token-9tmxb
    uid: 93cb882d-87d1-40eb-933c-e16287d0c303
  resourceVersion: "198370755"
  selfLink: /api/v1/namespaces/3scale-project/secrets/3scale-operator-dockercfg-l7552
  uid: 14f36634-6792-4973-9b91-a4292a70ac72
type: kubernetes.io/dockercfg
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJSU9LRGtxcVpKUnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qRXlNakF5TVRJMVdoY05Namt4TWpBNU1qQXlNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxXN0NtNkgyc050WkhQT1pNanFhOWtNT1BKdHJQUgovSnFWSFJzWGdBYmdUSjhmdmVJenVEejhjc1RobSthYU1zUWxwR3BITHpXZkExK3lVc3hibkZCOGpibmNxdzJoCnFrZ1pzTjluMHBEKzc5SkcyWE9UeTMxV04wTThKMWRVRko5K1VuckVJYXUwYWlya3VrTnZDV2xkcnAwMkFzOEUKclc5dlh2NEhhdTRLemE5enB3TEFVK1Fsc3l4c0tzRk9BM1JkZm9QR2NkakRzZWowT1hlN0t3R1dvR0hycjc1Ygp6K0JmbmV4WUcwNWQyZHRhQi9yUnN4RmlPL2RKai9PS3hEY0NXT1RXWU5XY1lGQ0lKSVJyZVJYSE1XUUNRS0c5ClBEQ1pxb0ZKMGhkUlhBTlNMaUlLUkJqcEw0VEZaTGFzU3h0WVZZT1E2d1BpWS9WUDJEL1dqQzBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPbwptOVhXKzFYNWwwaXpzWHRwN2l6dzByL2lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFrdWhvdG1tTFp4V3Q1ClVnZXF1TTJEMXlvU2xIVDhxazlIb3VrVmJ4S1JuZWxEUG1GVkhJNU1NRkhnWmRnTUd3ZU90VS9QdjNHd21ZNHQKNlRJbE4wVXQxWloxL094S1JiTEc3M3Yrb0tNa1dFa3FBenl4N250MUtBZUFqQi9tVDE2SUdaVERFOExoY25FRgpCMGxVMnd2aGExMnYvYjgxeTQ2c3pLcG03eXFIenZ4d2JGZUtLK2dhTlJvN1lGbUUvNm5rQlJTSHdqSk84cmVwCmFqMlFmbDJaUHBmRlVPdjFheU9hY1lXUHBua2YzZFBSelMxY25IeUZJVnFQSmxqZTByVDVZNlk3Qy94Y3pGV04KRjhXTGlBTTdJQlFVTUdVUDlOd1p1NDc3NEVWbEpsZnRqWEdEcWg3UkFWViszU05aNTBuWjVFdHpONHdoNUxYYwppcEI0Sy9PUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1YclhlcmdVY3JFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1USXhNakl3TWpFeU5Wb1hEVEk1TVRJd09USXdNakV5TlZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eXJscGROZ3dGOGgKMGN3ekRKRUdPcmZBb2RsdUtOUTRXYmprVGM3ajJXY0hpQ2hhQUhtLytrOCtueTdJYVAvT1NiMkh0c0lOOFVaOApSY0ZwREdpWDBKczFHcnN4Q3lXVkZ1VndoRE44UHZRc1NkYjJDamJNMlVYdDZuVzRNZmRuUUIzcDdmM1lneHY3CmEyWFFLUndkTzhhSExhWWRGK1BvaUNDVGMyQURHMVJ1UzVvWEV2Y1ZBa3JLaDFDMHNLQi9FUFpiSVNIVCtpWDkKeWg1M2VZb3NBalUyOERPL3J5dFpVdU9TS01tbWJqUjRVOUxiVlE0ZUkrMzVPWU9UZi9iNTJ0bjhWRFVzdXBIbgpVWU8vaWs5d2w5RmFQKzlGdm9WQjdIUXNwaFdVOGpSZy9RSElMTjNXREQ0R1RKTlkwVzVIMDNweGVIWmNHbHVLCmV1VS9IbjgwZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdxNjRJbDNyUEZ1RVVkNWFjOUhQNGt1dmF0TXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJJemg5cWpzQkVLTWs1QVd2ZkFKNGY0WEN2dDJiYjZCM1VMNkk3TUprVDAxZU5DalRMSDlwZVJsVG5pCk1WOFZ3VGtkWXpKN3FGV01ubTZ6NW1PRzZyc01TbG9YNithTklmT0h5c1YvUGpxVFhzV2R4RzBrTGNod0xmUEoKYzlqSTA5c3FuejhxOGZaYUdyTUZhdUpqZ0g2UTVSbHA4VmZyM0ZYRm1Ib2tTdEhvZHVQQ2JFblBvMVlvK2VYegpMditCa013aHEzbmN4a2lXclZ3NEtrSnY1S2V4cklWNTI5eDJpbHdCU1BLSitiTXdlNDlRWEp0cEVSeFBYV1VBCnU5bzRJVnVINDk2VWpMSzBQOWhaa3dMblgzVlJxcE1nZVhJdUszTEROcDhSbWRRcGszcE9nUFBFM2VpRHFTc24KNERHY1prYzVCakRGR25mNElOdjlwN1Roc3lZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSWNnelB0Slk5aEVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRJeE1qSXdNakV5TlZvWERUSTVNVEl3T1RJd01qRXlOVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTMrb2xmb20yK25jbzk1SFlMZnBTaURoYWwvVWM0cExzT2VKMFcvSlA2RWRHQW1aVElWVXFxS3EzWko1WgpXaHhQS25KV2JxWEsrWkZSZkgrdnN2ZUNSNEkwK1J1MnNyUU5MVTlZb2drNUN5Yy9UNStlekpEaDQvZ1piL0FpCmF5T3FxV1RSSHQ5bkExUWdYR01KS3FERGh0TmUvcXQ1WnBoTWFXd0ZnNE96TkhRWGxaRnpMUDhkOC9KTlFEZUQKODFBZ3l2bG90TVRBQWZWTkpNN05VYXBGNTdUSE5OVnFvM01nSkVxSkhoU3lZWkhka3pCaEhyOXJXZGRNVktMbQorc1lINmdvQ0E2UDRYY1hoZmg3ak85UGJaTnp6UGZ6QUhBd0RkejNybFM0U3FadGZkZUVOWC8vc2VzS0xGdUN4CmxHSEQxOXV0bEpDQW9PMUVkUGhuR2hqb1RRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYMU5IY3N3a1V4V3UzcEoyWldXZUhneW5QYzh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFR0FzY2kyUjJvajRFcUVDNVBVajdRRjFZZ0VucmNWa2VVYWpBN21paFArCmdOeVpDWDV4VEx1WVpaSnByOURqWFdVQlNsdDgyZEtNeDR3TkdDb0IwMnM0VVNTOElWQllGV3dnc29wL3hxTmsKSS9Xalc2TTlyT2ZBTGk1UzhVT3NseHBndEd5aUh2c3J2cHBQQ0Z6YmZ4dUUwdzEwUW9oVzhvdFpkYWlWS09jMQo2MkllTGRGc2swb2dWMGNjUVV6QlpBQmQ5ZXRaMnAvZGxxenhsOVhIQklTdG9KWVVwOHNOQzFHdCtkeHhnekFJCnVKbkRRUnhEaWtLYVNLZWtCa2crS2J3RUQ5WGdLazhqVUhBNkVFd0tHM2xkbTY5eWZ5ZzJEeUNjcVNsMkVNdlcKdlBncU5GZmZOblhOZGIzQ01zRGoycTJ3SjJKeStlcGlieDVLdHNFVHQzRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9Ea3pPRFUxTWpFd0hoY05NakF3TlRFek1UVTFPRFF3V2hjTk16QXcKTlRFeE1UVTFPRFF4V2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRGt6Ck9EVTFNakV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p4bUQ3a3hDbHg3a0EKTDhxWm5LSFphTVZ5TmJwSzBvem91UW9ENzZMV1lqTnNYRlRXVmlRdUppUml2WEtnVThmU2hISWJJdDFGSU5rcwpGZUZ4QkRad1BFMWhqcHZEUHcrY2Q3emhZcUFpbUtkdHlRMDE4RjBTR0VKNnpab25XZENZeHNxbkZWaEtOSzR2Cmk2czU2TmRTN1RPRUozNmNDbWt0YlovVEE4cXdtYVI1NkdTM2pPZUNIa0FwQ2pRNnpxS1dnTmNmR1VmWGJRZjAKS0VMK1lvZ0R2OVVRMjFOcTBhVHlUcnVhSUlQRy9KUWtiNlFQeTluNVo1d3NWR0RGenp6MjFQbXhhN3lVZDJPUApodGFOZ1Mza053WnJ2TjZ6ODNRdkVEVjdTWnNpTUgvUkpGaDZZTVdnQllXeTA2dU9kK3RvMGoyTXc5c0lSaDFoCnd3c3Z1K0Z4QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVitCQzFGTHFZSW1TbUJDVy9ONC8xdzlQanV6QWZCZ05WSFNNRUdEQVdnQlNWK0JDMQpGTHFZSW1TbUJDVy9ONC8xdzlQanV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGcVdBNUMxdUNnZFpmRWlXCjRMZnB6bjA3WEZKVDJGb0h3eEpwNGF4S21WbTg1Q0tpdklyaEJvVDBuN1o1S3lvOElPYWgzTytldzJWS2xsWVMKWU81VHpwVS9GME96azJxRTgwcCtkVDFSY3hTZ2ZCUktyQlc3b3ozN2I0V1g0blNoK0QyUit5M3UyRXp0TTRjcAp3c0E5NzlzNHhSdXpXZkJ5OWNnQTJvQnZrNzhaTzJHMCtJSVRJdlFLSHRnbTZmUjZsM243Qm9PcGpQWm1wT1hXCkMrVlJtckJCYjZmcVMzWGNUMTIrdFpLR3NJNVU4S1k4d3dUQkY0MWJnRkk4OGg2emJ5amZHMFJvVm5xUXdNMGsKYy9aL1ZhL2IwV0hFVGVEQkc1aUVEbDlONTI3SXdJZXFrRmxjN1pqYW9pQTE0K3ZlWnFQS1k4SFFuTFZscTI1ZQpaRmxPbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxTnpZeE9EWXdOelF3SGhjTk1Ua3hNakV5TWpFeU56VXpXaGNOTWpFeE1qRXgKTWpFeU56VTBXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU56WXhPRFl3TnpRdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETEx3cEdIdkpUeHFpN0VpQVgxTmNxCjhDQlpIanZEeXEwKy84Z2FtZDJDU0hIY096bGljTlhGUG4rOUlDWURsMjN2eEo0ZlQ4M3RnN1FSZ2R6eVI2N0YKN0IxMEFheGJjNFRkclVRWi9mcXMvWU05ZjNJWWNsK2U1djZITFl4cW1FN2xkRjN6ZEgybUwvckU3MmgvUjRKcApybS9YQldaYXpwM2ViNU9tdmpYc3B0bkdpN3NzYncrMlA2TzFGMGRZRDZTaWFoUjkvaGl0N2lMVXZIakRaWm9XCnByZEc0T2RYYUxYallHLzBBK3VTaHBRRnlwaDdsUGErVFl6UkFIcE1tODArSmZ6YnRKS1dmMlBpd2JzSmF3ZVUKWEZtaklReDI2QWZoZlJ4SUQxTldXTmgvZEdmQWNEQ0pYUTYvWlVSZFhreklnbjVKL1NpZXhSTHhKN1JFcnIrOQpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZXBVZ09DNFhNSWtJMlNrNFBubGtOVTdtYlRBYWwxVDZhV3BmN09Oc3oKWFJENDNGUTY1WjZVVlZScmgvZzkzWGNCL2w1aE9yaDJSZUlGZ0JyR2J1d1FweVpTTzRUUEM2WDlhMjNRWENRMQpidkhxeFVmYlB2YWc0Um93T28yeWs5UDJiSkhOOEZ1N2pEUGpENHV6OUgvbmZJNHgxNzJSVGJmMW1NTm1nL1BvClpBSDN3N0tONzhzcVhzOEQ4dDMvYmhZVE94RFNlZWEzd0Y3MzFrVlNJbEtvb1B4Y092NGl6alQxa1MvMExPSEwKb1RhQ1poV01IdGtXbGN0WVpkSS80d2lCdTdDSExITmNHMG5NbXVKcVFxSXFCa0ZNczQ2YmZtcmdPaFFkWXk5TQpDaXFqZkovbnQrTjJlNlEzclAyL3k5VzUrRU4xZ3V6Z1lBM0lLcWpWYklPYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  namespace: M3NjYWxlLXByb2plY3Q=
  service-ca.crt: 
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltaHBUMmsyVGtFd1N6aHVUMHBhV0VaemVUSnpaMEk1VDJkbFpXczViSFUzTFU5d1FscEhWV05tVW1NaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUl6YzJOaGJHVXRjSEp2YW1WamRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSXpjMk5oYkdVdGIzQmxjbUYwYjNJdGRHOXJaVzR0T1hSdGVHSWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzV1WVcxbElqb2lNM05qWVd4bExXOXdaWEpoZEc5eUlpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVkV2xrSWpvaVltRXhabUppTURBdE56VmtaUzAwWmpsaUxXSm1aREV0TXpkbFlUY3pNamc1TVRCbElpd2ljM1ZpSWpvaWMzbHpkR1Z0T25ObGNuWnBZMlZoWTJOdmRXNTBPak56WTJGc1pTMXdjbTlxWldOME9qTnpZMkZzWlMxdmNHVnlZWFJ2Y2lKOS5ZeWNLbTM2aFZzby02Wkp6Rk9uNjgtT3NMc0JHdTZrZnBvYWw1SEJub2d3REJ4ejFGTFBEWWltTThzN1A2dGFHaS1iRHhmcVU0cUNCVXVrNWJEVjlCa1BEZEJGX3JUNVNCMlJMeFg4TzBEb0RUUlByanNTbjR5d0ppUHRYeTJWNENKRnZCRTZFSmgxOV9aTkhZMy1tNXNiZ2wzR3UxcVZsZ09QRnh6X2otcThEUDdZdkd0S0VDMFEzMWtFRnBUVktaMy00clpxSkhxdlpMTmE0UDZwaFRzNFo4N2M5Q2Y2eGstb2Y5NkZEZVpmR21XRXQ2MzFMMm1jb1lpZFZwS1lEVHQ5OTFVeThwX2hTVUJNdVJ5R3BudzA5dXBpQUpWLXcwbkc1LVZDdnNTSDFCLWltSmxaUEZVNEhQZkZia05ZNjZJVm1peUZ0dms4MDdTeHR3TGpMeFE=
kind: Secret
metadata:
  annotations:
    kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
    kubernetes.io/service-account.name: 3scale-operator
    kubernetes.io/service-account.uid: ba1fbb00-75de-4f9b-bfd1-37ea7328910e
  creationTimestamp: "2020-07-27T12:57:04Z"
  name: 3scale-operator-token-9tmxb
  namespace: 3scale-project
  resourceVersion: "198370754"
  selfLink: /api/v1/namespaces/3scale-project/secrets/3scale-operator-token-9tmxb
  uid: 93cb882d-87d1-40eb-933c-e16287d0c303
type: kubernetes.io/service-account-token
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJSU9LRGtxcVpKUnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qRXlNakF5TVRJMVdoY05Namt4TWpBNU1qQXlNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxXN0NtNkgyc050WkhQT1pNanFhOWtNT1BKdHJQUgovSnFWSFJzWGdBYmdUSjhmdmVJenVEejhjc1RobSthYU1zUWxwR3BITHpXZkExK3lVc3hibkZCOGpibmNxdzJoCnFrZ1pzTjluMHBEKzc5SkcyWE9UeTMxV04wTThKMWRVRko5K1VuckVJYXUwYWlya3VrTnZDV2xkcnAwMkFzOEUKclc5dlh2NEhhdTRLemE5enB3TEFVK1Fsc3l4c0tzRk9BM1JkZm9QR2NkakRzZWowT1hlN0t3R1dvR0hycjc1Ygp6K0JmbmV4WUcwNWQyZHRhQi9yUnN4RmlPL2RKai9PS3hEY0NXT1RXWU5XY1lGQ0lKSVJyZVJYSE1XUUNRS0c5ClBEQ1pxb0ZKMGhkUlhBTlNMaUlLUkJqcEw0VEZaTGFzU3h0WVZZT1E2d1BpWS9WUDJEL1dqQzBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPbwptOVhXKzFYNWwwaXpzWHRwN2l6dzByL2lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFrdWhvdG1tTFp4V3Q1ClVnZXF1TTJEMXlvU2xIVDhxazlIb3VrVmJ4S1JuZWxEUG1GVkhJNU1NRkhnWmRnTUd3ZU90VS9QdjNHd21ZNHQKNlRJbE4wVXQxWloxL094S1JiTEc3M3Yrb0tNa1dFa3FBenl4N250MUtBZUFqQi9tVDE2SUdaVERFOExoY25FRgpCMGxVMnd2aGExMnYvYjgxeTQ2c3pLcG03eXFIenZ4d2JGZUtLK2dhTlJvN1lGbUUvNm5rQlJTSHdqSk84cmVwCmFqMlFmbDJaUHBmRlVPdjFheU9hY1lXUHBua2YzZFBSelMxY25IeUZJVnFQSmxqZTByVDVZNlk3Qy94Y3pGV04KRjhXTGlBTTdJQlFVTUdVUDlOd1p1NDc3NEVWbEpsZnRqWEdEcWg3UkFWViszU05aNTBuWjVFdHpONHdoNUxYYwppcEI0Sy9PUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1YclhlcmdVY3JFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1USXhNakl3TWpFeU5Wb1hEVEk1TVRJd09USXdNakV5TlZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eXJscGROZ3dGOGgKMGN3ekRKRUdPcmZBb2RsdUtOUTRXYmprVGM3ajJXY0hpQ2hhQUhtLytrOCtueTdJYVAvT1NiMkh0c0lOOFVaOApSY0ZwREdpWDBKczFHcnN4Q3lXVkZ1VndoRE44UHZRc1NkYjJDamJNMlVYdDZuVzRNZmRuUUIzcDdmM1lneHY3CmEyWFFLUndkTzhhSExhWWRGK1BvaUNDVGMyQURHMVJ1UzVvWEV2Y1ZBa3JLaDFDMHNLQi9FUFpiSVNIVCtpWDkKeWg1M2VZb3NBalUyOERPL3J5dFpVdU9TS01tbWJqUjRVOUxiVlE0ZUkrMzVPWU9UZi9iNTJ0bjhWRFVzdXBIbgpVWU8vaWs5d2w5RmFQKzlGdm9WQjdIUXNwaFdVOGpSZy9RSElMTjNXREQ0R1RKTlkwVzVIMDNweGVIWmNHbHVLCmV1VS9IbjgwZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdxNjRJbDNyUEZ1RVVkNWFjOUhQNGt1dmF0TXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJJemg5cWpzQkVLTWs1QVd2ZkFKNGY0WEN2dDJiYjZCM1VMNkk3TUprVDAxZU5DalRMSDlwZVJsVG5pCk1WOFZ3VGtkWXpKN3FGV01ubTZ6NW1PRzZyc01TbG9YNithTklmT0h5c1YvUGpxVFhzV2R4RzBrTGNod0xmUEoKYzlqSTA5c3FuejhxOGZaYUdyTUZhdUpqZ0g2UTVSbHA4VmZyM0ZYRm1Ib2tTdEhvZHVQQ2JFblBvMVlvK2VYegpMditCa013aHEzbmN4a2lXclZ3NEtrSnY1S2V4cklWNTI5eDJpbHdCU1BLSitiTXdlNDlRWEp0cEVSeFBYV1VBCnU5bzRJVnVINDk2VWpMSzBQOWhaa3dMblgzVlJxcE1nZVhJdUszTEROcDhSbWRRcGszcE9nUFBFM2VpRHFTc24KNERHY1prYzVCakRGR25mNElOdjlwN1Roc3lZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSWNnelB0Slk5aEVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRJeE1qSXdNakV5TlZvWERUSTVNVEl3T1RJd01qRXlOVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTMrb2xmb20yK25jbzk1SFlMZnBTaURoYWwvVWM0cExzT2VKMFcvSlA2RWRHQW1aVElWVXFxS3EzWko1WgpXaHhQS25KV2JxWEsrWkZSZkgrdnN2ZUNSNEkwK1J1MnNyUU5MVTlZb2drNUN5Yy9UNStlekpEaDQvZ1piL0FpCmF5T3FxV1RSSHQ5bkExUWdYR01KS3FERGh0TmUvcXQ1WnBoTWFXd0ZnNE96TkhRWGxaRnpMUDhkOC9KTlFEZUQKODFBZ3l2bG90TVRBQWZWTkpNN05VYXBGNTdUSE5OVnFvM01nSkVxSkhoU3lZWkhka3pCaEhyOXJXZGRNVktMbQorc1lINmdvQ0E2UDRYY1hoZmg3ak85UGJaTnp6UGZ6QUhBd0RkejNybFM0U3FadGZkZUVOWC8vc2VzS0xGdUN4CmxHSEQxOXV0bEpDQW9PMUVkUGhuR2hqb1RRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYMU5IY3N3a1V4V3UzcEoyWldXZUhneW5QYzh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFR0FzY2kyUjJvajRFcUVDNVBVajdRRjFZZ0VucmNWa2VVYWpBN21paFArCmdOeVpDWDV4VEx1WVpaSnByOURqWFdVQlNsdDgyZEtNeDR3TkdDb0IwMnM0VVNTOElWQllGV3dnc29wL3hxTmsKSS9Xalc2TTlyT2ZBTGk1UzhVT3NseHBndEd5aUh2c3J2cHBQQ0Z6YmZ4dUUwdzEwUW9oVzhvdFpkYWlWS09jMQo2MkllTGRGc2swb2dWMGNjUVV6QlpBQmQ5ZXRaMnAvZGxxenhsOVhIQklTdG9KWVVwOHNOQzFHdCtkeHhnekFJCnVKbkRRUnhEaWtLYVNLZWtCa2crS2J3RUQ5WGdLazhqVUhBNkVFd0tHM2xkbTY5eWZ5ZzJEeUNjcVNsMkVNdlcKdlBncU5GZmZOblhOZGIzQ01zRGoycTJ3SjJKeStlcGlieDVLdHNFVHQzRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9Ea3pPRFUxTWpFd0hoY05NakF3TlRFek1UVTFPRFF3V2hjTk16QXcKTlRFeE1UVTFPRFF4V2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRGt6Ck9EVTFNakV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p4bUQ3a3hDbHg3a0EKTDhxWm5LSFphTVZ5TmJwSzBvem91UW9ENzZMV1lqTnNYRlRXVmlRdUppUml2WEtnVThmU2hISWJJdDFGSU5rcwpGZUZ4QkRad1BFMWhqcHZEUHcrY2Q3emhZcUFpbUtkdHlRMDE4RjBTR0VKNnpab25XZENZeHNxbkZWaEtOSzR2Cmk2czU2TmRTN1RPRUozNmNDbWt0YlovVEE4cXdtYVI1NkdTM2pPZUNIa0FwQ2pRNnpxS1dnTmNmR1VmWGJRZjAKS0VMK1lvZ0R2OVVRMjFOcTBhVHlUcnVhSUlQRy9KUWtiNlFQeTluNVo1d3NWR0RGenp6MjFQbXhhN3lVZDJPUApodGFOZ1Mza053WnJ2TjZ6ODNRdkVEVjdTWnNpTUgvUkpGaDZZTVdnQllXeTA2dU9kK3RvMGoyTXc5c0lSaDFoCnd3c3Z1K0Z4QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVitCQzFGTHFZSW1TbUJDVy9ONC8xdzlQanV6QWZCZ05WSFNNRUdEQVdnQlNWK0JDMQpGTHFZSW1TbUJDVy9ONC8xdzlQanV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGcVdBNUMxdUNnZFpmRWlXCjRMZnB6bjA3WEZKVDJGb0h3eEpwNGF4S21WbTg1Q0tpdklyaEJvVDBuN1o1S3lvOElPYWgzTytldzJWS2xsWVMKWU81VHpwVS9GME96azJxRTgwcCtkVDFSY3hTZ2ZCUktyQlc3b3ozN2I0V1g0blNoK0QyUit5M3UyRXp0TTRjcAp3c0E5NzlzNHhSdXpXZkJ5OWNnQTJvQnZrNzhaTzJHMCtJSVRJdlFLSHRnbTZmUjZsM243Qm9PcGpQWm1wT1hXCkMrVlJtckJCYjZmcVMzWGNUMTIrdFpLR3NJNVU4S1k4d3dUQkY0MWJnRkk4OGg2emJ5amZHMFJvVm5xUXdNMGsKYy9aL1ZhL2IwV0hFVGVEQkc1aUVEbDlONTI3SXdJZXFrRmxjN1pqYW9pQTE0K3ZlWnFQS1k4SFFuTFZscTI1ZQpaRmxPbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxTnpZeE9EWXdOelF3SGhjTk1Ua3hNakV5TWpFeU56VXpXaGNOTWpFeE1qRXgKTWpFeU56VTBXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU56WXhPRFl3TnpRdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETEx3cEdIdkpUeHFpN0VpQVgxTmNxCjhDQlpIanZEeXEwKy84Z2FtZDJDU0hIY096bGljTlhGUG4rOUlDWURsMjN2eEo0ZlQ4M3RnN1FSZ2R6eVI2N0YKN0IxMEFheGJjNFRkclVRWi9mcXMvWU05ZjNJWWNsK2U1djZITFl4cW1FN2xkRjN6ZEgybUwvckU3MmgvUjRKcApybS9YQldaYXpwM2ViNU9tdmpYc3B0bkdpN3NzYncrMlA2TzFGMGRZRDZTaWFoUjkvaGl0N2lMVXZIakRaWm9XCnByZEc0T2RYYUxYallHLzBBK3VTaHBRRnlwaDdsUGErVFl6UkFIcE1tODArSmZ6YnRKS1dmMlBpd2JzSmF3ZVUKWEZtaklReDI2QWZoZlJ4SUQxTldXTmgvZEdmQWNEQ0pYUTYvWlVSZFhreklnbjVKL1NpZXhSTHhKN1JFcnIrOQpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZXBVZ09DNFhNSWtJMlNrNFBubGtOVTdtYlRBYWwxVDZhV3BmN09Oc3oKWFJENDNGUTY1WjZVVlZScmgvZzkzWGNCL2w1aE9yaDJSZUlGZ0JyR2J1d1FweVpTTzRUUEM2WDlhMjNRWENRMQpidkhxeFVmYlB2YWc0Um93T28yeWs5UDJiSkhOOEZ1N2pEUGpENHV6OUgvbmZJNHgxNzJSVGJmMW1NTm1nL1BvClpBSDN3N0tONzhzcVhzOEQ4dDMvYmhZVE94RFNlZWEzd0Y3MzFrVlNJbEtvb1B4Y092NGl6alQxa1MvMExPSEwKb1RhQ1poV01IdGtXbGN0WVpkSS80d2lCdTdDSExITmNHMG5NbXVKcVFxSXFCa0ZNczQ2YmZtcmdPaFFkWXk5TQpDaXFqZkovbnQrTjJlNlEzclAyL3k5VzUrRU4xZ3V6Z1lBM0lLcWpWYklPYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  namespace: M3NjYWxlLXByb2plY3Q=
  service-ca.crt: 
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltaHBUMmsyVGtFd1N6aHVUMHBhV0VaemVUSnpaMEk1VDJkbFpXczViSFUzTFU5d1FscEhWV05tVW1NaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUl6YzJOaGJHVXRjSEp2YW1WamRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSXpjMk5oYkdVdGIzQmxjbUYwYjNJdGRHOXJaVzR0ZERJMGJqa2lMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzV1WVcxbElqb2lNM05qWVd4bExXOXdaWEpoZEc5eUlpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVkV2xrSWpvaVltRXhabUppTURBdE56VmtaUzAwWmpsaUxXSm1aREV0TXpkbFlUY3pNamc1TVRCbElpd2ljM1ZpSWpvaWMzbHpkR1Z0T25ObGNuWnBZMlZoWTJOdmRXNTBPak56WTJGc1pTMXdjbTlxWldOME9qTnpZMkZzWlMxdmNHVnlZWFJ2Y2lKOS5rRVplZXVWX29Rd2Ywd0thS3loYnRDZG1NdkZ6WUJxdk9pZl9jRVlkbGNzVlNuM1E5NUJUcHRhNEZPdVF3N1pEU0N1cklDdThmY1JOcWxVQmEwTHU1REUxS0IxX2d4NTRHNzRqcDRpT0lDR0JFOFIydlIwRVlUQ3JBTXJWNWJDQm5DbFZDZUVsVl9WTTFvekNicjBqN0k5Zm9hOEFhaWl6Y2tXU0lmc3Y4a2lvcmxyZUt5bGs4MkZtSVpnNEZkbVVQM3J1SXQ5Z3oybnBOandReE85ZHBDN0ptTDZVamV6bkxxTHd3MFZMdERDLVBMR1k1ZmhubVZiSWFVVTNzWWZPM3dTYnBoUVE0X1FsVXhTeFQ2dXlDRFFmNWV1Y2RxaXJRUDI5M0xWaG1yYVVJbjJtMTFPcXFyOWRqUWROTUJTbWpTUjhRS0hza0ItTERPdG12VjMyV0E=
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: 3scale-operator
    kubernetes.io/service-account.uid: ba1fbb00-75de-4f9b-bfd1-37ea7328910e
  creationTimestamp: "2020-07-27T12:57:04Z"
  name: 3scale-operator-token-t24n9
  namespace: 3scale-project
  resourceVersion: "198370753"
  selfLink: /api/v1/namespaces/3scale-project/secrets/3scale-operator-token-t24n9
  uid: a5ed6784-1026-4049-af0b-cdacfe8733cc
type: kubernetes.io/service-account-token
apiVersion: v1
data:
  .dockercfg: 
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: amp
    kubernetes.io/service-account.uid: 4880817f-5411-42aa-9984-b37ac04fafff
    openshift.io/token-secret.name: amp-token-p5gh8
    openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6ImhpT2k2TkEwSzhuT0paWEZzeTJzZ0I5T2dlZWs5bHU3LU9wQlpHVWNmUmMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiIzc2NhbGUtcHJvamVjdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhbXAtdG9rZW4tcDVnaDgiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiYW1wIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNDg4MDgxN2YtNTQxMS00MmFhLTk5ODQtYjM3YWMwNGZhZmZmIiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50OjNzY2FsZS1wcm9qZWN0OmFtcCJ9.Tay_DdwPz0EDhCSfSZWnDd5ZUdeFjfU7cC3CQl7U_9G0vDTww_9N-I19tuXtDpQ4WcDMETFrFjuth7RNUHIRr46QWaZTWs1iHxRu8yaJFhzq66bOyZ0Di0882KPE_IyNtUzYY5HhFqR_cYX3FmTY5ljitKPV9ZFDeyp685TseHeYCYLs_4KIW7mKZvu-u7dvkUnNBCj2xKFBgpXBAim2d44GBppHMozbNEkju7ob9EaNDllcqOdcD4hj-dix6WvQrheY_RNlimwpU4fWn2zBK_jBbzpjbUnj14Rr1Qro5F64rrVL-ZDp3UfTI7AJpiTTtuebq0Kv24w7hQT_acVPSA
  creationTimestamp: "2020-07-27T13:05:49Z"
  name: amp-dockercfg-cvfh4
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: v1
    blockOwnerDeletion: false
    controller: true
    kind: Secret
    name: amp-token-p5gh8
    uid: 1a9eb890-1694-437a-91fc-51ad819557cf
  resourceVersion: "198378345"
  selfLink: /api/v1/namespaces/3scale-project/secrets/amp-dockercfg-cvfh4
  uid: 5adea72d-941e-4ad2-a187-0701b9a4be13
type: kubernetes.io/dockercfg
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJSU9LRGtxcVpKUnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qRXlNakF5TVRJMVdoY05Namt4TWpBNU1qQXlNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxXN0NtNkgyc050WkhQT1pNanFhOWtNT1BKdHJQUgovSnFWSFJzWGdBYmdUSjhmdmVJenVEejhjc1RobSthYU1zUWxwR3BITHpXZkExK3lVc3hibkZCOGpibmNxdzJoCnFrZ1pzTjluMHBEKzc5SkcyWE9UeTMxV04wTThKMWRVRko5K1VuckVJYXUwYWlya3VrTnZDV2xkcnAwMkFzOEUKclc5dlh2NEhhdTRLemE5enB3TEFVK1Fsc3l4c0tzRk9BM1JkZm9QR2NkakRzZWowT1hlN0t3R1dvR0hycjc1Ygp6K0JmbmV4WUcwNWQyZHRhQi9yUnN4RmlPL2RKai9PS3hEY0NXT1RXWU5XY1lGQ0lKSVJyZVJYSE1XUUNRS0c5ClBEQ1pxb0ZKMGhkUlhBTlNMaUlLUkJqcEw0VEZaTGFzU3h0WVZZT1E2d1BpWS9WUDJEL1dqQzBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPbwptOVhXKzFYNWwwaXpzWHRwN2l6dzByL2lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFrdWhvdG1tTFp4V3Q1ClVnZXF1TTJEMXlvU2xIVDhxazlIb3VrVmJ4S1JuZWxEUG1GVkhJNU1NRkhnWmRnTUd3ZU90VS9QdjNHd21ZNHQKNlRJbE4wVXQxWloxL094S1JiTEc3M3Yrb0tNa1dFa3FBenl4N250MUtBZUFqQi9tVDE2SUdaVERFOExoY25FRgpCMGxVMnd2aGExMnYvYjgxeTQ2c3pLcG03eXFIenZ4d2JGZUtLK2dhTlJvN1lGbUUvNm5rQlJTSHdqSk84cmVwCmFqMlFmbDJaUHBmRlVPdjFheU9hY1lXUHBua2YzZFBSelMxY25IeUZJVnFQSmxqZTByVDVZNlk3Qy94Y3pGV04KRjhXTGlBTTdJQlFVTUdVUDlOd1p1NDc3NEVWbEpsZnRqWEdEcWg3UkFWViszU05aNTBuWjVFdHpONHdoNUxYYwppcEI0Sy9PUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1YclhlcmdVY3JFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1USXhNakl3TWpFeU5Wb1hEVEk1TVRJd09USXdNakV5TlZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eXJscGROZ3dGOGgKMGN3ekRKRUdPcmZBb2RsdUtOUTRXYmprVGM3ajJXY0hpQ2hhQUhtLytrOCtueTdJYVAvT1NiMkh0c0lOOFVaOApSY0ZwREdpWDBKczFHcnN4Q3lXVkZ1VndoRE44UHZRc1NkYjJDamJNMlVYdDZuVzRNZmRuUUIzcDdmM1lneHY3CmEyWFFLUndkTzhhSExhWWRGK1BvaUNDVGMyQURHMVJ1UzVvWEV2Y1ZBa3JLaDFDMHNLQi9FUFpiSVNIVCtpWDkKeWg1M2VZb3NBalUyOERPL3J5dFpVdU9TS01tbWJqUjRVOUxiVlE0ZUkrMzVPWU9UZi9iNTJ0bjhWRFVzdXBIbgpVWU8vaWs5d2w5RmFQKzlGdm9WQjdIUXNwaFdVOGpSZy9RSElMTjNXREQ0R1RKTlkwVzVIMDNweGVIWmNHbHVLCmV1VS9IbjgwZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdxNjRJbDNyUEZ1RVVkNWFjOUhQNGt1dmF0TXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJJemg5cWpzQkVLTWs1QVd2ZkFKNGY0WEN2dDJiYjZCM1VMNkk3TUprVDAxZU5DalRMSDlwZVJsVG5pCk1WOFZ3VGtkWXpKN3FGV01ubTZ6NW1PRzZyc01TbG9YNithTklmT0h5c1YvUGpxVFhzV2R4RzBrTGNod0xmUEoKYzlqSTA5c3FuejhxOGZaYUdyTUZhdUpqZ0g2UTVSbHA4VmZyM0ZYRm1Ib2tTdEhvZHVQQ2JFblBvMVlvK2VYegpMditCa013aHEzbmN4a2lXclZ3NEtrSnY1S2V4cklWNTI5eDJpbHdCU1BLSitiTXdlNDlRWEp0cEVSeFBYV1VBCnU5bzRJVnVINDk2VWpMSzBQOWhaa3dMblgzVlJxcE1nZVhJdUszTEROcDhSbWRRcGszcE9nUFBFM2VpRHFTc24KNERHY1prYzVCakRGR25mNElOdjlwN1Roc3lZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSWNnelB0Slk5aEVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRJeE1qSXdNakV5TlZvWERUSTVNVEl3T1RJd01qRXlOVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTMrb2xmb20yK25jbzk1SFlMZnBTaURoYWwvVWM0cExzT2VKMFcvSlA2RWRHQW1aVElWVXFxS3EzWko1WgpXaHhQS25KV2JxWEsrWkZSZkgrdnN2ZUNSNEkwK1J1MnNyUU5MVTlZb2drNUN5Yy9UNStlekpEaDQvZ1piL0FpCmF5T3FxV1RSSHQ5bkExUWdYR01KS3FERGh0TmUvcXQ1WnBoTWFXd0ZnNE96TkhRWGxaRnpMUDhkOC9KTlFEZUQKODFBZ3l2bG90TVRBQWZWTkpNN05VYXBGNTdUSE5OVnFvM01nSkVxSkhoU3lZWkhka3pCaEhyOXJXZGRNVktMbQorc1lINmdvQ0E2UDRYY1hoZmg3ak85UGJaTnp6UGZ6QUhBd0RkejNybFM0U3FadGZkZUVOWC8vc2VzS0xGdUN4CmxHSEQxOXV0bEpDQW9PMUVkUGhuR2hqb1RRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYMU5IY3N3a1V4V3UzcEoyWldXZUhneW5QYzh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFR0FzY2kyUjJvajRFcUVDNVBVajdRRjFZZ0VucmNWa2VVYWpBN21paFArCmdOeVpDWDV4VEx1WVpaSnByOURqWFdVQlNsdDgyZEtNeDR3TkdDb0IwMnM0VVNTOElWQllGV3dnc29wL3hxTmsKSS9Xalc2TTlyT2ZBTGk1UzhVT3NseHBndEd5aUh2c3J2cHBQQ0Z6YmZ4dUUwdzEwUW9oVzhvdFpkYWlWS09jMQo2MkllTGRGc2swb2dWMGNjUVV6QlpBQmQ5ZXRaMnAvZGxxenhsOVhIQklTdG9KWVVwOHNOQzFHdCtkeHhnekFJCnVKbkRRUnhEaWtLYVNLZWtCa2crS2J3RUQ5WGdLazhqVUhBNkVFd0tHM2xkbTY5eWZ5ZzJEeUNjcVNsMkVNdlcKdlBncU5GZmZOblhOZGIzQ01zRGoycTJ3SjJKeStlcGlieDVLdHNFVHQzRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9Ea3pPRFUxTWpFd0hoY05NakF3TlRFek1UVTFPRFF3V2hjTk16QXcKTlRFeE1UVTFPRFF4V2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRGt6Ck9EVTFNakV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p4bUQ3a3hDbHg3a0EKTDhxWm5LSFphTVZ5TmJwSzBvem91UW9ENzZMV1lqTnNYRlRXVmlRdUppUml2WEtnVThmU2hISWJJdDFGSU5rcwpGZUZ4QkRad1BFMWhqcHZEUHcrY2Q3emhZcUFpbUtkdHlRMDE4RjBTR0VKNnpab25XZENZeHNxbkZWaEtOSzR2Cmk2czU2TmRTN1RPRUozNmNDbWt0YlovVEE4cXdtYVI1NkdTM2pPZUNIa0FwQ2pRNnpxS1dnTmNmR1VmWGJRZjAKS0VMK1lvZ0R2OVVRMjFOcTBhVHlUcnVhSUlQRy9KUWtiNlFQeTluNVo1d3NWR0RGenp6MjFQbXhhN3lVZDJPUApodGFOZ1Mza053WnJ2TjZ6ODNRdkVEVjdTWnNpTUgvUkpGaDZZTVdnQllXeTA2dU9kK3RvMGoyTXc5c0lSaDFoCnd3c3Z1K0Z4QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVitCQzFGTHFZSW1TbUJDVy9ONC8xdzlQanV6QWZCZ05WSFNNRUdEQVdnQlNWK0JDMQpGTHFZSW1TbUJDVy9ONC8xdzlQanV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGcVdBNUMxdUNnZFpmRWlXCjRMZnB6bjA3WEZKVDJGb0h3eEpwNGF4S21WbTg1Q0tpdklyaEJvVDBuN1o1S3lvOElPYWgzTytldzJWS2xsWVMKWU81VHpwVS9GME96azJxRTgwcCtkVDFSY3hTZ2ZCUktyQlc3b3ozN2I0V1g0blNoK0QyUit5M3UyRXp0TTRjcAp3c0E5NzlzNHhSdXpXZkJ5OWNnQTJvQnZrNzhaTzJHMCtJSVRJdlFLSHRnbTZmUjZsM243Qm9PcGpQWm1wT1hXCkMrVlJtckJCYjZmcVMzWGNUMTIrdFpLR3NJNVU4S1k4d3dUQkY0MWJnRkk4OGg2emJ5amZHMFJvVm5xUXdNMGsKYy9aL1ZhL2IwV0hFVGVEQkc1aUVEbDlONTI3SXdJZXFrRmxjN1pqYW9pQTE0K3ZlWnFQS1k4SFFuTFZscTI1ZQpaRmxPbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxTnpZeE9EWXdOelF3SGhjTk1Ua3hNakV5TWpFeU56VXpXaGNOTWpFeE1qRXgKTWpFeU56VTBXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU56WXhPRFl3TnpRdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETEx3cEdIdkpUeHFpN0VpQVgxTmNxCjhDQlpIanZEeXEwKy84Z2FtZDJDU0hIY096bGljTlhGUG4rOUlDWURsMjN2eEo0ZlQ4M3RnN1FSZ2R6eVI2N0YKN0IxMEFheGJjNFRkclVRWi9mcXMvWU05ZjNJWWNsK2U1djZITFl4cW1FN2xkRjN6ZEgybUwvckU3MmgvUjRKcApybS9YQldaYXpwM2ViNU9tdmpYc3B0bkdpN3NzYncrMlA2TzFGMGRZRDZTaWFoUjkvaGl0N2lMVXZIakRaWm9XCnByZEc0T2RYYUxYallHLzBBK3VTaHBRRnlwaDdsUGErVFl6UkFIcE1tODArSmZ6YnRKS1dmMlBpd2JzSmF3ZVUKWEZtaklReDI2QWZoZlJ4SUQxTldXTmgvZEdmQWNEQ0pYUTYvWlVSZFhreklnbjVKL1NpZXhSTHhKN1JFcnIrOQpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZXBVZ09DNFhNSWtJMlNrNFBubGtOVTdtYlRBYWwxVDZhV3BmN09Oc3oKWFJENDNGUTY1WjZVVlZScmgvZzkzWGNCL2w1aE9yaDJSZUlGZ0JyR2J1d1FweVpTTzRUUEM2WDlhMjNRWENRMQpidkhxeFVmYlB2YWc0Um93T28yeWs5UDJiSkhOOEZ1N2pEUGpENHV6OUgvbmZJNHgxNzJSVGJmMW1NTm1nL1BvClpBSDN3N0tONzhzcVhzOEQ4dDMvYmhZVE94RFNlZWEzd0Y3MzFrVlNJbEtvb1B4Y092NGl6alQxa1MvMExPSEwKb1RhQ1poV01IdGtXbGN0WVpkSS80d2lCdTdDSExITmNHMG5NbXVKcVFxSXFCa0ZNczQ2YmZtcmdPaFFkWXk5TQpDaXFqZkovbnQrTjJlNlEzclAyL3k5VzUrRU4xZ3V6Z1lBM0lLcWpWYklPYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  namespace: M3NjYWxlLXByb2plY3Q=
  service-ca.crt: 
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltaHBUMmsyVGtFd1N6aHVUMHBhV0VaemVUSnpaMEk1VDJkbFpXczViSFUzTFU5d1FscEhWV05tVW1NaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUl6YzJOaGJHVXRjSEp2YW1WamRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSmhiWEF0ZEc5clpXNHROV050Y0hFaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaVlXMXdJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1ZFdsa0lqb2lORGc0TURneE4yWXROVFF4TVMwME1tRmhMVGs1T0RRdFlqTTNZV013TkdaaFptWm1JaXdpYzNWaUlqb2ljM2x6ZEdWdE9uTmxjblpwWTJWaFkyTnZkVzUwT2pOelkyRnNaUzF3Y205cVpXTjBPbUZ0Y0NKOS5qeDlYUXpTakZ1UW9Yclk0cldtUmhtUnpuS0M2ZHVvVFR4UnBrWkR6NTl2NHFzd3lYNVpwVHFTVTN3UDlIekwxMlMyU04wVEJidEcybHVWWm5TR1F3ajFGUE1fbzQtWHhGRXFOS3BGc2RZTThOZF9kUmwxR1ZSSUxneVFVZmpWVkZmZGxpeEtDMHdqMDBKTjVKRXBNbndjZS1pZUtHdzFrMUU3NnhZbUhJX09oNmdkZHRRSlBKQjRwQzFhMWZEMU82cThoVHNhUFIzcElwZTlUSzBqSHQzOHRQcG5XUHpWTVA0aV9QU1Vsb2REb2V3OFJ0N042Sncwb0p4c1F5ZUJZNEVMRzktYmZ6Sll6NjUtYjl1SVBfSHNVakdtYUxScElQeXRTRWNJaWxWeDNjYTdOT2I1YUhuNXpPYXhYWXpmaTdPNDdQSkZCdm1LblZyN1AxeWxHWHc=
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: amp
    kubernetes.io/service-account.uid: 4880817f-5411-42aa-9984-b37ac04fafff
  creationTimestamp: "2020-07-27T13:05:49Z"
  name: amp-token-5cmpq
  namespace: 3scale-project
  resourceVersion: "198378343"
  selfLink: /api/v1/namespaces/3scale-project/secrets/amp-token-5cmpq
  uid: ffea5832-a597-46cc-a020-012b0b74d25b
type: kubernetes.io/service-account-token
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJSU9LRGtxcVpKUnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qRXlNakF5TVRJMVdoY05Namt4TWpBNU1qQXlNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxXN0NtNkgyc050WkhQT1pNanFhOWtNT1BKdHJQUgovSnFWSFJzWGdBYmdUSjhmdmVJenVEejhjc1RobSthYU1zUWxwR3BITHpXZkExK3lVc3hibkZCOGpibmNxdzJoCnFrZ1pzTjluMHBEKzc5SkcyWE9UeTMxV04wTThKMWRVRko5K1VuckVJYXUwYWlya3VrTnZDV2xkcnAwMkFzOEUKclc5dlh2NEhhdTRLemE5enB3TEFVK1Fsc3l4c0tzRk9BM1JkZm9QR2NkakRzZWowT1hlN0t3R1dvR0hycjc1Ygp6K0JmbmV4WUcwNWQyZHRhQi9yUnN4RmlPL2RKai9PS3hEY0NXT1RXWU5XY1lGQ0lKSVJyZVJYSE1XUUNRS0c5ClBEQ1pxb0ZKMGhkUlhBTlNMaUlLUkJqcEw0VEZaTGFzU3h0WVZZT1E2d1BpWS9WUDJEL1dqQzBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPbwptOVhXKzFYNWwwaXpzWHRwN2l6dzByL2lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFrdWhvdG1tTFp4V3Q1ClVnZXF1TTJEMXlvU2xIVDhxazlIb3VrVmJ4S1JuZWxEUG1GVkhJNU1NRkhnWmRnTUd3ZU90VS9QdjNHd21ZNHQKNlRJbE4wVXQxWloxL094S1JiTEc3M3Yrb0tNa1dFa3FBenl4N250MUtBZUFqQi9tVDE2SUdaVERFOExoY25FRgpCMGxVMnd2aGExMnYvYjgxeTQ2c3pLcG03eXFIenZ4d2JGZUtLK2dhTlJvN1lGbUUvNm5rQlJTSHdqSk84cmVwCmFqMlFmbDJaUHBmRlVPdjFheU9hY1lXUHBua2YzZFBSelMxY25IeUZJVnFQSmxqZTByVDVZNlk3Qy94Y3pGV04KRjhXTGlBTTdJQlFVTUdVUDlOd1p1NDc3NEVWbEpsZnRqWEdEcWg3UkFWViszU05aNTBuWjVFdHpONHdoNUxYYwppcEI0Sy9PUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1YclhlcmdVY3JFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1USXhNakl3TWpFeU5Wb1hEVEk1TVRJd09USXdNakV5TlZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eXJscGROZ3dGOGgKMGN3ekRKRUdPcmZBb2RsdUtOUTRXYmprVGM3ajJXY0hpQ2hhQUhtLytrOCtueTdJYVAvT1NiMkh0c0lOOFVaOApSY0ZwREdpWDBKczFHcnN4Q3lXVkZ1VndoRE44UHZRc1NkYjJDamJNMlVYdDZuVzRNZmRuUUIzcDdmM1lneHY3CmEyWFFLUndkTzhhSExhWWRGK1BvaUNDVGMyQURHMVJ1UzVvWEV2Y1ZBa3JLaDFDMHNLQi9FUFpiSVNIVCtpWDkKeWg1M2VZb3NBalUyOERPL3J5dFpVdU9TS01tbWJqUjRVOUxiVlE0ZUkrMzVPWU9UZi9iNTJ0bjhWRFVzdXBIbgpVWU8vaWs5d2w5RmFQKzlGdm9WQjdIUXNwaFdVOGpSZy9RSElMTjNXREQ0R1RKTlkwVzVIMDNweGVIWmNHbHVLCmV1VS9IbjgwZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdxNjRJbDNyUEZ1RVVkNWFjOUhQNGt1dmF0TXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJJemg5cWpzQkVLTWs1QVd2ZkFKNGY0WEN2dDJiYjZCM1VMNkk3TUprVDAxZU5DalRMSDlwZVJsVG5pCk1WOFZ3VGtkWXpKN3FGV01ubTZ6NW1PRzZyc01TbG9YNithTklmT0h5c1YvUGpxVFhzV2R4RzBrTGNod0xmUEoKYzlqSTA5c3FuejhxOGZaYUdyTUZhdUpqZ0g2UTVSbHA4VmZyM0ZYRm1Ib2tTdEhvZHVQQ2JFblBvMVlvK2VYegpMditCa013aHEzbmN4a2lXclZ3NEtrSnY1S2V4cklWNTI5eDJpbHdCU1BLSitiTXdlNDlRWEp0cEVSeFBYV1VBCnU5bzRJVnVINDk2VWpMSzBQOWhaa3dMblgzVlJxcE1nZVhJdUszTEROcDhSbWRRcGszcE9nUFBFM2VpRHFTc24KNERHY1prYzVCakRGR25mNElOdjlwN1Roc3lZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSWNnelB0Slk5aEVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRJeE1qSXdNakV5TlZvWERUSTVNVEl3T1RJd01qRXlOVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTMrb2xmb20yK25jbzk1SFlMZnBTaURoYWwvVWM0cExzT2VKMFcvSlA2RWRHQW1aVElWVXFxS3EzWko1WgpXaHhQS25KV2JxWEsrWkZSZkgrdnN2ZUNSNEkwK1J1MnNyUU5MVTlZb2drNUN5Yy9UNStlekpEaDQvZ1piL0FpCmF5T3FxV1RSSHQ5bkExUWdYR01KS3FERGh0TmUvcXQ1WnBoTWFXd0ZnNE96TkhRWGxaRnpMUDhkOC9KTlFEZUQKODFBZ3l2bG90TVRBQWZWTkpNN05VYXBGNTdUSE5OVnFvM01nSkVxSkhoU3lZWkhka3pCaEhyOXJXZGRNVktMbQorc1lINmdvQ0E2UDRYY1hoZmg3ak85UGJaTnp6UGZ6QUhBd0RkejNybFM0U3FadGZkZUVOWC8vc2VzS0xGdUN4CmxHSEQxOXV0bEpDQW9PMUVkUGhuR2hqb1RRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYMU5IY3N3a1V4V3UzcEoyWldXZUhneW5QYzh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFR0FzY2kyUjJvajRFcUVDNVBVajdRRjFZZ0VucmNWa2VVYWpBN21paFArCmdOeVpDWDV4VEx1WVpaSnByOURqWFdVQlNsdDgyZEtNeDR3TkdDb0IwMnM0VVNTOElWQllGV3dnc29wL3hxTmsKSS9Xalc2TTlyT2ZBTGk1UzhVT3NseHBndEd5aUh2c3J2cHBQQ0Z6YmZ4dUUwdzEwUW9oVzhvdFpkYWlWS09jMQo2MkllTGRGc2swb2dWMGNjUVV6QlpBQmQ5ZXRaMnAvZGxxenhsOVhIQklTdG9KWVVwOHNOQzFHdCtkeHhnekFJCnVKbkRRUnhEaWtLYVNLZWtCa2crS2J3RUQ5WGdLazhqVUhBNkVFd0tHM2xkbTY5eWZ5ZzJEeUNjcVNsMkVNdlcKdlBncU5GZmZOblhOZGIzQ01zRGoycTJ3SjJKeStlcGlieDVLdHNFVHQzRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9Ea3pPRFUxTWpFd0hoY05NakF3TlRFek1UVTFPRFF3V2hjTk16QXcKTlRFeE1UVTFPRFF4V2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRGt6Ck9EVTFNakV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p4bUQ3a3hDbHg3a0EKTDhxWm5LSFphTVZ5TmJwSzBvem91UW9ENzZMV1lqTnNYRlRXVmlRdUppUml2WEtnVThmU2hISWJJdDFGSU5rcwpGZUZ4QkRad1BFMWhqcHZEUHcrY2Q3emhZcUFpbUtkdHlRMDE4RjBTR0VKNnpab25XZENZeHNxbkZWaEtOSzR2Cmk2czU2TmRTN1RPRUozNmNDbWt0YlovVEE4cXdtYVI1NkdTM2pPZUNIa0FwQ2pRNnpxS1dnTmNmR1VmWGJRZjAKS0VMK1lvZ0R2OVVRMjFOcTBhVHlUcnVhSUlQRy9KUWtiNlFQeTluNVo1d3NWR0RGenp6MjFQbXhhN3lVZDJPUApodGFOZ1Mza053WnJ2TjZ6ODNRdkVEVjdTWnNpTUgvUkpGaDZZTVdnQllXeTA2dU9kK3RvMGoyTXc5c0lSaDFoCnd3c3Z1K0Z4QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVitCQzFGTHFZSW1TbUJDVy9ONC8xdzlQanV6QWZCZ05WSFNNRUdEQVdnQlNWK0JDMQpGTHFZSW1TbUJDVy9ONC8xdzlQanV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGcVdBNUMxdUNnZFpmRWlXCjRMZnB6bjA3WEZKVDJGb0h3eEpwNGF4S21WbTg1Q0tpdklyaEJvVDBuN1o1S3lvOElPYWgzTytldzJWS2xsWVMKWU81VHpwVS9GME96azJxRTgwcCtkVDFSY3hTZ2ZCUktyQlc3b3ozN2I0V1g0blNoK0QyUit5M3UyRXp0TTRjcAp3c0E5NzlzNHhSdXpXZkJ5OWNnQTJvQnZrNzhaTzJHMCtJSVRJdlFLSHRnbTZmUjZsM243Qm9PcGpQWm1wT1hXCkMrVlJtckJCYjZmcVMzWGNUMTIrdFpLR3NJNVU4S1k4d3dUQkY0MWJnRkk4OGg2emJ5amZHMFJvVm5xUXdNMGsKYy9aL1ZhL2IwV0hFVGVEQkc1aUVEbDlONTI3SXdJZXFrRmxjN1pqYW9pQTE0K3ZlWnFQS1k4SFFuTFZscTI1ZQpaRmxPbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxTnpZeE9EWXdOelF3SGhjTk1Ua3hNakV5TWpFeU56VXpXaGNOTWpFeE1qRXgKTWpFeU56VTBXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU56WXhPRFl3TnpRdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETEx3cEdIdkpUeHFpN0VpQVgxTmNxCjhDQlpIanZEeXEwKy84Z2FtZDJDU0hIY096bGljTlhGUG4rOUlDWURsMjN2eEo0ZlQ4M3RnN1FSZ2R6eVI2N0YKN0IxMEFheGJjNFRkclVRWi9mcXMvWU05ZjNJWWNsK2U1djZITFl4cW1FN2xkRjN6ZEgybUwvckU3MmgvUjRKcApybS9YQldaYXpwM2ViNU9tdmpYc3B0bkdpN3NzYncrMlA2TzFGMGRZRDZTaWFoUjkvaGl0N2lMVXZIakRaWm9XCnByZEc0T2RYYUxYallHLzBBK3VTaHBRRnlwaDdsUGErVFl6UkFIcE1tODArSmZ6YnRKS1dmMlBpd2JzSmF3ZVUKWEZtaklReDI2QWZoZlJ4SUQxTldXTmgvZEdmQWNEQ0pYUTYvWlVSZFhreklnbjVKL1NpZXhSTHhKN1JFcnIrOQpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZXBVZ09DNFhNSWtJMlNrNFBubGtOVTdtYlRBYWwxVDZhV3BmN09Oc3oKWFJENDNGUTY1WjZVVlZScmgvZzkzWGNCL2w1aE9yaDJSZUlGZ0JyR2J1d1FweVpTTzRUUEM2WDlhMjNRWENRMQpidkhxeFVmYlB2YWc0Um93T28yeWs5UDJiSkhOOEZ1N2pEUGpENHV6OUgvbmZJNHgxNzJSVGJmMW1NTm1nL1BvClpBSDN3N0tONzhzcVhzOEQ4dDMvYmhZVE94RFNlZWEzd0Y3MzFrVlNJbEtvb1B4Y092NGl6alQxa1MvMExPSEwKb1RhQ1poV01IdGtXbGN0WVpkSS80d2lCdTdDSExITmNHMG5NbXVKcVFxSXFCa0ZNczQ2YmZtcmdPaFFkWXk5TQpDaXFqZkovbnQrTjJlNlEzclAyL3k5VzUrRU4xZ3V6Z1lBM0lLcWpWYklPYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  namespace: M3NjYWxlLXByb2plY3Q=
  service-ca.crt: 
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltaHBUMmsyVGtFd1N6aHVUMHBhV0VaemVUSnpaMEk1VDJkbFpXczViSFUzTFU5d1FscEhWV05tVW1NaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUl6YzJOaGJHVXRjSEp2YW1WamRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSmhiWEF0ZEc5clpXNHRjRFZuYURnaUxDSnJkV0psY201bGRHVnpMbWx2TDNObGNuWnBZMlZoWTJOdmRXNTBMM05sY25acFkyVXRZV05qYjNWdWRDNXVZVzFsSWpvaVlXMXdJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1ZFdsa0lqb2lORGc0TURneE4yWXROVFF4TVMwME1tRmhMVGs1T0RRdFlqTTNZV013TkdaaFptWm1JaXdpYzNWaUlqb2ljM2x6ZEdWdE9uTmxjblpwWTJWaFkyTnZkVzUwT2pOelkyRnNaUzF3Y205cVpXTjBPbUZ0Y0NKOS5UYXlfRGR3UHowRURoQ1NmU1pXbkRkNVpVZGVGamZVN2NDM0NRbDdVXzlHMHZEVHd3XzlOLUkxOXR1WHREcFE0V2NETUVURnJGanV0aDdSTlVISVJyNDZRV2FaVFdzMWlIeFJ1OHlhSkZoenE2NmJPeVowRGkwODgyS1BFX0l5TnRVellZNUhoRnFSX2NZWDNGbVRZNWxqaXRLUFY5WkZEZXlwNjg1VHNlSGVZQ1lMc180S0lXN21LWnZ1LXU3ZHZrVW5OQkNqMnhLRkJncFhCQWltMmQ0NEdCcHBITW96Yk5Fa2p1N29iOUVhTkRsbGNxT2RjRDRoai1kaXg2V3ZRcmhlWV9STmxpbXdwVTRmV24yekJLX2pCYnpwamJVbmoxNFJyMVFybzVGNjRyclZMLVpEcDNVZlRJN0FKcGlUVHR1ZWJxMEt2MjR3N2hRVF9hY1ZQU0E=
kind: Secret
metadata:
  annotations:
    kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
    kubernetes.io/service-account.name: amp
    kubernetes.io/service-account.uid: 4880817f-5411-42aa-9984-b37ac04fafff
  creationTimestamp: "2020-07-27T13:05:49Z"
  name: amp-token-p5gh8
  namespace: 3scale-project
  resourceVersion: "198378344"
  selfLink: /api/v1/namespaces/3scale-project/secrets/amp-token-p5gh8
  uid: 1a9eb890-1694-437a-91fc-51ad819557cf
type: kubernetes.io/service-account-token
apiVersion: v1
data:
  AdminPortalURL: aHR0cHM6Ly8zMWIyMTQ3ZWFiNzgwZTQ5NjE4MjNjYTFlZjk2YTUxYzMxZDhjYWRlYjE5Zjk4ZGRmODljYzJiNTU0ZDQ0OTAwQGRldi0zc2NhbGUtYWRtaW4uYXBwcy5vc2VwZXh0MDEuY2xhcm8uYW14
kind: Secret
metadata:
  creationTimestamp: "2020-09-11T14:19:21Z"
  name: apicast-dev-production-secret
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIcast
    name: apicast-production-dev
    uid: df2cbdb7-95f4-4885-a68e-f09348683a6d
  resourceVersion: "254094449"
  selfLink: /api/v1/namespaces/3scale-project/secrets/apicast-dev-production-secret
  uid: 9b04022e-d5c6-4a82-b969-97207a283d9f
type: Opaque
apiVersion: v1
data:
  AdminPortalURL: aHR0cHM6Ly8zMWIyMTQ3ZWFiNzgwZTQ5NjE4MjNjYTFlZjk2YTUxYzMxZDhjYWRlYjE5Zjk4ZGRmODljYzJiNTU0ZDQ0OTAwQGRldi0zc2NhbGUtYWRtaW4uYXBwcy5vc2VwZXh0MDEuY2xhcm8uYW14
kind: Secret
metadata:
  creationTimestamp: "2020-09-09T20:36:59Z"
  name: apicast-dev-staging-secret
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIcast
    name: apicast-staging-dev
    uid: ea443588-d7b9-41a1-8a06-2b20f3d40d13
  resourceVersion: "253079521"
  selfLink: /api/v1/namespaces/3scale-project/secrets/apicast-dev-staging-secret
  uid: 7304ed16-f697-4dbf-bdb8-0e2989c82682
type: Opaque
apiVersion: v1
data:
  .dockercfg: 
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: apicast-operator
    kubernetes.io/service-account.uid: aeefaf32-a1ba-4378-a8cc-4d1587b062f5
    openshift.io/token-secret.name: apicast-operator-token-px9bw
    openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6ImhpT2k2TkEwSzhuT0paWEZzeTJzZ0I5T2dlZWs5bHU3LU9wQlpHVWNmUmMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiIzc2NhbGUtcHJvamVjdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhcGljYXN0LW9wZXJhdG9yLXRva2VuLXB4OWJ3Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImFwaWNhc3Qtb3BlcmF0b3IiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJhZWVmYWYzMi1hMWJhLTQzNzgtYThjYy00ZDE1ODdiMDYyZjUiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6M3NjYWxlLXByb2plY3Q6YXBpY2FzdC1vcGVyYXRvciJ9.dc-w7yk9OntdpuQTAjDOFblD7ggvNAGAQ9BR6wMy_wrgwMZtLqrRQKL8Q-uW_Lv0yS_2ztze70QAm56uGVHC5fWLPP68zy_PisU0VhpFxWl4jSJBgNIANYQf3UVDc7cFwGu8in3PwRsh4ThDsOCWkicjRq1N7JF2mWT7fp8ZgQ7A3GQ1AcjABiN6dXlXHwgXroku0ubW7YpaplhyVzIOmfoT9XzgZzVafEgZ064Uqx6gS0Cozj2CleaBSudRoucFE06_Yj22a7h0iA2-LqhIPpan_gqldE7aQYv3EK70w6OX0P_F2uVdBYz9s0F25RfzdOA_dASq147PmV-L4iSLgw
  creationTimestamp: "2020-09-09T20:05:15Z"
  name: apicast-operator-dockercfg-mjbtv
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: v1
    blockOwnerDeletion: false
    controller: true
    kind: Secret
    name: apicast-operator-token-px9bw
    uid: d0e1defc-853a-49ba-a2b8-6d8666ef130c
  resourceVersion: "252198338"
  selfLink: /api/v1/namespaces/3scale-project/secrets/apicast-operator-dockercfg-mjbtv
  uid: 514e8c7f-a93d-4815-85d9-52648cabeb05
type: kubernetes.io/dockercfg
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJSU9LRGtxcVpKUnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qRXlNakF5TVRJMVdoY05Namt4TWpBNU1qQXlNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxXN0NtNkgyc050WkhQT1pNanFhOWtNT1BKdHJQUgovSnFWSFJzWGdBYmdUSjhmdmVJenVEejhjc1RobSthYU1zUWxwR3BITHpXZkExK3lVc3hibkZCOGpibmNxdzJoCnFrZ1pzTjluMHBEKzc5SkcyWE9UeTMxV04wTThKMWRVRko5K1VuckVJYXUwYWlya3VrTnZDV2xkcnAwMkFzOEUKclc5dlh2NEhhdTRLemE5enB3TEFVK1Fsc3l4c0tzRk9BM1JkZm9QR2NkakRzZWowT1hlN0t3R1dvR0hycjc1Ygp6K0JmbmV4WUcwNWQyZHRhQi9yUnN4RmlPL2RKai9PS3hEY0NXT1RXWU5XY1lGQ0lKSVJyZVJYSE1XUUNRS0c5ClBEQ1pxb0ZKMGhkUlhBTlNMaUlLUkJqcEw0VEZaTGFzU3h0WVZZT1E2d1BpWS9WUDJEL1dqQzBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPbwptOVhXKzFYNWwwaXpzWHRwN2l6dzByL2lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFrdWhvdG1tTFp4V3Q1ClVnZXF1TTJEMXlvU2xIVDhxazlIb3VrVmJ4S1JuZWxEUG1GVkhJNU1NRkhnWmRnTUd3ZU90VS9QdjNHd21ZNHQKNlRJbE4wVXQxWloxL094S1JiTEc3M3Yrb0tNa1dFa3FBenl4N250MUtBZUFqQi9tVDE2SUdaVERFOExoY25FRgpCMGxVMnd2aGExMnYvYjgxeTQ2c3pLcG03eXFIenZ4d2JGZUtLK2dhTlJvN1lGbUUvNm5rQlJTSHdqSk84cmVwCmFqMlFmbDJaUHBmRlVPdjFheU9hY1lXUHBua2YzZFBSelMxY25IeUZJVnFQSmxqZTByVDVZNlk3Qy94Y3pGV04KRjhXTGlBTTdJQlFVTUdVUDlOd1p1NDc3NEVWbEpsZnRqWEdEcWg3UkFWViszU05aNTBuWjVFdHpONHdoNUxYYwppcEI0Sy9PUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1YclhlcmdVY3JFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1USXhNakl3TWpFeU5Wb1hEVEk1TVRJd09USXdNakV5TlZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eXJscGROZ3dGOGgKMGN3ekRKRUdPcmZBb2RsdUtOUTRXYmprVGM3ajJXY0hpQ2hhQUhtLytrOCtueTdJYVAvT1NiMkh0c0lOOFVaOApSY0ZwREdpWDBKczFHcnN4Q3lXVkZ1VndoRE44UHZRc1NkYjJDamJNMlVYdDZuVzRNZmRuUUIzcDdmM1lneHY3CmEyWFFLUndkTzhhSExhWWRGK1BvaUNDVGMyQURHMVJ1UzVvWEV2Y1ZBa3JLaDFDMHNLQi9FUFpiSVNIVCtpWDkKeWg1M2VZb3NBalUyOERPL3J5dFpVdU9TS01tbWJqUjRVOUxiVlE0ZUkrMzVPWU9UZi9iNTJ0bjhWRFVzdXBIbgpVWU8vaWs5d2w5RmFQKzlGdm9WQjdIUXNwaFdVOGpSZy9RSElMTjNXREQ0R1RKTlkwVzVIMDNweGVIWmNHbHVLCmV1VS9IbjgwZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdxNjRJbDNyUEZ1RVVkNWFjOUhQNGt1dmF0TXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJJemg5cWpzQkVLTWs1QVd2ZkFKNGY0WEN2dDJiYjZCM1VMNkk3TUprVDAxZU5DalRMSDlwZVJsVG5pCk1WOFZ3VGtkWXpKN3FGV01ubTZ6NW1PRzZyc01TbG9YNithTklmT0h5c1YvUGpxVFhzV2R4RzBrTGNod0xmUEoKYzlqSTA5c3FuejhxOGZaYUdyTUZhdUpqZ0g2UTVSbHA4VmZyM0ZYRm1Ib2tTdEhvZHVQQ2JFblBvMVlvK2VYegpMditCa013aHEzbmN4a2lXclZ3NEtrSnY1S2V4cklWNTI5eDJpbHdCU1BLSitiTXdlNDlRWEp0cEVSeFBYV1VBCnU5bzRJVnVINDk2VWpMSzBQOWhaa3dMblgzVlJxcE1nZVhJdUszTEROcDhSbWRRcGszcE9nUFBFM2VpRHFTc24KNERHY1prYzVCakRGR25mNElOdjlwN1Roc3lZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSWNnelB0Slk5aEVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRJeE1qSXdNakV5TlZvWERUSTVNVEl3T1RJd01qRXlOVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTMrb2xmb20yK25jbzk1SFlMZnBTaURoYWwvVWM0cExzT2VKMFcvSlA2RWRHQW1aVElWVXFxS3EzWko1WgpXaHhQS25KV2JxWEsrWkZSZkgrdnN2ZUNSNEkwK1J1MnNyUU5MVTlZb2drNUN5Yy9UNStlekpEaDQvZ1piL0FpCmF5T3FxV1RSSHQ5bkExUWdYR01KS3FERGh0TmUvcXQ1WnBoTWFXd0ZnNE96TkhRWGxaRnpMUDhkOC9KTlFEZUQKODFBZ3l2bG90TVRBQWZWTkpNN05VYXBGNTdUSE5OVnFvM01nSkVxSkhoU3lZWkhka3pCaEhyOXJXZGRNVktMbQorc1lINmdvQ0E2UDRYY1hoZmg3ak85UGJaTnp6UGZ6QUhBd0RkejNybFM0U3FadGZkZUVOWC8vc2VzS0xGdUN4CmxHSEQxOXV0bEpDQW9PMUVkUGhuR2hqb1RRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYMU5IY3N3a1V4V3UzcEoyWldXZUhneW5QYzh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFR0FzY2kyUjJvajRFcUVDNVBVajdRRjFZZ0VucmNWa2VVYWpBN21paFArCmdOeVpDWDV4VEx1WVpaSnByOURqWFdVQlNsdDgyZEtNeDR3TkdDb0IwMnM0VVNTOElWQllGV3dnc29wL3hxTmsKSS9Xalc2TTlyT2ZBTGk1UzhVT3NseHBndEd5aUh2c3J2cHBQQ0Z6YmZ4dUUwdzEwUW9oVzhvdFpkYWlWS09jMQo2MkllTGRGc2swb2dWMGNjUVV6QlpBQmQ5ZXRaMnAvZGxxenhsOVhIQklTdG9KWVVwOHNOQzFHdCtkeHhnekFJCnVKbkRRUnhEaWtLYVNLZWtCa2crS2J3RUQ5WGdLazhqVUhBNkVFd0tHM2xkbTY5eWZ5ZzJEeUNjcVNsMkVNdlcKdlBncU5GZmZOblhOZGIzQ01zRGoycTJ3SjJKeStlcGlieDVLdHNFVHQzRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9Ea3pPRFUxTWpFd0hoY05NakF3TlRFek1UVTFPRFF3V2hjTk16QXcKTlRFeE1UVTFPRFF4V2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRGt6Ck9EVTFNakV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p4bUQ3a3hDbHg3a0EKTDhxWm5LSFphTVZ5TmJwSzBvem91UW9ENzZMV1lqTnNYRlRXVmlRdUppUml2WEtnVThmU2hISWJJdDFGSU5rcwpGZUZ4QkRad1BFMWhqcHZEUHcrY2Q3emhZcUFpbUtkdHlRMDE4RjBTR0VKNnpab25XZENZeHNxbkZWaEtOSzR2Cmk2czU2TmRTN1RPRUozNmNDbWt0YlovVEE4cXdtYVI1NkdTM2pPZUNIa0FwQ2pRNnpxS1dnTmNmR1VmWGJRZjAKS0VMK1lvZ0R2OVVRMjFOcTBhVHlUcnVhSUlQRy9KUWtiNlFQeTluNVo1d3NWR0RGenp6MjFQbXhhN3lVZDJPUApodGFOZ1Mza053WnJ2TjZ6ODNRdkVEVjdTWnNpTUgvUkpGaDZZTVdnQllXeTA2dU9kK3RvMGoyTXc5c0lSaDFoCnd3c3Z1K0Z4QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVitCQzFGTHFZSW1TbUJDVy9ONC8xdzlQanV6QWZCZ05WSFNNRUdEQVdnQlNWK0JDMQpGTHFZSW1TbUJDVy9ONC8xdzlQanV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGcVdBNUMxdUNnZFpmRWlXCjRMZnB6bjA3WEZKVDJGb0h3eEpwNGF4S21WbTg1Q0tpdklyaEJvVDBuN1o1S3lvOElPYWgzTytldzJWS2xsWVMKWU81VHpwVS9GME96azJxRTgwcCtkVDFSY3hTZ2ZCUktyQlc3b3ozN2I0V1g0blNoK0QyUit5M3UyRXp0TTRjcAp3c0E5NzlzNHhSdXpXZkJ5OWNnQTJvQnZrNzhaTzJHMCtJSVRJdlFLSHRnbTZmUjZsM243Qm9PcGpQWm1wT1hXCkMrVlJtckJCYjZmcVMzWGNUMTIrdFpLR3NJNVU4S1k4d3dUQkY0MWJnRkk4OGg2emJ5amZHMFJvVm5xUXdNMGsKYy9aL1ZhL2IwV0hFVGVEQkc1aUVEbDlONTI3SXdJZXFrRmxjN1pqYW9pQTE0K3ZlWnFQS1k4SFFuTFZscTI1ZQpaRmxPbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxTnpZeE9EWXdOelF3SGhjTk1Ua3hNakV5TWpFeU56VXpXaGNOTWpFeE1qRXgKTWpFeU56VTBXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU56WXhPRFl3TnpRdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETEx3cEdIdkpUeHFpN0VpQVgxTmNxCjhDQlpIanZEeXEwKy84Z2FtZDJDU0hIY096bGljTlhGUG4rOUlDWURsMjN2eEo0ZlQ4M3RnN1FSZ2R6eVI2N0YKN0IxMEFheGJjNFRkclVRWi9mcXMvWU05ZjNJWWNsK2U1djZITFl4cW1FN2xkRjN6ZEgybUwvckU3MmgvUjRKcApybS9YQldaYXpwM2ViNU9tdmpYc3B0bkdpN3NzYncrMlA2TzFGMGRZRDZTaWFoUjkvaGl0N2lMVXZIakRaWm9XCnByZEc0T2RYYUxYallHLzBBK3VTaHBRRnlwaDdsUGErVFl6UkFIcE1tODArSmZ6YnRKS1dmMlBpd2JzSmF3ZVUKWEZtaklReDI2QWZoZlJ4SUQxTldXTmgvZEdmQWNEQ0pYUTYvWlVSZFhreklnbjVKL1NpZXhSTHhKN1JFcnIrOQpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZXBVZ09DNFhNSWtJMlNrNFBubGtOVTdtYlRBYWwxVDZhV3BmN09Oc3oKWFJENDNGUTY1WjZVVlZScmgvZzkzWGNCL2w1aE9yaDJSZUlGZ0JyR2J1d1FweVpTTzRUUEM2WDlhMjNRWENRMQpidkhxeFVmYlB2YWc0Um93T28yeWs5UDJiSkhOOEZ1N2pEUGpENHV6OUgvbmZJNHgxNzJSVGJmMW1NTm1nL1BvClpBSDN3N0tONzhzcVhzOEQ4dDMvYmhZVE94RFNlZWEzd0Y3MzFrVlNJbEtvb1B4Y092NGl6alQxa1MvMExPSEwKb1RhQ1poV01IdGtXbGN0WVpkSS80d2lCdTdDSExITmNHMG5NbXVKcVFxSXFCa0ZNczQ2YmZtcmdPaFFkWXk5TQpDaXFqZkovbnQrTjJlNlEzclAyL3k5VzUrRU4xZ3V6Z1lBM0lLcWpWYklPYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  namespace: M3NjYWxlLXByb2plY3Q=
  service-ca.crt: 
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltaHBUMmsyVGtFd1N6aHVUMHBhV0VaemVUSnpaMEk1VDJkbFpXczViSFUzTFU5d1FscEhWV05tVW1NaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUl6YzJOaGJHVXRjSEp2YW1WamRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSmhjR2xqWVhOMExXOXdaWEpoZEc5eUxYUnZhMlZ1TFhCNE9XSjNJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJbUZ3YVdOaGMzUXRiM0JsY21GMGIzSWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSmhaV1ZtWVdZek1pMWhNV0poTFRRek56Z3RZVGhqWXkwMFpERTFPRGRpTURZeVpqVWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2TTNOallXeGxMWEJ5YjJwbFkzUTZZWEJwWTJGemRDMXZjR1Z5WVhSdmNpSjkuZGMtdzd5azlPbnRkcHVRVEFqRE9GYmxEN2dndk5BR0FROUJSNndNeV93cmd3TVp0THFyUlFLTDhRLXVXX0x2MHlTXzJ6dHplNzBRQW01NnVHVkhDNWZXTFBQNjh6eV9QaXNVMFZocEZ4V2w0alNKQmdOSUFOWVFmM1VWRGM3Y0Z3R3U4aW4zUHdSc2g0VGhEc09DV2tpY2pScTFON0pGMm1XVDdmcDhaZ1E3QTNHUTFBY2pBQmlONmRYbFhId2dYcm9rdTB1Ylc3WXBhcGxoeVZ6SU9tZm9UOVh6Z1p6VmFmRWdaMDY0VXF4NmdTMENvemoyQ2xlYUJTdWRSb3VjRkUwNl9ZajIyYTdoMGlBMi1McWhJUHBhbl9ncWxkRTdhUVl2M0VLNzB3Nk9YMFBfRjJ1VmRCWXo5czBGMjVSZnpkT0FfZEFTcTE0N1BtVi1MNGlTTGd3
kind: Secret
metadata:
  annotations:
    kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
    kubernetes.io/service-account.name: apicast-operator
    kubernetes.io/service-account.uid: aeefaf32-a1ba-4378-a8cc-4d1587b062f5
  creationTimestamp: "2020-09-09T20:05:15Z"
  name: apicast-operator-token-px9bw
  namespace: 3scale-project
  resourceVersion: "252198337"
  selfLink: /api/v1/namespaces/3scale-project/secrets/apicast-operator-token-px9bw
  uid: d0e1defc-853a-49ba-a2b8-6d8666ef130c
type: kubernetes.io/service-account-token
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJSU9LRGtxcVpKUnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qRXlNakF5TVRJMVdoY05Namt4TWpBNU1qQXlNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxXN0NtNkgyc050WkhQT1pNanFhOWtNT1BKdHJQUgovSnFWSFJzWGdBYmdUSjhmdmVJenVEejhjc1RobSthYU1zUWxwR3BITHpXZkExK3lVc3hibkZCOGpibmNxdzJoCnFrZ1pzTjluMHBEKzc5SkcyWE9UeTMxV04wTThKMWRVRko5K1VuckVJYXUwYWlya3VrTnZDV2xkcnAwMkFzOEUKclc5dlh2NEhhdTRLemE5enB3TEFVK1Fsc3l4c0tzRk9BM1JkZm9QR2NkakRzZWowT1hlN0t3R1dvR0hycjc1Ygp6K0JmbmV4WUcwNWQyZHRhQi9yUnN4RmlPL2RKai9PS3hEY0NXT1RXWU5XY1lGQ0lKSVJyZVJYSE1XUUNRS0c5ClBEQ1pxb0ZKMGhkUlhBTlNMaUlLUkJqcEw0VEZaTGFzU3h0WVZZT1E2d1BpWS9WUDJEL1dqQzBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPbwptOVhXKzFYNWwwaXpzWHRwN2l6dzByL2lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFrdWhvdG1tTFp4V3Q1ClVnZXF1TTJEMXlvU2xIVDhxazlIb3VrVmJ4S1JuZWxEUG1GVkhJNU1NRkhnWmRnTUd3ZU90VS9QdjNHd21ZNHQKNlRJbE4wVXQxWloxL094S1JiTEc3M3Yrb0tNa1dFa3FBenl4N250MUtBZUFqQi9tVDE2SUdaVERFOExoY25FRgpCMGxVMnd2aGExMnYvYjgxeTQ2c3pLcG03eXFIenZ4d2JGZUtLK2dhTlJvN1lGbUUvNm5rQlJTSHdqSk84cmVwCmFqMlFmbDJaUHBmRlVPdjFheU9hY1lXUHBua2YzZFBSelMxY25IeUZJVnFQSmxqZTByVDVZNlk3Qy94Y3pGV04KRjhXTGlBTTdJQlFVTUdVUDlOd1p1NDc3NEVWbEpsZnRqWEdEcWg3UkFWViszU05aNTBuWjVFdHpONHdoNUxYYwppcEI0Sy9PUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1YclhlcmdVY3JFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1USXhNakl3TWpFeU5Wb1hEVEk1TVRJd09USXdNakV5TlZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eXJscGROZ3dGOGgKMGN3ekRKRUdPcmZBb2RsdUtOUTRXYmprVGM3ajJXY0hpQ2hhQUhtLytrOCtueTdJYVAvT1NiMkh0c0lOOFVaOApSY0ZwREdpWDBKczFHcnN4Q3lXVkZ1VndoRE44UHZRc1NkYjJDamJNMlVYdDZuVzRNZmRuUUIzcDdmM1lneHY3CmEyWFFLUndkTzhhSExhWWRGK1BvaUNDVGMyQURHMVJ1UzVvWEV2Y1ZBa3JLaDFDMHNLQi9FUFpiSVNIVCtpWDkKeWg1M2VZb3NBalUyOERPL3J5dFpVdU9TS01tbWJqUjRVOUxiVlE0ZUkrMzVPWU9UZi9iNTJ0bjhWRFVzdXBIbgpVWU8vaWs5d2w5RmFQKzlGdm9WQjdIUXNwaFdVOGpSZy9RSElMTjNXREQ0R1RKTlkwVzVIMDNweGVIWmNHbHVLCmV1VS9IbjgwZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdxNjRJbDNyUEZ1RVVkNWFjOUhQNGt1dmF0TXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJJemg5cWpzQkVLTWs1QVd2ZkFKNGY0WEN2dDJiYjZCM1VMNkk3TUprVDAxZU5DalRMSDlwZVJsVG5pCk1WOFZ3VGtkWXpKN3FGV01ubTZ6NW1PRzZyc01TbG9YNithTklmT0h5c1YvUGpxVFhzV2R4RzBrTGNod0xmUEoKYzlqSTA5c3FuejhxOGZaYUdyTUZhdUpqZ0g2UTVSbHA4VmZyM0ZYRm1Ib2tTdEhvZHVQQ2JFblBvMVlvK2VYegpMditCa013aHEzbmN4a2lXclZ3NEtrSnY1S2V4cklWNTI5eDJpbHdCU1BLSitiTXdlNDlRWEp0cEVSeFBYV1VBCnU5bzRJVnVINDk2VWpMSzBQOWhaa3dMblgzVlJxcE1nZVhJdUszTEROcDhSbWRRcGszcE9nUFBFM2VpRHFTc24KNERHY1prYzVCakRGR25mNElOdjlwN1Roc3lZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSWNnelB0Slk5aEVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRJeE1qSXdNakV5TlZvWERUSTVNVEl3T1RJd01qRXlOVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTMrb2xmb20yK25jbzk1SFlMZnBTaURoYWwvVWM0cExzT2VKMFcvSlA2RWRHQW1aVElWVXFxS3EzWko1WgpXaHhQS25KV2JxWEsrWkZSZkgrdnN2ZUNSNEkwK1J1MnNyUU5MVTlZb2drNUN5Yy9UNStlekpEaDQvZ1piL0FpCmF5T3FxV1RSSHQ5bkExUWdYR01KS3FERGh0TmUvcXQ1WnBoTWFXd0ZnNE96TkhRWGxaRnpMUDhkOC9KTlFEZUQKODFBZ3l2bG90TVRBQWZWTkpNN05VYXBGNTdUSE5OVnFvM01nSkVxSkhoU3lZWkhka3pCaEhyOXJXZGRNVktMbQorc1lINmdvQ0E2UDRYY1hoZmg3ak85UGJaTnp6UGZ6QUhBd0RkejNybFM0U3FadGZkZUVOWC8vc2VzS0xGdUN4CmxHSEQxOXV0bEpDQW9PMUVkUGhuR2hqb1RRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYMU5IY3N3a1V4V3UzcEoyWldXZUhneW5QYzh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFR0FzY2kyUjJvajRFcUVDNVBVajdRRjFZZ0VucmNWa2VVYWpBN21paFArCmdOeVpDWDV4VEx1WVpaSnByOURqWFdVQlNsdDgyZEtNeDR3TkdDb0IwMnM0VVNTOElWQllGV3dnc29wL3hxTmsKSS9Xalc2TTlyT2ZBTGk1UzhVT3NseHBndEd5aUh2c3J2cHBQQ0Z6YmZ4dUUwdzEwUW9oVzhvdFpkYWlWS09jMQo2MkllTGRGc2swb2dWMGNjUVV6QlpBQmQ5ZXRaMnAvZGxxenhsOVhIQklTdG9KWVVwOHNOQzFHdCtkeHhnekFJCnVKbkRRUnhEaWtLYVNLZWtCa2crS2J3RUQ5WGdLazhqVUhBNkVFd0tHM2xkbTY5eWZ5ZzJEeUNjcVNsMkVNdlcKdlBncU5GZmZOblhOZGIzQ01zRGoycTJ3SjJKeStlcGlieDVLdHNFVHQzRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9Ea3pPRFUxTWpFd0hoY05NakF3TlRFek1UVTFPRFF3V2hjTk16QXcKTlRFeE1UVTFPRFF4V2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRGt6Ck9EVTFNakV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p4bUQ3a3hDbHg3a0EKTDhxWm5LSFphTVZ5TmJwSzBvem91UW9ENzZMV1lqTnNYRlRXVmlRdUppUml2WEtnVThmU2hISWJJdDFGSU5rcwpGZUZ4QkRad1BFMWhqcHZEUHcrY2Q3emhZcUFpbUtkdHlRMDE4RjBTR0VKNnpab25XZENZeHNxbkZWaEtOSzR2Cmk2czU2TmRTN1RPRUozNmNDbWt0YlovVEE4cXdtYVI1NkdTM2pPZUNIa0FwQ2pRNnpxS1dnTmNmR1VmWGJRZjAKS0VMK1lvZ0R2OVVRMjFOcTBhVHlUcnVhSUlQRy9KUWtiNlFQeTluNVo1d3NWR0RGenp6MjFQbXhhN3lVZDJPUApodGFOZ1Mza053WnJ2TjZ6ODNRdkVEVjdTWnNpTUgvUkpGaDZZTVdnQllXeTA2dU9kK3RvMGoyTXc5c0lSaDFoCnd3c3Z1K0Z4QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVitCQzFGTHFZSW1TbUJDVy9ONC8xdzlQanV6QWZCZ05WSFNNRUdEQVdnQlNWK0JDMQpGTHFZSW1TbUJDVy9ONC8xdzlQanV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGcVdBNUMxdUNnZFpmRWlXCjRMZnB6bjA3WEZKVDJGb0h3eEpwNGF4S21WbTg1Q0tpdklyaEJvVDBuN1o1S3lvOElPYWgzTytldzJWS2xsWVMKWU81VHpwVS9GME96azJxRTgwcCtkVDFSY3hTZ2ZCUktyQlc3b3ozN2I0V1g0blNoK0QyUit5M3UyRXp0TTRjcAp3c0E5NzlzNHhSdXpXZkJ5OWNnQTJvQnZrNzhaTzJHMCtJSVRJdlFLSHRnbTZmUjZsM243Qm9PcGpQWm1wT1hXCkMrVlJtckJCYjZmcVMzWGNUMTIrdFpLR3NJNVU4S1k4d3dUQkY0MWJnRkk4OGg2emJ5amZHMFJvVm5xUXdNMGsKYy9aL1ZhL2IwV0hFVGVEQkc1aUVEbDlONTI3SXdJZXFrRmxjN1pqYW9pQTE0K3ZlWnFQS1k4SFFuTFZscTI1ZQpaRmxPbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxTnpZeE9EWXdOelF3SGhjTk1Ua3hNakV5TWpFeU56VXpXaGNOTWpFeE1qRXgKTWpFeU56VTBXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU56WXhPRFl3TnpRdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETEx3cEdIdkpUeHFpN0VpQVgxTmNxCjhDQlpIanZEeXEwKy84Z2FtZDJDU0hIY096bGljTlhGUG4rOUlDWURsMjN2eEo0ZlQ4M3RnN1FSZ2R6eVI2N0YKN0IxMEFheGJjNFRkclVRWi9mcXMvWU05ZjNJWWNsK2U1djZITFl4cW1FN2xkRjN6ZEgybUwvckU3MmgvUjRKcApybS9YQldaYXpwM2ViNU9tdmpYc3B0bkdpN3NzYncrMlA2TzFGMGRZRDZTaWFoUjkvaGl0N2lMVXZIakRaWm9XCnByZEc0T2RYYUxYallHLzBBK3VTaHBRRnlwaDdsUGErVFl6UkFIcE1tODArSmZ6YnRKS1dmMlBpd2JzSmF3ZVUKWEZtaklReDI2QWZoZlJ4SUQxTldXTmgvZEdmQWNEQ0pYUTYvWlVSZFhreklnbjVKL1NpZXhSTHhKN1JFcnIrOQpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZXBVZ09DNFhNSWtJMlNrNFBubGtOVTdtYlRBYWwxVDZhV3BmN09Oc3oKWFJENDNGUTY1WjZVVlZScmgvZzkzWGNCL2w1aE9yaDJSZUlGZ0JyR2J1d1FweVpTTzRUUEM2WDlhMjNRWENRMQpidkhxeFVmYlB2YWc0Um93T28yeWs5UDJiSkhOOEZ1N2pEUGpENHV6OUgvbmZJNHgxNzJSVGJmMW1NTm1nL1BvClpBSDN3N0tONzhzcVhzOEQ4dDMvYmhZVE94RFNlZWEzd0Y3MzFrVlNJbEtvb1B4Y092NGl6alQxa1MvMExPSEwKb1RhQ1poV01IdGtXbGN0WVpkSS80d2lCdTdDSExITmNHMG5NbXVKcVFxSXFCa0ZNczQ2YmZtcmdPaFFkWXk5TQpDaXFqZkovbnQrTjJlNlEzclAyL3k5VzUrRU4xZ3V6Z1lBM0lLcWpWYklPYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  namespace: M3NjYWxlLXByb2plY3Q=
  service-ca.crt: 
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltaHBUMmsyVGtFd1N6aHVUMHBhV0VaemVUSnpaMEk1VDJkbFpXczViSFUzTFU5d1FscEhWV05tVW1NaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUl6YzJOaGJHVXRjSEp2YW1WamRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSmhjR2xqWVhOMExXOXdaWEpoZEc5eUxYUnZhMlZ1TFhGd2VEbDBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJbUZ3YVdOaGMzUXRiM0JsY21GMGIzSWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSmhaV1ZtWVdZek1pMWhNV0poTFRRek56Z3RZVGhqWXkwMFpERTFPRGRpTURZeVpqVWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2TTNOallXeGxMWEJ5YjJwbFkzUTZZWEJwWTJGemRDMXZjR1Z5WVhSdmNpSjkua01reFdwdE84UkpCbzUxcUY2OFZ2RDlubHpJckk2eFc1T0FSRXlCNy1jZm5ESlVCYTlyaGxJU2lPR2ZOZFYtMURUVk1hUHloWi1iNTRjdFozbExtTy1HN29qNjZUMFBrdlZnNndRQmFLN2h0VmhNN3JzNHZ4Rlc0QURkYzdTclZhckFBd0NGZHRvSjJpSS1LZk1oRm9JTFNZaDVQblc1dlowMnRiUDZFQ1l1OHdFV0RNTGZWRllCNFY3dG44MGZFU2NVWG1kbGlGSVZla05zZHRvRUhxWV9LX1BRcE92WnA4VnVJcW92aE9PSmZ1YmRFTUtTZVpzaUxTbzBYUVBXLWg1VDAxMVpQaEd6NDBCUzVjSUR3eUVvZTRhcFRxVkdqZ3NNX29tYldaV2w4NmlLaG1VR0x3ZWNDVjlRZnFwZW1ONWU0WXJWWGlBMWZWc01QaWVTY0Nn
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: apicast-operator
    kubernetes.io/service-account.uid: aeefaf32-a1ba-4378-a8cc-4d1587b062f5
  creationTimestamp: "2020-09-09T20:05:15Z"
  name: apicast-operator-token-qpx9t
  namespace: 3scale-project
  resourceVersion: "252198335"
  selfLink: /api/v1/namespaces/3scale-project/secrets/apicast-operator-token-qpx9t
  uid: 16a3171a-142e-4153-b2f2-50d670106ebf
type: kubernetes.io/service-account-token
apiVersion: v1
data:
  AdminPortalURL: aHR0cHM6Ly8wM2IyZThiMzVjMjA4YTg4NWU3OGRhOGQ0ZDFkNDZjMTQ4YzNiMjc0ODU3OGNhMTAwOGE3OGRiZjAyODQ0MjhmQHByb2QtM3NjYWxlLWFkbWluLmFwcHMub3NlcGV4dDAxLmNsYXJvLmFteA==
kind: Secret
metadata:
  creationTimestamp: "2020-09-10T20:48:11Z"
  name: apicast-prod-production-secret
  namespace: 3scale-project
  resourceVersion: "253316024"
  selfLink: /api/v1/namespaces/3scale-project/secrets/apicast-prod-production-secret
  uid: eb51b97f-e9e5-4e2a-85bd-6e18cb24327a
type: Opaque
apiVersion: v1
data:
  AdminPortalURL: aHR0cHM6Ly8zMWIyMTQ3ZWFiNzgwZTQ5NjE4MjNjYTFlZjk2YTUxYzMxZDhjYWRlYjE5Zjk4ZGRmODljYzJiNTU0ZDQ0OTAwQGRldi0zc2NhbGUtYWRtaW4uYXBwcy5vc2VwZXh0MDEuY2xhcm8uYW14
kind: Secret
metadata:
  creationTimestamp: "2020-09-14T15:17:41Z"
  name: apicastdev-production-secret
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIcast
    name: dev-production
    uid: 0a920910-34c4-4479-a8f9-4a7857c66a39
  resourceVersion: "257388450"
  selfLink: /api/v1/namespaces/3scale-project/secrets/apicastdev-production-secret
  uid: 004f7811-972e-421f-9335-e4b52220c6e6
type: Opaque
apiVersion: v1
data:
  AdminPortalURL: aHR0cHM6Ly8zMWIyMTQ3ZWFiNzgwZTQ5NjE4MjNjYTFlZjk2YTUxYzMxZDhjYWRlYjE5Zjk4ZGRmODljYzJiNTU0ZDQ0OTAwQGRldi0zc2NhbGUtYWRtaW4uYXBwcy5vc2VwZXh0MDEuY2xhcm8uYW14
kind: Secret
metadata:
  creationTimestamp: "2020-09-14T14:58:42Z"
  name: apicastdev-staging-secret
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIcast
    name: dev-staging
    uid: 6603a68f-0c67-41d3-bf52-309b8fc56bbb
  resourceVersion: "257374567"
  selfLink: /api/v1/namespaces/3scale-project/secrets/apicastdev-staging-secret
  uid: 7ab1ec14-704c-4c21-b5fe-d5e5a6c5b3a2
type: Opaque
apiVersion: v1
data:
  AdminPortalURL: aHR0cHM6Ly8wM2IyZThiMzVjMjA4YTg4NWU3OGRhOGQ0ZDFkNDZjMTQ4YzNiMjc0ODU3OGNhMTAwOGE3OGRiZjAyODQ0MjhmQHByb2QtM3NjYWxlLWFkbWluLmFwcHMub3NlcGV4dDAxLmNsYXJvLmFteA==
kind: Secret
metadata:
  creationTimestamp: "2020-09-14T15:31:22Z"
  name: apicastprod-production-secret
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIcast
    name: prod-production
    uid: 22262456-4e76-4e69-95f0-ff99fe500efe
  resourceVersion: "257404458"
  selfLink: /api/v1/namespaces/3scale-project/secrets/apicastprod-production-secret
  uid: b2640be7-3475-483d-a9d0-12f9fa771249
type: Opaque
apiVersion: v1
data:
  AdminPortalURL: aHR0cHM6Ly8wM2IyZThiMzVjMjA4YTg4NWU3OGRhOGQ0ZDFkNDZjMTQ4YzNiMjc0ODU3OGNhMTAwOGE3OGRiZjAyODQ0MjhmQHByb2QtM3NjYWxlLWFkbWluLmFwcHMub3NlcGV4dDAxLmNsYXJvLmFteA==
kind: Secret
metadata:
  creationTimestamp: "2020-09-14T15:29:39Z"
  name: apicastprod-staging-secret
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIcast
    name: prod-staging
    uid: 64e524e3-45e9-40c7-b973-00a812267b90
  resourceVersion: "257397707"
  selfLink: /api/v1/namespaces/3scale-project/secrets/apicastprod-staging-secret
  uid: 6ee998a9-018e-449e-9f3c-384b6e04824a
type: Opaque
apiVersion: v1
data:
  AdminPortalURL: aHR0cHM6Ly80ZjhlNjI0YzNjZmU4YjgyOGJjODhkNmUzZWRkMjJjYmFjZmNkNWQ0MjRiMGIyYjQ0NThjYjg4NTkyYTRmNmU3QHRlc3QtM3NjYWxlLWFkbWluLmFwcHMub3NlcGV4dDAxLmNsYXJvLmFteA==
kind: Secret
metadata:
  creationTimestamp: "2020-09-14T15:26:34Z"
  name: apicasttest-production-secret
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIcast
    name: test-production
    uid: f87a9d5f-526a-4ec7-9d78-51f4c5867336
  resourceVersion: "257395277"
  selfLink: /api/v1/namespaces/3scale-project/secrets/apicasttest-production-secret
  uid: 90b7d0f2-4d07-4e67-a0cf-f8b9e9b1c2e8
type: Opaque
apiVersion: v1
data:
  AdminPortalURL: aHR0cHM6Ly80ZjhlNjI0YzNjZmU4YjgyOGJjODhkNmUzZWRkMjJjYmFjZmNkNWQ0MjRiMGIyYjQ0NThjYjg4NTkyYTRmNmU3QHRlc3QtM3NjYWxlLWFkbWluLmFwcHMub3NlcGV4dDAxLmNsYXJvLmFteA==
kind: Secret
metadata:
  creationTimestamp: "2020-09-14T15:24:55Z"
  name: apicasttest-staging-secret
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIcast
    name: test-staging
    uid: 78f2ee67-ecfa-4c98-aafb-18d388ea3839
  resourceVersion: "257393888"
  selfLink: /api/v1/namespaces/3scale-project/secrets/apicasttest-staging-secret
  uid: 789269b3-f7cf-4d28-a198-f35366b85b23
type: Opaque
apiVersion: v1
data:
  password: U0VUSVRZVHM=
  username: M3NjYWxlX2FwaV91c2Vy
kind: Secret
metadata:
  creationTimestamp: "2020-07-27T13:05:50Z"
  labels:
    app: 3scale-api-management
    threescale_component: backend
  name: backend-internal-api
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIManager
    name: claro-apimanager-pelado
    uid: 3d48e8a8-df41-4aa1-9516-43d087853cca
  resourceVersion: "198378365"
  selfLink: /api/v1/namespaces/3scale-project/secrets/backend-internal-api
  uid: be75f226-1142-4631-8807-f0e7b7a7ff55
type: Opaque
apiVersion: v1
data:
  route_endpoint: aHR0cHM6Ly9iYWNrZW5kLTNzY2FsZS5hcHBzLm9zZXBleHQwMS5jbGFyby5hbXg=
  service_endpoint: aHR0cDovL2JhY2tlbmQtbGlzdGVuZXI6MzAwMA==
kind: Secret
metadata:
  creationTimestamp: "2020-07-27T13:05:50Z"
  labels:
    app: 3scale-api-management
    threescale_component: backend
  name: backend-listener
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIManager
    name: claro-apimanager-pelado
    uid: 3d48e8a8-df41-4aa1-9516-43d087853cca
  resourceVersion: "198378367"
  selfLink: /api/v1/namespaces/3scale-project/secrets/backend-listener
  uid: bad2bac0-40ba-47e1-a18c-3b52d8031741
type: Opaque
apiVersion: v1
data:
  REDIS_QUEUES_SENTINEL_HOSTS: ""
  REDIS_QUEUES_SENTINEL_ROLE: ""
  REDIS_QUEUES_URL: cmVkaXM6Ly8xMC45Mi4xMTIuMjIzOjYzNzkvMA==
  REDIS_STORAGE_SENTINEL_HOSTS: ""
  REDIS_STORAGE_SENTINEL_ROLE: ""
  REDIS_STORAGE_URL: cmVkaXM6Ly8xMC45Mi4xMTIuMjIzOjYzNzkvMA==
kind: Secret
metadata:
  creationTimestamp: "2020-07-27T12:57:51Z"
  labels:
    app: 3scale-api-management
    threescale_component: backend
  name: backend-redis
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIManager
    name: claro-apimanager-pelado
    uid: 3d48e8a8-df41-4aa1-9516-43d087853cca
  resourceVersion: "198378366"
  selfLink: /api/v1/namespaces/3scale-project/secrets/backend-redis
  uid: 56361c6b-af65-4ae6-af1a-68b5994016e6
type: Opaque
apiVersion: v1
data:
  .dockercfg: 
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: builder
    kubernetes.io/service-account.uid: 2eb0b80d-ff94-4f65-8bc5-bfb115d03c4d
    openshift.io/token-secret.name: builder-token-kht4q
    openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6ImhpT2k2TkEwSzhuT0paWEZzeTJzZ0I5T2dlZWs5bHU3LU9wQlpHVWNmUmMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiIzc2NhbGUtcHJvamVjdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJidWlsZGVyLXRva2VuLWtodDRxIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImJ1aWxkZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIyZWIwYjgwZC1mZjk0LTRmNjUtOGJjNS1iZmIxMTVkMDNjNGQiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6M3NjYWxlLXByb2plY3Q6YnVpbGRlciJ9.QbGWs4JdG2_FHw60PtJHyv0PHpARPO7zBpvArWcqQvucKZy4Q7csuHFmIjQ4RyWzktWgfoY82YfMquuQ3m5juFNbMc_6MxzSuq_FVf2Qfj1cChjo8BBBWC3EpCLvQdMDKOr3Y3TtHB6NkjbUr16OaBQ8YetEz9QysrnSvPgtVh4EFmw2PsfUsZKKEBzs8c6S23UPhMk0JZtQmfv5vUDLSSv9QH9pkTm61KILppWev1Y77rXv5Is1xhlKxQlVauhNY7jEYWrGUNvwPEYyHlBQvwNjXJg0BokQ-hlLx6qFTT0auI7qd7Fg_mhUutDpbMaoHjTnElrVHC4bGsgjx7YbQA
  creationTimestamp: "2020-07-27T12:56:31Z"
  name: builder-dockercfg-jtvsh
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: v1
    blockOwnerDeletion: false
    controller: true
    kind: Secret
    name: builder-token-kht4q
    uid: 7e053d7d-e75d-4c97-ba82-a978f8d38871
  resourceVersion: "249898418"
  selfLink: /api/v1/namespaces/3scale-project/secrets/builder-dockercfg-jtvsh
  uid: 15e70202-4caa-4db8-88c8-8e6ea7e7517b
type: kubernetes.io/dockercfg
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJSU9LRGtxcVpKUnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qRXlNakF5TVRJMVdoY05Namt4TWpBNU1qQXlNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxXN0NtNkgyc050WkhQT1pNanFhOWtNT1BKdHJQUgovSnFWSFJzWGdBYmdUSjhmdmVJenVEejhjc1RobSthYU1zUWxwR3BITHpXZkExK3lVc3hibkZCOGpibmNxdzJoCnFrZ1pzTjluMHBEKzc5SkcyWE9UeTMxV04wTThKMWRVRko5K1VuckVJYXUwYWlya3VrTnZDV2xkcnAwMkFzOEUKclc5dlh2NEhhdTRLemE5enB3TEFVK1Fsc3l4c0tzRk9BM1JkZm9QR2NkakRzZWowT1hlN0t3R1dvR0hycjc1Ygp6K0JmbmV4WUcwNWQyZHRhQi9yUnN4RmlPL2RKai9PS3hEY0NXT1RXWU5XY1lGQ0lKSVJyZVJYSE1XUUNRS0c5ClBEQ1pxb0ZKMGhkUlhBTlNMaUlLUkJqcEw0VEZaTGFzU3h0WVZZT1E2d1BpWS9WUDJEL1dqQzBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPbwptOVhXKzFYNWwwaXpzWHRwN2l6dzByL2lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFrdWhvdG1tTFp4V3Q1ClVnZXF1TTJEMXlvU2xIVDhxazlIb3VrVmJ4S1JuZWxEUG1GVkhJNU1NRkhnWmRnTUd3ZU90VS9QdjNHd21ZNHQKNlRJbE4wVXQxWloxL094S1JiTEc3M3Yrb0tNa1dFa3FBenl4N250MUtBZUFqQi9tVDE2SUdaVERFOExoY25FRgpCMGxVMnd2aGExMnYvYjgxeTQ2c3pLcG03eXFIenZ4d2JGZUtLK2dhTlJvN1lGbUUvNm5rQlJTSHdqSk84cmVwCmFqMlFmbDJaUHBmRlVPdjFheU9hY1lXUHBua2YzZFBSelMxY25IeUZJVnFQSmxqZTByVDVZNlk3Qy94Y3pGV04KRjhXTGlBTTdJQlFVTUdVUDlOd1p1NDc3NEVWbEpsZnRqWEdEcWg3UkFWViszU05aNTBuWjVFdHpONHdoNUxYYwppcEI0Sy9PUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1YclhlcmdVY3JFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1USXhNakl3TWpFeU5Wb1hEVEk1TVRJd09USXdNakV5TlZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eXJscGROZ3dGOGgKMGN3ekRKRUdPcmZBb2RsdUtOUTRXYmprVGM3ajJXY0hpQ2hhQUhtLytrOCtueTdJYVAvT1NiMkh0c0lOOFVaOApSY0ZwREdpWDBKczFHcnN4Q3lXVkZ1VndoRE44UHZRc1NkYjJDamJNMlVYdDZuVzRNZmRuUUIzcDdmM1lneHY3CmEyWFFLUndkTzhhSExhWWRGK1BvaUNDVGMyQURHMVJ1UzVvWEV2Y1ZBa3JLaDFDMHNLQi9FUFpiSVNIVCtpWDkKeWg1M2VZb3NBalUyOERPL3J5dFpVdU9TS01tbWJqUjRVOUxiVlE0ZUkrMzVPWU9UZi9iNTJ0bjhWRFVzdXBIbgpVWU8vaWs5d2w5RmFQKzlGdm9WQjdIUXNwaFdVOGpSZy9RSElMTjNXREQ0R1RKTlkwVzVIMDNweGVIWmNHbHVLCmV1VS9IbjgwZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdxNjRJbDNyUEZ1RVVkNWFjOUhQNGt1dmF0TXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJJemg5cWpzQkVLTWs1QVd2ZkFKNGY0WEN2dDJiYjZCM1VMNkk3TUprVDAxZU5DalRMSDlwZVJsVG5pCk1WOFZ3VGtkWXpKN3FGV01ubTZ6NW1PRzZyc01TbG9YNithTklmT0h5c1YvUGpxVFhzV2R4RzBrTGNod0xmUEoKYzlqSTA5c3FuejhxOGZaYUdyTUZhdUpqZ0g2UTVSbHA4VmZyM0ZYRm1Ib2tTdEhvZHVQQ2JFblBvMVlvK2VYegpMditCa013aHEzbmN4a2lXclZ3NEtrSnY1S2V4cklWNTI5eDJpbHdCU1BLSitiTXdlNDlRWEp0cEVSeFBYV1VBCnU5bzRJVnVINDk2VWpMSzBQOWhaa3dMblgzVlJxcE1nZVhJdUszTEROcDhSbWRRcGszcE9nUFBFM2VpRHFTc24KNERHY1prYzVCakRGR25mNElOdjlwN1Roc3lZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSWNnelB0Slk5aEVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRJeE1qSXdNakV5TlZvWERUSTVNVEl3T1RJd01qRXlOVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTMrb2xmb20yK25jbzk1SFlMZnBTaURoYWwvVWM0cExzT2VKMFcvSlA2RWRHQW1aVElWVXFxS3EzWko1WgpXaHhQS25KV2JxWEsrWkZSZkgrdnN2ZUNSNEkwK1J1MnNyUU5MVTlZb2drNUN5Yy9UNStlekpEaDQvZ1piL0FpCmF5T3FxV1RSSHQ5bkExUWdYR01KS3FERGh0TmUvcXQ1WnBoTWFXd0ZnNE96TkhRWGxaRnpMUDhkOC9KTlFEZUQKODFBZ3l2bG90TVRBQWZWTkpNN05VYXBGNTdUSE5OVnFvM01nSkVxSkhoU3lZWkhka3pCaEhyOXJXZGRNVktMbQorc1lINmdvQ0E2UDRYY1hoZmg3ak85UGJaTnp6UGZ6QUhBd0RkejNybFM0U3FadGZkZUVOWC8vc2VzS0xGdUN4CmxHSEQxOXV0bEpDQW9PMUVkUGhuR2hqb1RRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYMU5IY3N3a1V4V3UzcEoyWldXZUhneW5QYzh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFR0FzY2kyUjJvajRFcUVDNVBVajdRRjFZZ0VucmNWa2VVYWpBN21paFArCmdOeVpDWDV4VEx1WVpaSnByOURqWFdVQlNsdDgyZEtNeDR3TkdDb0IwMnM0VVNTOElWQllGV3dnc29wL3hxTmsKSS9Xalc2TTlyT2ZBTGk1UzhVT3NseHBndEd5aUh2c3J2cHBQQ0Z6YmZ4dUUwdzEwUW9oVzhvdFpkYWlWS09jMQo2MkllTGRGc2swb2dWMGNjUVV6QlpBQmQ5ZXRaMnAvZGxxenhsOVhIQklTdG9KWVVwOHNOQzFHdCtkeHhnekFJCnVKbkRRUnhEaWtLYVNLZWtCa2crS2J3RUQ5WGdLazhqVUhBNkVFd0tHM2xkbTY5eWZ5ZzJEeUNjcVNsMkVNdlcKdlBncU5GZmZOblhOZGIzQ01zRGoycTJ3SjJKeStlcGlieDVLdHNFVHQzRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9Ea3pPRFUxTWpFd0hoY05NakF3TlRFek1UVTFPRFF3V2hjTk16QXcKTlRFeE1UVTFPRFF4V2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRGt6Ck9EVTFNakV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p4bUQ3a3hDbHg3a0EKTDhxWm5LSFphTVZ5TmJwSzBvem91UW9ENzZMV1lqTnNYRlRXVmlRdUppUml2WEtnVThmU2hISWJJdDFGSU5rcwpGZUZ4QkRad1BFMWhqcHZEUHcrY2Q3emhZcUFpbUtkdHlRMDE4RjBTR0VKNnpab25XZENZeHNxbkZWaEtOSzR2Cmk2czU2TmRTN1RPRUozNmNDbWt0YlovVEE4cXdtYVI1NkdTM2pPZUNIa0FwQ2pRNnpxS1dnTmNmR1VmWGJRZjAKS0VMK1lvZ0R2OVVRMjFOcTBhVHlUcnVhSUlQRy9KUWtiNlFQeTluNVo1d3NWR0RGenp6MjFQbXhhN3lVZDJPUApodGFOZ1Mza053WnJ2TjZ6ODNRdkVEVjdTWnNpTUgvUkpGaDZZTVdnQllXeTA2dU9kK3RvMGoyTXc5c0lSaDFoCnd3c3Z1K0Z4QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVitCQzFGTHFZSW1TbUJDVy9ONC8xdzlQanV6QWZCZ05WSFNNRUdEQVdnQlNWK0JDMQpGTHFZSW1TbUJDVy9ONC8xdzlQanV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGcVdBNUMxdUNnZFpmRWlXCjRMZnB6bjA3WEZKVDJGb0h3eEpwNGF4S21WbTg1Q0tpdklyaEJvVDBuN1o1S3lvOElPYWgzTytldzJWS2xsWVMKWU81VHpwVS9GME96azJxRTgwcCtkVDFSY3hTZ2ZCUktyQlc3b3ozN2I0V1g0blNoK0QyUit5M3UyRXp0TTRjcAp3c0E5NzlzNHhSdXpXZkJ5OWNnQTJvQnZrNzhaTzJHMCtJSVRJdlFLSHRnbTZmUjZsM243Qm9PcGpQWm1wT1hXCkMrVlJtckJCYjZmcVMzWGNUMTIrdFpLR3NJNVU4S1k4d3dUQkY0MWJnRkk4OGg2emJ5amZHMFJvVm5xUXdNMGsKYy9aL1ZhL2IwV0hFVGVEQkc1aUVEbDlONTI3SXdJZXFrRmxjN1pqYW9pQTE0K3ZlWnFQS1k4SFFuTFZscTI1ZQpaRmxPbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxTnpZeE9EWXdOelF3SGhjTk1Ua3hNakV5TWpFeU56VXpXaGNOTWpFeE1qRXgKTWpFeU56VTBXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU56WXhPRFl3TnpRdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETEx3cEdIdkpUeHFpN0VpQVgxTmNxCjhDQlpIanZEeXEwKy84Z2FtZDJDU0hIY096bGljTlhGUG4rOUlDWURsMjN2eEo0ZlQ4M3RnN1FSZ2R6eVI2N0YKN0IxMEFheGJjNFRkclVRWi9mcXMvWU05ZjNJWWNsK2U1djZITFl4cW1FN2xkRjN6ZEgybUwvckU3MmgvUjRKcApybS9YQldaYXpwM2ViNU9tdmpYc3B0bkdpN3NzYncrMlA2TzFGMGRZRDZTaWFoUjkvaGl0N2lMVXZIakRaWm9XCnByZEc0T2RYYUxYallHLzBBK3VTaHBRRnlwaDdsUGErVFl6UkFIcE1tODArSmZ6YnRKS1dmMlBpd2JzSmF3ZVUKWEZtaklReDI2QWZoZlJ4SUQxTldXTmgvZEdmQWNEQ0pYUTYvWlVSZFhreklnbjVKL1NpZXhSTHhKN1JFcnIrOQpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZXBVZ09DNFhNSWtJMlNrNFBubGtOVTdtYlRBYWwxVDZhV3BmN09Oc3oKWFJENDNGUTY1WjZVVlZScmgvZzkzWGNCL2w1aE9yaDJSZUlGZ0JyR2J1d1FweVpTTzRUUEM2WDlhMjNRWENRMQpidkhxeFVmYlB2YWc0Um93T28yeWs5UDJiSkhOOEZ1N2pEUGpENHV6OUgvbmZJNHgxNzJSVGJmMW1NTm1nL1BvClpBSDN3N0tONzhzcVhzOEQ4dDMvYmhZVE94RFNlZWEzd0Y3MzFrVlNJbEtvb1B4Y092NGl6alQxa1MvMExPSEwKb1RhQ1poV01IdGtXbGN0WVpkSS80d2lCdTdDSExITmNHMG5NbXVKcVFxSXFCa0ZNczQ2YmZtcmdPaFFkWXk5TQpDaXFqZkovbnQrTjJlNlEzclAyL3k5VzUrRU4xZ3V6Z1lBM0lLcWpWYklPYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  namespace: M3NjYWxlLXByb2plY3Q=
  service-ca.crt: 
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltaHBUMmsyVGtFd1N6aHVUMHBhV0VaemVUSnpaMEk1VDJkbFpXczViSFUzTFU5d1FscEhWV05tVW1NaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUl6YzJOaGJHVXRjSEp2YW1WamRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSmlkV2xzWkdWeUxYUnZhMlZ1TFdkMk5IZzVJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJbUoxYVd4a1pYSWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSXlaV0l3WWpnd1pDMW1aamswTFRSbU5qVXRPR0pqTlMxaVptSXhNVFZrTUROak5HUWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2TTNOallXeGxMWEJ5YjJwbFkzUTZZblZwYkdSbGNpSjkuU19xRl9kS08xdmd2YmVxT21CUmNHTG1ka0J4bjlvdElfcjBGR1dlc29xQ0dtalZEc1ZFZHUweThJb0ZYZ3FYRmgzSHV0SlFGeU93a0xIRm5JbVBneGRScmZDV0lWUUhqZGFTZ0JIbXZHZGRuSVRMT1pGblA2SUxjdGxXWnBsU2Q4X0JxN3NaNnVsWnlhN29JeEx5LVJZS2t1Rmdkby1mVE0tNGhIWUdvSWx2VlJ0ZXBOZ1Y0b1VTM3FQM3pJV0RZYlNucTR2UVh2OFQ5RXRnNFRtc19LNm1mTXk3TVFLZ2dFUFFvbnFNMlc1eEtfSEpVQnJsX3dEa0pnSUZwdGl3MGdaMDRYTU9lVHBkSFFvM0VHRlphQkZjU0VPMThSSkFkZC1uM2FjZlQwc1V2OURzWnc3TEZLOTQxOUhZR29rZzlCR1JvLXM0R2ZySFRBYURCdy1MSjRn
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: builder
    kubernetes.io/service-account.uid: 2eb0b80d-ff94-4f65-8bc5-bfb115d03c4d
  creationTimestamp: "2020-07-27T12:56:31Z"
  name: builder-token-gv4x9
  namespace: 3scale-project
  resourceVersion: "198370262"
  selfLink: /api/v1/namespaces/3scale-project/secrets/builder-token-gv4x9
  uid: bcb06dd1-7e23-4ffb-bc6c-be2df1e890c6
type: kubernetes.io/service-account-token
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJSU9LRGtxcVpKUnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qRXlNakF5TVRJMVdoY05Namt4TWpBNU1qQXlNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxXN0NtNkgyc050WkhQT1pNanFhOWtNT1BKdHJQUgovSnFWSFJzWGdBYmdUSjhmdmVJenVEejhjc1RobSthYU1zUWxwR3BITHpXZkExK3lVc3hibkZCOGpibmNxdzJoCnFrZ1pzTjluMHBEKzc5SkcyWE9UeTMxV04wTThKMWRVRko5K1VuckVJYXUwYWlya3VrTnZDV2xkcnAwMkFzOEUKclc5dlh2NEhhdTRLemE5enB3TEFVK1Fsc3l4c0tzRk9BM1JkZm9QR2NkakRzZWowT1hlN0t3R1dvR0hycjc1Ygp6K0JmbmV4WUcwNWQyZHRhQi9yUnN4RmlPL2RKai9PS3hEY0NXT1RXWU5XY1lGQ0lKSVJyZVJYSE1XUUNRS0c5ClBEQ1pxb0ZKMGhkUlhBTlNMaUlLUkJqcEw0VEZaTGFzU3h0WVZZT1E2d1BpWS9WUDJEL1dqQzBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPbwptOVhXKzFYNWwwaXpzWHRwN2l6dzByL2lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFrdWhvdG1tTFp4V3Q1ClVnZXF1TTJEMXlvU2xIVDhxazlIb3VrVmJ4S1JuZWxEUG1GVkhJNU1NRkhnWmRnTUd3ZU90VS9QdjNHd21ZNHQKNlRJbE4wVXQxWloxL094S1JiTEc3M3Yrb0tNa1dFa3FBenl4N250MUtBZUFqQi9tVDE2SUdaVERFOExoY25FRgpCMGxVMnd2aGExMnYvYjgxeTQ2c3pLcG03eXFIenZ4d2JGZUtLK2dhTlJvN1lGbUUvNm5rQlJTSHdqSk84cmVwCmFqMlFmbDJaUHBmRlVPdjFheU9hY1lXUHBua2YzZFBSelMxY25IeUZJVnFQSmxqZTByVDVZNlk3Qy94Y3pGV04KRjhXTGlBTTdJQlFVTUdVUDlOd1p1NDc3NEVWbEpsZnRqWEdEcWg3UkFWViszU05aNTBuWjVFdHpONHdoNUxYYwppcEI0Sy9PUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1YclhlcmdVY3JFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1USXhNakl3TWpFeU5Wb1hEVEk1TVRJd09USXdNakV5TlZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eXJscGROZ3dGOGgKMGN3ekRKRUdPcmZBb2RsdUtOUTRXYmprVGM3ajJXY0hpQ2hhQUhtLytrOCtueTdJYVAvT1NiMkh0c0lOOFVaOApSY0ZwREdpWDBKczFHcnN4Q3lXVkZ1VndoRE44UHZRc1NkYjJDamJNMlVYdDZuVzRNZmRuUUIzcDdmM1lneHY3CmEyWFFLUndkTzhhSExhWWRGK1BvaUNDVGMyQURHMVJ1UzVvWEV2Y1ZBa3JLaDFDMHNLQi9FUFpiSVNIVCtpWDkKeWg1M2VZb3NBalUyOERPL3J5dFpVdU9TS01tbWJqUjRVOUxiVlE0ZUkrMzVPWU9UZi9iNTJ0bjhWRFVzdXBIbgpVWU8vaWs5d2w5RmFQKzlGdm9WQjdIUXNwaFdVOGpSZy9RSElMTjNXREQ0R1RKTlkwVzVIMDNweGVIWmNHbHVLCmV1VS9IbjgwZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdxNjRJbDNyUEZ1RVVkNWFjOUhQNGt1dmF0TXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJJemg5cWpzQkVLTWs1QVd2ZkFKNGY0WEN2dDJiYjZCM1VMNkk3TUprVDAxZU5DalRMSDlwZVJsVG5pCk1WOFZ3VGtkWXpKN3FGV01ubTZ6NW1PRzZyc01TbG9YNithTklmT0h5c1YvUGpxVFhzV2R4RzBrTGNod0xmUEoKYzlqSTA5c3FuejhxOGZaYUdyTUZhdUpqZ0g2UTVSbHA4VmZyM0ZYRm1Ib2tTdEhvZHVQQ2JFblBvMVlvK2VYegpMditCa013aHEzbmN4a2lXclZ3NEtrSnY1S2V4cklWNTI5eDJpbHdCU1BLSitiTXdlNDlRWEp0cEVSeFBYV1VBCnU5bzRJVnVINDk2VWpMSzBQOWhaa3dMblgzVlJxcE1nZVhJdUszTEROcDhSbWRRcGszcE9nUFBFM2VpRHFTc24KNERHY1prYzVCakRGR25mNElOdjlwN1Roc3lZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSWNnelB0Slk5aEVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRJeE1qSXdNakV5TlZvWERUSTVNVEl3T1RJd01qRXlOVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTMrb2xmb20yK25jbzk1SFlMZnBTaURoYWwvVWM0cExzT2VKMFcvSlA2RWRHQW1aVElWVXFxS3EzWko1WgpXaHhQS25KV2JxWEsrWkZSZkgrdnN2ZUNSNEkwK1J1MnNyUU5MVTlZb2drNUN5Yy9UNStlekpEaDQvZ1piL0FpCmF5T3FxV1RSSHQ5bkExUWdYR01KS3FERGh0TmUvcXQ1WnBoTWFXd0ZnNE96TkhRWGxaRnpMUDhkOC9KTlFEZUQKODFBZ3l2bG90TVRBQWZWTkpNN05VYXBGNTdUSE5OVnFvM01nSkVxSkhoU3lZWkhka3pCaEhyOXJXZGRNVktMbQorc1lINmdvQ0E2UDRYY1hoZmg3ak85UGJaTnp6UGZ6QUhBd0RkejNybFM0U3FadGZkZUVOWC8vc2VzS0xGdUN4CmxHSEQxOXV0bEpDQW9PMUVkUGhuR2hqb1RRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYMU5IY3N3a1V4V3UzcEoyWldXZUhneW5QYzh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFR0FzY2kyUjJvajRFcUVDNVBVajdRRjFZZ0VucmNWa2VVYWpBN21paFArCmdOeVpDWDV4VEx1WVpaSnByOURqWFdVQlNsdDgyZEtNeDR3TkdDb0IwMnM0VVNTOElWQllGV3dnc29wL3hxTmsKSS9Xalc2TTlyT2ZBTGk1UzhVT3NseHBndEd5aUh2c3J2cHBQQ0Z6YmZ4dUUwdzEwUW9oVzhvdFpkYWlWS09jMQo2MkllTGRGc2swb2dWMGNjUVV6QlpBQmQ5ZXRaMnAvZGxxenhsOVhIQklTdG9KWVVwOHNOQzFHdCtkeHhnekFJCnVKbkRRUnhEaWtLYVNLZWtCa2crS2J3RUQ5WGdLazhqVUhBNkVFd0tHM2xkbTY5eWZ5ZzJEeUNjcVNsMkVNdlcKdlBncU5GZmZOblhOZGIzQ01zRGoycTJ3SjJKeStlcGlieDVLdHNFVHQzRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9Ea3pPRFUxTWpFd0hoY05NakF3TlRFek1UVTFPRFF3V2hjTk16QXcKTlRFeE1UVTFPRFF4V2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRGt6Ck9EVTFNakV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p4bUQ3a3hDbHg3a0EKTDhxWm5LSFphTVZ5TmJwSzBvem91UW9ENzZMV1lqTnNYRlRXVmlRdUppUml2WEtnVThmU2hISWJJdDFGSU5rcwpGZUZ4QkRad1BFMWhqcHZEUHcrY2Q3emhZcUFpbUtkdHlRMDE4RjBTR0VKNnpab25XZENZeHNxbkZWaEtOSzR2Cmk2czU2TmRTN1RPRUozNmNDbWt0YlovVEE4cXdtYVI1NkdTM2pPZUNIa0FwQ2pRNnpxS1dnTmNmR1VmWGJRZjAKS0VMK1lvZ0R2OVVRMjFOcTBhVHlUcnVhSUlQRy9KUWtiNlFQeTluNVo1d3NWR0RGenp6MjFQbXhhN3lVZDJPUApodGFOZ1Mza053WnJ2TjZ6ODNRdkVEVjdTWnNpTUgvUkpGaDZZTVdnQllXeTA2dU9kK3RvMGoyTXc5c0lSaDFoCnd3c3Z1K0Z4QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVitCQzFGTHFZSW1TbUJDVy9ONC8xdzlQanV6QWZCZ05WSFNNRUdEQVdnQlNWK0JDMQpGTHFZSW1TbUJDVy9ONC8xdzlQanV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGcVdBNUMxdUNnZFpmRWlXCjRMZnB6bjA3WEZKVDJGb0h3eEpwNGF4S21WbTg1Q0tpdklyaEJvVDBuN1o1S3lvOElPYWgzTytldzJWS2xsWVMKWU81VHpwVS9GME96azJxRTgwcCtkVDFSY3hTZ2ZCUktyQlc3b3ozN2I0V1g0blNoK0QyUit5M3UyRXp0TTRjcAp3c0E5NzlzNHhSdXpXZkJ5OWNnQTJvQnZrNzhaTzJHMCtJSVRJdlFLSHRnbTZmUjZsM243Qm9PcGpQWm1wT1hXCkMrVlJtckJCYjZmcVMzWGNUMTIrdFpLR3NJNVU4S1k4d3dUQkY0MWJnRkk4OGg2emJ5amZHMFJvVm5xUXdNMGsKYy9aL1ZhL2IwV0hFVGVEQkc1aUVEbDlONTI3SXdJZXFrRmxjN1pqYW9pQTE0K3ZlWnFQS1k4SFFuTFZscTI1ZQpaRmxPbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxTnpZeE9EWXdOelF3SGhjTk1Ua3hNakV5TWpFeU56VXpXaGNOTWpFeE1qRXgKTWpFeU56VTBXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU56WXhPRFl3TnpRdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETEx3cEdIdkpUeHFpN0VpQVgxTmNxCjhDQlpIanZEeXEwKy84Z2FtZDJDU0hIY096bGljTlhGUG4rOUlDWURsMjN2eEo0ZlQ4M3RnN1FSZ2R6eVI2N0YKN0IxMEFheGJjNFRkclVRWi9mcXMvWU05ZjNJWWNsK2U1djZITFl4cW1FN2xkRjN6ZEgybUwvckU3MmgvUjRKcApybS9YQldaYXpwM2ViNU9tdmpYc3B0bkdpN3NzYncrMlA2TzFGMGRZRDZTaWFoUjkvaGl0N2lMVXZIakRaWm9XCnByZEc0T2RYYUxYallHLzBBK3VTaHBRRnlwaDdsUGErVFl6UkFIcE1tODArSmZ6YnRKS1dmMlBpd2JzSmF3ZVUKWEZtaklReDI2QWZoZlJ4SUQxTldXTmgvZEdmQWNEQ0pYUTYvWlVSZFhreklnbjVKL1NpZXhSTHhKN1JFcnIrOQpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZXBVZ09DNFhNSWtJMlNrNFBubGtOVTdtYlRBYWwxVDZhV3BmN09Oc3oKWFJENDNGUTY1WjZVVlZScmgvZzkzWGNCL2w1aE9yaDJSZUlGZ0JyR2J1d1FweVpTTzRUUEM2WDlhMjNRWENRMQpidkhxeFVmYlB2YWc0Um93T28yeWs5UDJiSkhOOEZ1N2pEUGpENHV6OUgvbmZJNHgxNzJSVGJmMW1NTm1nL1BvClpBSDN3N0tONzhzcVhzOEQ4dDMvYmhZVE94RFNlZWEzd0Y3MzFrVlNJbEtvb1B4Y092NGl6alQxa1MvMExPSEwKb1RhQ1poV01IdGtXbGN0WVpkSS80d2lCdTdDSExITmNHMG5NbXVKcVFxSXFCa0ZNczQ2YmZtcmdPaFFkWXk5TQpDaXFqZkovbnQrTjJlNlEzclAyL3k5VzUrRU4xZ3V6Z1lBM0lLcWpWYklPYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  namespace: M3NjYWxlLXByb2plY3Q=
  service-ca.crt: 
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltaHBUMmsyVGtFd1N6aHVUMHBhV0VaemVUSnpaMEk1VDJkbFpXczViSFUzTFU5d1FscEhWV05tVW1NaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUl6YzJOaGJHVXRjSEp2YW1WamRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSmlkV2xzWkdWeUxYUnZhMlZ1TFd0b2REUnhJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJbUoxYVd4a1pYSWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSXlaV0l3WWpnd1pDMW1aamswTFRSbU5qVXRPR0pqTlMxaVptSXhNVFZrTUROak5HUWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2TTNOallXeGxMWEJ5YjJwbFkzUTZZblZwYkdSbGNpSjkuUWJHV3M0SmRHMl9GSHc2MFB0Skh5djBQSHBBUlBPN3pCcHZBcldjcVF2dWNLWnk0UTdjc3VIRm1JalE0UnlXemt0V2dmb1k4MllmTXF1dVEzbTVqdUZOYk1jXzZNeHpTdXFfRlZmMlFmajFjQ2hqbzhCQkJXQzNFcENMdlFkTURLT3IzWTNUdEhCNk5ramJVcjE2T2FCUThZZXRFejlReXNyblN2UGd0Vmg0RUZtdzJQc2ZVc1pLS0VCenM4YzZTMjNVUGhNazBKWnRRbWZ2NXZVRExTU3Y5UUg5cGtUbTYxS0lMcHBXZXYxWTc3clh2NUlzMXhobEt4UWxWYXVoTlk3akVZV3JHVU52d1BFWXlIbEJRdndOalhKZzBCb2tRLWhsTHg2cUZUVDBhdUk3cWQ3RmdfbWhVdXREcGJNYW9IalRuRWxyVkhDNGJHc2dqeDdZYlFB
kind: Secret
metadata:
  annotations:
    kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
    kubernetes.io/service-account.name: builder
    kubernetes.io/service-account.uid: 2eb0b80d-ff94-4f65-8bc5-bfb115d03c4d
  creationTimestamp: "2020-07-27T12:56:31Z"
  name: builder-token-kht4q
  namespace: 3scale-project
  resourceVersion: "198370274"
  selfLink: /api/v1/namespaces/3scale-project/secrets/builder-token-kht4q
  uid: 7e053d7d-e75d-4c97-ba82-a978f8d38871
type: kubernetes.io/service-account-token
apiVersion: v1
data:
  DBCP_GENERIC_CONN_AUTO_COMMIT: ZmFsc2U=
  DBCP_GENERIC_CONN_MAX_AGE_MS: NzIwMDAwMA==
  DBCP_GENERIC_CONN_MAX_WAIT_MS: NTAwMA==
  DBCP_GENERIC_CONN_VALIDATION_ON_GET: dHJ1ZQ==
  DBCP_GENERIC_CONN_VALIDATION_ORACLE: c2VsZWN0IDEgZnJvbSBkdWFs
  DBCP_GENERIC_POOL_MAX_SIZE_L1: NQ==
  DBCP_GENERIC_POOL_MAX_SIZE_L2: MTA=
  DBCP_GENERIC_POOL_MIN_SIZE: Mw==
kind: Secret
metadata:
  annotations:
    description: |-
      Propiedades genericas a nivel Database connection pool (prefix "DBCP_GENERIC_"):
        POOL_MIN_SIZE
             Minimo numero de conexiones en el pool.
        POOL_MAX_SIZE_L1
             Maximo numero de conexiones en el pool nivel 1.
        POOL_MAX_SIZE_L2
             Maximo numero de conexiones en el pool nivel 2.
        CONN_AUTO_COMMIT
             Seteo boolean de auto-commit de la conexion.
        CONN_MAX_WAIT_MS
             Maximo tiempo en ms a esperar si no hay conexiones disponibles en el pool.
        CONN_MAX_AGE_MS
             Maximo tiempo en ms que una conexion puede pertenecer al pool.
        CONN_VALIDATION_ON_GET
             Seteo boolean indicando que hay que validar el estado de una conexion cuando se la pide al pool.
        CONN_VALIDATION_ORACLE
             Query a usar para validar el estado de una conexion si la base de datos es Oracle.
  creationTimestamp: "2020-07-27T12:56:31Z"
  name: dbcp-generic
  namespace: 3scale-project
  resourceVersion: "198370304"
  selfLink: /api/v1/namespaces/3scale-project/secrets/dbcp-generic
  uid: 6ada942e-780a-41c6-8538-ba9ff36f3003
type: Opaque
apiVersion: v1
data:
  .dockercfg: 
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: default
    kubernetes.io/service-account.uid: c7c97b93-0236-468e-995d-d333c07da460
    openshift.io/token-secret.name: default-token-cqppf
    openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6ImhpT2k2TkEwSzhuT0paWEZzeTJzZ0I5T2dlZWs5bHU3LU9wQlpHVWNmUmMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiIzc2NhbGUtcHJvamVjdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkZWZhdWx0LXRva2VuLWNxcHBmIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImRlZmF1bHQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiJjN2M5N2I5My0wMjM2LTQ2OGUtOTk1ZC1kMzMzYzA3ZGE0NjAiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6M3NjYWxlLXByb2plY3Q6ZGVmYXVsdCJ9.DR6i4Y_HTlPMKem4OY4AQepnxCU068Vl8f4hxWf9q1fQB4wTV5Sh1gHpiiV5GgAUkxS1XSOVPk0CIX75ZeHllDDuMN0n0svrUXfE9OcFN51UeXyBOSjqdKIT06EwAvm2tV3hIECUTWDpBc5nkhmOJcfdhaN0vB4apa-Z2oVNNlmjbkuzvrmvpxjsr3QxJmrdSbeXenArx-yMHnvn3D_69F_OC7zJfetCkXnjVUqHy-Q9muSqtU8YpklNDxeJr4TEsJvKKe4wh9nQNwLg_-e7rRJuUm_VrXhmr9_pZoE6j7RM_t1Ea--IG8gnR1QwdRYhOcEDM2m-rgmkN9JXK_yBkg
  creationTimestamp: "2020-07-27T12:56:31Z"
  name: default-dockercfg-h648n
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: v1
    blockOwnerDeletion: false
    controller: true
    kind: Secret
    name: default-token-cqppf
    uid: 83e4fc13-9108-4939-a9e3-69c902b11246
  resourceVersion: "198370269"
  selfLink: /api/v1/namespaces/3scale-project/secrets/default-dockercfg-h648n
  uid: 907d448d-04c0-4e5e-ba26-5bbdf15b5057
type: kubernetes.io/dockercfg
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJSU9LRGtxcVpKUnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qRXlNakF5TVRJMVdoY05Namt4TWpBNU1qQXlNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxXN0NtNkgyc050WkhQT1pNanFhOWtNT1BKdHJQUgovSnFWSFJzWGdBYmdUSjhmdmVJenVEejhjc1RobSthYU1zUWxwR3BITHpXZkExK3lVc3hibkZCOGpibmNxdzJoCnFrZ1pzTjluMHBEKzc5SkcyWE9UeTMxV04wTThKMWRVRko5K1VuckVJYXUwYWlya3VrTnZDV2xkcnAwMkFzOEUKclc5dlh2NEhhdTRLemE5enB3TEFVK1Fsc3l4c0tzRk9BM1JkZm9QR2NkakRzZWowT1hlN0t3R1dvR0hycjc1Ygp6K0JmbmV4WUcwNWQyZHRhQi9yUnN4RmlPL2RKai9PS3hEY0NXT1RXWU5XY1lGQ0lKSVJyZVJYSE1XUUNRS0c5ClBEQ1pxb0ZKMGhkUlhBTlNMaUlLUkJqcEw0VEZaTGFzU3h0WVZZT1E2d1BpWS9WUDJEL1dqQzBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPbwptOVhXKzFYNWwwaXpzWHRwN2l6dzByL2lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFrdWhvdG1tTFp4V3Q1ClVnZXF1TTJEMXlvU2xIVDhxazlIb3VrVmJ4S1JuZWxEUG1GVkhJNU1NRkhnWmRnTUd3ZU90VS9QdjNHd21ZNHQKNlRJbE4wVXQxWloxL094S1JiTEc3M3Yrb0tNa1dFa3FBenl4N250MUtBZUFqQi9tVDE2SUdaVERFOExoY25FRgpCMGxVMnd2aGExMnYvYjgxeTQ2c3pLcG03eXFIenZ4d2JGZUtLK2dhTlJvN1lGbUUvNm5rQlJTSHdqSk84cmVwCmFqMlFmbDJaUHBmRlVPdjFheU9hY1lXUHBua2YzZFBSelMxY25IeUZJVnFQSmxqZTByVDVZNlk3Qy94Y3pGV04KRjhXTGlBTTdJQlFVTUdVUDlOd1p1NDc3NEVWbEpsZnRqWEdEcWg3UkFWViszU05aNTBuWjVFdHpONHdoNUxYYwppcEI0Sy9PUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1YclhlcmdVY3JFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1USXhNakl3TWpFeU5Wb1hEVEk1TVRJd09USXdNakV5TlZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eXJscGROZ3dGOGgKMGN3ekRKRUdPcmZBb2RsdUtOUTRXYmprVGM3ajJXY0hpQ2hhQUhtLytrOCtueTdJYVAvT1NiMkh0c0lOOFVaOApSY0ZwREdpWDBKczFHcnN4Q3lXVkZ1VndoRE44UHZRc1NkYjJDamJNMlVYdDZuVzRNZmRuUUIzcDdmM1lneHY3CmEyWFFLUndkTzhhSExhWWRGK1BvaUNDVGMyQURHMVJ1UzVvWEV2Y1ZBa3JLaDFDMHNLQi9FUFpiSVNIVCtpWDkKeWg1M2VZb3NBalUyOERPL3J5dFpVdU9TS01tbWJqUjRVOUxiVlE0ZUkrMzVPWU9UZi9iNTJ0bjhWRFVzdXBIbgpVWU8vaWs5d2w5RmFQKzlGdm9WQjdIUXNwaFdVOGpSZy9RSElMTjNXREQ0R1RKTlkwVzVIMDNweGVIWmNHbHVLCmV1VS9IbjgwZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdxNjRJbDNyUEZ1RVVkNWFjOUhQNGt1dmF0TXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJJemg5cWpzQkVLTWs1QVd2ZkFKNGY0WEN2dDJiYjZCM1VMNkk3TUprVDAxZU5DalRMSDlwZVJsVG5pCk1WOFZ3VGtkWXpKN3FGV01ubTZ6NW1PRzZyc01TbG9YNithTklmT0h5c1YvUGpxVFhzV2R4RzBrTGNod0xmUEoKYzlqSTA5c3FuejhxOGZaYUdyTUZhdUpqZ0g2UTVSbHA4VmZyM0ZYRm1Ib2tTdEhvZHVQQ2JFblBvMVlvK2VYegpMditCa013aHEzbmN4a2lXclZ3NEtrSnY1S2V4cklWNTI5eDJpbHdCU1BLSitiTXdlNDlRWEp0cEVSeFBYV1VBCnU5bzRJVnVINDk2VWpMSzBQOWhaa3dMblgzVlJxcE1nZVhJdUszTEROcDhSbWRRcGszcE9nUFBFM2VpRHFTc24KNERHY1prYzVCakRGR25mNElOdjlwN1Roc3lZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSWNnelB0Slk5aEVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRJeE1qSXdNakV5TlZvWERUSTVNVEl3T1RJd01qRXlOVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTMrb2xmb20yK25jbzk1SFlMZnBTaURoYWwvVWM0cExzT2VKMFcvSlA2RWRHQW1aVElWVXFxS3EzWko1WgpXaHhQS25KV2JxWEsrWkZSZkgrdnN2ZUNSNEkwK1J1MnNyUU5MVTlZb2drNUN5Yy9UNStlekpEaDQvZ1piL0FpCmF5T3FxV1RSSHQ5bkExUWdYR01KS3FERGh0TmUvcXQ1WnBoTWFXd0ZnNE96TkhRWGxaRnpMUDhkOC9KTlFEZUQKODFBZ3l2bG90TVRBQWZWTkpNN05VYXBGNTdUSE5OVnFvM01nSkVxSkhoU3lZWkhka3pCaEhyOXJXZGRNVktMbQorc1lINmdvQ0E2UDRYY1hoZmg3ak85UGJaTnp6UGZ6QUhBd0RkejNybFM0U3FadGZkZUVOWC8vc2VzS0xGdUN4CmxHSEQxOXV0bEpDQW9PMUVkUGhuR2hqb1RRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYMU5IY3N3a1V4V3UzcEoyWldXZUhneW5QYzh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFR0FzY2kyUjJvajRFcUVDNVBVajdRRjFZZ0VucmNWa2VVYWpBN21paFArCmdOeVpDWDV4VEx1WVpaSnByOURqWFdVQlNsdDgyZEtNeDR3TkdDb0IwMnM0VVNTOElWQllGV3dnc29wL3hxTmsKSS9Xalc2TTlyT2ZBTGk1UzhVT3NseHBndEd5aUh2c3J2cHBQQ0Z6YmZ4dUUwdzEwUW9oVzhvdFpkYWlWS09jMQo2MkllTGRGc2swb2dWMGNjUVV6QlpBQmQ5ZXRaMnAvZGxxenhsOVhIQklTdG9KWVVwOHNOQzFHdCtkeHhnekFJCnVKbkRRUnhEaWtLYVNLZWtCa2crS2J3RUQ5WGdLazhqVUhBNkVFd0tHM2xkbTY5eWZ5ZzJEeUNjcVNsMkVNdlcKdlBncU5GZmZOblhOZGIzQ01zRGoycTJ3SjJKeStlcGlieDVLdHNFVHQzRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9Ea3pPRFUxTWpFd0hoY05NakF3TlRFek1UVTFPRFF3V2hjTk16QXcKTlRFeE1UVTFPRFF4V2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRGt6Ck9EVTFNakV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p4bUQ3a3hDbHg3a0EKTDhxWm5LSFphTVZ5TmJwSzBvem91UW9ENzZMV1lqTnNYRlRXVmlRdUppUml2WEtnVThmU2hISWJJdDFGSU5rcwpGZUZ4QkRad1BFMWhqcHZEUHcrY2Q3emhZcUFpbUtkdHlRMDE4RjBTR0VKNnpab25XZENZeHNxbkZWaEtOSzR2Cmk2czU2TmRTN1RPRUozNmNDbWt0YlovVEE4cXdtYVI1NkdTM2pPZUNIa0FwQ2pRNnpxS1dnTmNmR1VmWGJRZjAKS0VMK1lvZ0R2OVVRMjFOcTBhVHlUcnVhSUlQRy9KUWtiNlFQeTluNVo1d3NWR0RGenp6MjFQbXhhN3lVZDJPUApodGFOZ1Mza053WnJ2TjZ6ODNRdkVEVjdTWnNpTUgvUkpGaDZZTVdnQllXeTA2dU9kK3RvMGoyTXc5c0lSaDFoCnd3c3Z1K0Z4QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVitCQzFGTHFZSW1TbUJDVy9ONC8xdzlQanV6QWZCZ05WSFNNRUdEQVdnQlNWK0JDMQpGTHFZSW1TbUJDVy9ONC8xdzlQanV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGcVdBNUMxdUNnZFpmRWlXCjRMZnB6bjA3WEZKVDJGb0h3eEpwNGF4S21WbTg1Q0tpdklyaEJvVDBuN1o1S3lvOElPYWgzTytldzJWS2xsWVMKWU81VHpwVS9GME96azJxRTgwcCtkVDFSY3hTZ2ZCUktyQlc3b3ozN2I0V1g0blNoK0QyUit5M3UyRXp0TTRjcAp3c0E5NzlzNHhSdXpXZkJ5OWNnQTJvQnZrNzhaTzJHMCtJSVRJdlFLSHRnbTZmUjZsM243Qm9PcGpQWm1wT1hXCkMrVlJtckJCYjZmcVMzWGNUMTIrdFpLR3NJNVU4S1k4d3dUQkY0MWJnRkk4OGg2emJ5amZHMFJvVm5xUXdNMGsKYy9aL1ZhL2IwV0hFVGVEQkc1aUVEbDlONTI3SXdJZXFrRmxjN1pqYW9pQTE0K3ZlWnFQS1k4SFFuTFZscTI1ZQpaRmxPbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxTnpZeE9EWXdOelF3SGhjTk1Ua3hNakV5TWpFeU56VXpXaGNOTWpFeE1qRXgKTWpFeU56VTBXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU56WXhPRFl3TnpRdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETEx3cEdIdkpUeHFpN0VpQVgxTmNxCjhDQlpIanZEeXEwKy84Z2FtZDJDU0hIY096bGljTlhGUG4rOUlDWURsMjN2eEo0ZlQ4M3RnN1FSZ2R6eVI2N0YKN0IxMEFheGJjNFRkclVRWi9mcXMvWU05ZjNJWWNsK2U1djZITFl4cW1FN2xkRjN6ZEgybUwvckU3MmgvUjRKcApybS9YQldaYXpwM2ViNU9tdmpYc3B0bkdpN3NzYncrMlA2TzFGMGRZRDZTaWFoUjkvaGl0N2lMVXZIakRaWm9XCnByZEc0T2RYYUxYallHLzBBK3VTaHBRRnlwaDdsUGErVFl6UkFIcE1tODArSmZ6YnRKS1dmMlBpd2JzSmF3ZVUKWEZtaklReDI2QWZoZlJ4SUQxTldXTmgvZEdmQWNEQ0pYUTYvWlVSZFhreklnbjVKL1NpZXhSTHhKN1JFcnIrOQpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZXBVZ09DNFhNSWtJMlNrNFBubGtOVTdtYlRBYWwxVDZhV3BmN09Oc3oKWFJENDNGUTY1WjZVVlZScmgvZzkzWGNCL2w1aE9yaDJSZUlGZ0JyR2J1d1FweVpTTzRUUEM2WDlhMjNRWENRMQpidkhxeFVmYlB2YWc0Um93T28yeWs5UDJiSkhOOEZ1N2pEUGpENHV6OUgvbmZJNHgxNzJSVGJmMW1NTm1nL1BvClpBSDN3N0tONzhzcVhzOEQ4dDMvYmhZVE94RFNlZWEzd0Y3MzFrVlNJbEtvb1B4Y092NGl6alQxa1MvMExPSEwKb1RhQ1poV01IdGtXbGN0WVpkSS80d2lCdTdDSExITmNHMG5NbXVKcVFxSXFCa0ZNczQ2YmZtcmdPaFFkWXk5TQpDaXFqZkovbnQrTjJlNlEzclAyL3k5VzUrRU4xZ3V6Z1lBM0lLcWpWYklPYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  namespace: M3NjYWxlLXByb2plY3Q=
  service-ca.crt: 
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltaHBUMmsyVGtFd1N6aHVUMHBhV0VaemVUSnpaMEk1VDJkbFpXczViSFUzTFU5d1FscEhWV05tVW1NaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUl6YzJOaGJHVXRjSEp2YW1WamRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSmtaV1poZFd4MExYUnZhMlZ1TFdOeGNIQm1JaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJbVJsWm1GMWJIUWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSmpOMk01TjJJNU15MHdNak0yTFRRMk9HVXRPVGsxWkMxa016TXpZekEzWkdFME5qQWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2TTNOallXeGxMWEJ5YjJwbFkzUTZaR1ZtWVhWc2RDSjkuRFI2aTRZX0hUbFBNS2VtNE9ZNEFRZXBueENVMDY4Vmw4ZjRoeFdmOXExZlFCNHdUVjVTaDFnSHBpaVY1R2dBVWt4UzFYU09WUGswQ0lYNzVaZUhsbEREdU1OMG4wc3ZyVVhmRTlPY0ZONTFVZVh5Qk9TanFkS0lUMDZFd0F2bTJ0VjNoSUVDVVRXRHBCYzVua2htT0pjZmRoYU4wdkI0YXBhLVoyb1ZOTmxtamJrdXp2cm12cHhqc3IzUXhKbXJkU2JlWGVuQXJ4LXlNSG52bjNEXzY5Rl9PQzd6SmZldENrWG5qVlVxSHktUTltdVNxdFU4WXBrbE5EeGVKcjRURXNKdktLZTR3aDluUU53TGdfLWU3clJKdVVtX1ZyWGhtcjlfcFpvRTZqN1JNX3QxRWEtLUlHOGduUjFRd2RSWWhPY0VETTJtLXJnbWtOOUpYS195Qmtn
kind: Secret
metadata:
  annotations:
    kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
    kubernetes.io/service-account.name: default
    kubernetes.io/service-account.uid: c7c97b93-0236-468e-995d-d333c07da460
  creationTimestamp: "2020-07-27T12:56:31Z"
  name: default-token-cqppf
  namespace: 3scale-project
  resourceVersion: "198370265"
  selfLink: /api/v1/namespaces/3scale-project/secrets/default-token-cqppf
  uid: 83e4fc13-9108-4939-a9e3-69c902b11246
type: kubernetes.io/service-account-token
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJSU9LRGtxcVpKUnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qRXlNakF5TVRJMVdoY05Namt4TWpBNU1qQXlNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxXN0NtNkgyc050WkhQT1pNanFhOWtNT1BKdHJQUgovSnFWSFJzWGdBYmdUSjhmdmVJenVEejhjc1RobSthYU1zUWxwR3BITHpXZkExK3lVc3hibkZCOGpibmNxdzJoCnFrZ1pzTjluMHBEKzc5SkcyWE9UeTMxV04wTThKMWRVRko5K1VuckVJYXUwYWlya3VrTnZDV2xkcnAwMkFzOEUKclc5dlh2NEhhdTRLemE5enB3TEFVK1Fsc3l4c0tzRk9BM1JkZm9QR2NkakRzZWowT1hlN0t3R1dvR0hycjc1Ygp6K0JmbmV4WUcwNWQyZHRhQi9yUnN4RmlPL2RKai9PS3hEY0NXT1RXWU5XY1lGQ0lKSVJyZVJYSE1XUUNRS0c5ClBEQ1pxb0ZKMGhkUlhBTlNMaUlLUkJqcEw0VEZaTGFzU3h0WVZZT1E2d1BpWS9WUDJEL1dqQzBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPbwptOVhXKzFYNWwwaXpzWHRwN2l6dzByL2lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFrdWhvdG1tTFp4V3Q1ClVnZXF1TTJEMXlvU2xIVDhxazlIb3VrVmJ4S1JuZWxEUG1GVkhJNU1NRkhnWmRnTUd3ZU90VS9QdjNHd21ZNHQKNlRJbE4wVXQxWloxL094S1JiTEc3M3Yrb0tNa1dFa3FBenl4N250MUtBZUFqQi9tVDE2SUdaVERFOExoY25FRgpCMGxVMnd2aGExMnYvYjgxeTQ2c3pLcG03eXFIenZ4d2JGZUtLK2dhTlJvN1lGbUUvNm5rQlJTSHdqSk84cmVwCmFqMlFmbDJaUHBmRlVPdjFheU9hY1lXUHBua2YzZFBSelMxY25IeUZJVnFQSmxqZTByVDVZNlk3Qy94Y3pGV04KRjhXTGlBTTdJQlFVTUdVUDlOd1p1NDc3NEVWbEpsZnRqWEdEcWg3UkFWViszU05aNTBuWjVFdHpONHdoNUxYYwppcEI0Sy9PUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1YclhlcmdVY3JFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1USXhNakl3TWpFeU5Wb1hEVEk1TVRJd09USXdNakV5TlZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eXJscGROZ3dGOGgKMGN3ekRKRUdPcmZBb2RsdUtOUTRXYmprVGM3ajJXY0hpQ2hhQUhtLytrOCtueTdJYVAvT1NiMkh0c0lOOFVaOApSY0ZwREdpWDBKczFHcnN4Q3lXVkZ1VndoRE44UHZRc1NkYjJDamJNMlVYdDZuVzRNZmRuUUIzcDdmM1lneHY3CmEyWFFLUndkTzhhSExhWWRGK1BvaUNDVGMyQURHMVJ1UzVvWEV2Y1ZBa3JLaDFDMHNLQi9FUFpiSVNIVCtpWDkKeWg1M2VZb3NBalUyOERPL3J5dFpVdU9TS01tbWJqUjRVOUxiVlE0ZUkrMzVPWU9UZi9iNTJ0bjhWRFVzdXBIbgpVWU8vaWs5d2w5RmFQKzlGdm9WQjdIUXNwaFdVOGpSZy9RSElMTjNXREQ0R1RKTlkwVzVIMDNweGVIWmNHbHVLCmV1VS9IbjgwZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdxNjRJbDNyUEZ1RVVkNWFjOUhQNGt1dmF0TXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJJemg5cWpzQkVLTWs1QVd2ZkFKNGY0WEN2dDJiYjZCM1VMNkk3TUprVDAxZU5DalRMSDlwZVJsVG5pCk1WOFZ3VGtkWXpKN3FGV01ubTZ6NW1PRzZyc01TbG9YNithTklmT0h5c1YvUGpxVFhzV2R4RzBrTGNod0xmUEoKYzlqSTA5c3FuejhxOGZaYUdyTUZhdUpqZ0g2UTVSbHA4VmZyM0ZYRm1Ib2tTdEhvZHVQQ2JFblBvMVlvK2VYegpMditCa013aHEzbmN4a2lXclZ3NEtrSnY1S2V4cklWNTI5eDJpbHdCU1BLSitiTXdlNDlRWEp0cEVSeFBYV1VBCnU5bzRJVnVINDk2VWpMSzBQOWhaa3dMblgzVlJxcE1nZVhJdUszTEROcDhSbWRRcGszcE9nUFBFM2VpRHFTc24KNERHY1prYzVCakRGR25mNElOdjlwN1Roc3lZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSWNnelB0Slk5aEVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRJeE1qSXdNakV5TlZvWERUSTVNVEl3T1RJd01qRXlOVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTMrb2xmb20yK25jbzk1SFlMZnBTaURoYWwvVWM0cExzT2VKMFcvSlA2RWRHQW1aVElWVXFxS3EzWko1WgpXaHhQS25KV2JxWEsrWkZSZkgrdnN2ZUNSNEkwK1J1MnNyUU5MVTlZb2drNUN5Yy9UNStlekpEaDQvZ1piL0FpCmF5T3FxV1RSSHQ5bkExUWdYR01KS3FERGh0TmUvcXQ1WnBoTWFXd0ZnNE96TkhRWGxaRnpMUDhkOC9KTlFEZUQKODFBZ3l2bG90TVRBQWZWTkpNN05VYXBGNTdUSE5OVnFvM01nSkVxSkhoU3lZWkhka3pCaEhyOXJXZGRNVktMbQorc1lINmdvQ0E2UDRYY1hoZmg3ak85UGJaTnp6UGZ6QUhBd0RkejNybFM0U3FadGZkZUVOWC8vc2VzS0xGdUN4CmxHSEQxOXV0bEpDQW9PMUVkUGhuR2hqb1RRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYMU5IY3N3a1V4V3UzcEoyWldXZUhneW5QYzh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFR0FzY2kyUjJvajRFcUVDNVBVajdRRjFZZ0VucmNWa2VVYWpBN21paFArCmdOeVpDWDV4VEx1WVpaSnByOURqWFdVQlNsdDgyZEtNeDR3TkdDb0IwMnM0VVNTOElWQllGV3dnc29wL3hxTmsKSS9Xalc2TTlyT2ZBTGk1UzhVT3NseHBndEd5aUh2c3J2cHBQQ0Z6YmZ4dUUwdzEwUW9oVzhvdFpkYWlWS09jMQo2MkllTGRGc2swb2dWMGNjUVV6QlpBQmQ5ZXRaMnAvZGxxenhsOVhIQklTdG9KWVVwOHNOQzFHdCtkeHhnekFJCnVKbkRRUnhEaWtLYVNLZWtCa2crS2J3RUQ5WGdLazhqVUhBNkVFd0tHM2xkbTY5eWZ5ZzJEeUNjcVNsMkVNdlcKdlBncU5GZmZOblhOZGIzQ01zRGoycTJ3SjJKeStlcGlieDVLdHNFVHQzRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9Ea3pPRFUxTWpFd0hoY05NakF3TlRFek1UVTFPRFF3V2hjTk16QXcKTlRFeE1UVTFPRFF4V2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRGt6Ck9EVTFNakV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p4bUQ3a3hDbHg3a0EKTDhxWm5LSFphTVZ5TmJwSzBvem91UW9ENzZMV1lqTnNYRlRXVmlRdUppUml2WEtnVThmU2hISWJJdDFGSU5rcwpGZUZ4QkRad1BFMWhqcHZEUHcrY2Q3emhZcUFpbUtkdHlRMDE4RjBTR0VKNnpab25XZENZeHNxbkZWaEtOSzR2Cmk2czU2TmRTN1RPRUozNmNDbWt0YlovVEE4cXdtYVI1NkdTM2pPZUNIa0FwQ2pRNnpxS1dnTmNmR1VmWGJRZjAKS0VMK1lvZ0R2OVVRMjFOcTBhVHlUcnVhSUlQRy9KUWtiNlFQeTluNVo1d3NWR0RGenp6MjFQbXhhN3lVZDJPUApodGFOZ1Mza053WnJ2TjZ6ODNRdkVEVjdTWnNpTUgvUkpGaDZZTVdnQllXeTA2dU9kK3RvMGoyTXc5c0lSaDFoCnd3c3Z1K0Z4QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVitCQzFGTHFZSW1TbUJDVy9ONC8xdzlQanV6QWZCZ05WSFNNRUdEQVdnQlNWK0JDMQpGTHFZSW1TbUJDVy9ONC8xdzlQanV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGcVdBNUMxdUNnZFpmRWlXCjRMZnB6bjA3WEZKVDJGb0h3eEpwNGF4S21WbTg1Q0tpdklyaEJvVDBuN1o1S3lvOElPYWgzTytldzJWS2xsWVMKWU81VHpwVS9GME96azJxRTgwcCtkVDFSY3hTZ2ZCUktyQlc3b3ozN2I0V1g0blNoK0QyUit5M3UyRXp0TTRjcAp3c0E5NzlzNHhSdXpXZkJ5OWNnQTJvQnZrNzhaTzJHMCtJSVRJdlFLSHRnbTZmUjZsM243Qm9PcGpQWm1wT1hXCkMrVlJtckJCYjZmcVMzWGNUMTIrdFpLR3NJNVU4S1k4d3dUQkY0MWJnRkk4OGg2emJ5amZHMFJvVm5xUXdNMGsKYy9aL1ZhL2IwV0hFVGVEQkc1aUVEbDlONTI3SXdJZXFrRmxjN1pqYW9pQTE0K3ZlWnFQS1k4SFFuTFZscTI1ZQpaRmxPbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxTnpZeE9EWXdOelF3SGhjTk1Ua3hNakV5TWpFeU56VXpXaGNOTWpFeE1qRXgKTWpFeU56VTBXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU56WXhPRFl3TnpRdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETEx3cEdIdkpUeHFpN0VpQVgxTmNxCjhDQlpIanZEeXEwKy84Z2FtZDJDU0hIY096bGljTlhGUG4rOUlDWURsMjN2eEo0ZlQ4M3RnN1FSZ2R6eVI2N0YKN0IxMEFheGJjNFRkclVRWi9mcXMvWU05ZjNJWWNsK2U1djZITFl4cW1FN2xkRjN6ZEgybUwvckU3MmgvUjRKcApybS9YQldaYXpwM2ViNU9tdmpYc3B0bkdpN3NzYncrMlA2TzFGMGRZRDZTaWFoUjkvaGl0N2lMVXZIakRaWm9XCnByZEc0T2RYYUxYallHLzBBK3VTaHBRRnlwaDdsUGErVFl6UkFIcE1tODArSmZ6YnRKS1dmMlBpd2JzSmF3ZVUKWEZtaklReDI2QWZoZlJ4SUQxTldXTmgvZEdmQWNEQ0pYUTYvWlVSZFhreklnbjVKL1NpZXhSTHhKN1JFcnIrOQpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZXBVZ09DNFhNSWtJMlNrNFBubGtOVTdtYlRBYWwxVDZhV3BmN09Oc3oKWFJENDNGUTY1WjZVVlZScmgvZzkzWGNCL2w1aE9yaDJSZUlGZ0JyR2J1d1FweVpTTzRUUEM2WDlhMjNRWENRMQpidkhxeFVmYlB2YWc0Um93T28yeWs5UDJiSkhOOEZ1N2pEUGpENHV6OUgvbmZJNHgxNzJSVGJmMW1NTm1nL1BvClpBSDN3N0tONzhzcVhzOEQ4dDMvYmhZVE94RFNlZWEzd0Y3MzFrVlNJbEtvb1B4Y092NGl6alQxa1MvMExPSEwKb1RhQ1poV01IdGtXbGN0WVpkSS80d2lCdTdDSExITmNHMG5NbXVKcVFxSXFCa0ZNczQ2YmZtcmdPaFFkWXk5TQpDaXFqZkovbnQrTjJlNlEzclAyL3k5VzUrRU4xZ3V6Z1lBM0lLcWpWYklPYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  namespace: M3NjYWxlLXByb2plY3Q=
  service-ca.crt: 
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltaHBUMmsyVGtFd1N6aHVUMHBhV0VaemVUSnpaMEk1VDJkbFpXczViSFUzTFU5d1FscEhWV05tVW1NaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUl6YzJOaGJHVXRjSEp2YW1WamRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSmtaV1poZFd4MExYUnZhMlZ1TFdaak9HNXVJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5elpYSjJhV05sTFdGalkyOTFiblF1Ym1GdFpTSTZJbVJsWm1GMWJIUWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzUxYVdRaU9pSmpOMk01TjJJNU15MHdNak0yTFRRMk9HVXRPVGsxWkMxa016TXpZekEzWkdFME5qQWlMQ0p6ZFdJaU9pSnplWE4wWlcwNmMyVnlkbWxqWldGalkyOTFiblE2TTNOallXeGxMWEJ5YjJwbFkzUTZaR1ZtWVhWc2RDSjkuR05Eb1hXUms5dkNOdWNFY0RBbXNvMDRjQ3R5T3NUZmx0bzlFaUstVS1wcGwtcl80Mko5WFctbHJkdXVvUDBJcGIwdXlhQWlZc0h3RVZ6U0cyU3RNN1ladk9UY2tFQ3B4M0pQaExTQkRlTXZudlpLcFNJQjAzUEhyY2kzTU1jdEJTVmtGZVI4VFZCX1dHS0hEVzhpNGthb0dOWnVQRm5oT3IyVDZhcU9XSG5CNnpkdko4aEwzX3NKRW1WcE5YSlgzVUhINWh3TnFVblpwd0hWazQ1NTNCQVMzMDVqNC1Oc2RqOXFpQXl3WURJV213bXUzTTFRcWVBZzF3ejNiUFdHWnNpdTBZcDdwWnBZWi0yd01LQ2Q3dDVxTDdpNjhnTG9wU09leXVUTU5kdXRwMUw2SlhqYm1SckVHYl9tVlJxcjRjQ2JNUnR5R3ZCRGRkOTFkSXZaZ2hR
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: default
    kubernetes.io/service-account.uid: c7c97b93-0236-468e-995d-d333c07da460
  creationTimestamp: "2020-07-27T12:56:31Z"
  name: default-token-fc8nn
  namespace: 3scale-project
  resourceVersion: "198370261"
  selfLink: /api/v1/namespaces/3scale-project/secrets/default-token-fc8nn
  uid: 566e66e3-6595-42a3-95ed-e3af3aad30a7
type: kubernetes.io/service-account-token
apiVersion: v1
data:
  .dockercfg: 
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: deployer
    kubernetes.io/service-account.uid: e0ba91f4-5b43-4274-b05e-829ac208846d
    openshift.io/token-secret.name: deployer-token-knzvs
    openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6ImhpT2k2TkEwSzhuT0paWEZzeTJzZ0I5T2dlZWs5bHU3LU9wQlpHVWNmUmMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiIzc2NhbGUtcHJvamVjdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkZXBsb3llci10b2tlbi1rbnp2cyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJkZXBsb3llciIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImUwYmE5MWY0LTViNDMtNDI3NC1iMDVlLTgyOWFjMjA4ODQ2ZCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDozc2NhbGUtcHJvamVjdDpkZXBsb3llciJ9.fT75Hw8pBeltzAMPyqWZkf0xmgNsdU8aWXMM3_otsUjz5ZffWAkg6ZIhTsf_on2KAaNqaTsCr5ollkKzfoZEAisUcsnHjf9AHVgJ25sZ1K_ilm0m1TIHtuG_qghrY2HZ01s7PD7fLb6sXS8_S8yRS5UrLioMxQTVHGJ1WZYZHkgB4M9XYGfp2Cw_Gx7edh7MERgFhdz58x3qT7RcerQkFdbIXjzu9xcucwSujpK3vl-8gqyCUesskDEUy5NGa-iK45jndxI_4GRzwP2tE7O4tzDx9TpOQzOqMttdW4auoRTQLKSRFfVMMM17XWSzg1OlBJWPqBMdPgDtqVcEHLlofw
  creationTimestamp: "2020-07-27T12:56:31Z"
  name: deployer-dockercfg-dl94k
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: v1
    blockOwnerDeletion: false
    controller: true
    kind: Secret
    name: deployer-token-knzvs
    uid: 98a688bb-98b1-41dc-bb8c-4caed361255c
  resourceVersion: "198370273"
  selfLink: /api/v1/namespaces/3scale-project/secrets/deployer-dockercfg-dl94k
  uid: 7e749ba3-8324-476e-a32f-6276ed0701b6
type: kubernetes.io/dockercfg
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJSU9LRGtxcVpKUnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qRXlNakF5TVRJMVdoY05Namt4TWpBNU1qQXlNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxXN0NtNkgyc050WkhQT1pNanFhOWtNT1BKdHJQUgovSnFWSFJzWGdBYmdUSjhmdmVJenVEejhjc1RobSthYU1zUWxwR3BITHpXZkExK3lVc3hibkZCOGpibmNxdzJoCnFrZ1pzTjluMHBEKzc5SkcyWE9UeTMxV04wTThKMWRVRko5K1VuckVJYXUwYWlya3VrTnZDV2xkcnAwMkFzOEUKclc5dlh2NEhhdTRLemE5enB3TEFVK1Fsc3l4c0tzRk9BM1JkZm9QR2NkakRzZWowT1hlN0t3R1dvR0hycjc1Ygp6K0JmbmV4WUcwNWQyZHRhQi9yUnN4RmlPL2RKai9PS3hEY0NXT1RXWU5XY1lGQ0lKSVJyZVJYSE1XUUNRS0c5ClBEQ1pxb0ZKMGhkUlhBTlNMaUlLUkJqcEw0VEZaTGFzU3h0WVZZT1E2d1BpWS9WUDJEL1dqQzBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPbwptOVhXKzFYNWwwaXpzWHRwN2l6dzByL2lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFrdWhvdG1tTFp4V3Q1ClVnZXF1TTJEMXlvU2xIVDhxazlIb3VrVmJ4S1JuZWxEUG1GVkhJNU1NRkhnWmRnTUd3ZU90VS9QdjNHd21ZNHQKNlRJbE4wVXQxWloxL094S1JiTEc3M3Yrb0tNa1dFa3FBenl4N250MUtBZUFqQi9tVDE2SUdaVERFOExoY25FRgpCMGxVMnd2aGExMnYvYjgxeTQ2c3pLcG03eXFIenZ4d2JGZUtLK2dhTlJvN1lGbUUvNm5rQlJTSHdqSk84cmVwCmFqMlFmbDJaUHBmRlVPdjFheU9hY1lXUHBua2YzZFBSelMxY25IeUZJVnFQSmxqZTByVDVZNlk3Qy94Y3pGV04KRjhXTGlBTTdJQlFVTUdVUDlOd1p1NDc3NEVWbEpsZnRqWEdEcWg3UkFWViszU05aNTBuWjVFdHpONHdoNUxYYwppcEI0Sy9PUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1YclhlcmdVY3JFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1USXhNakl3TWpFeU5Wb1hEVEk1TVRJd09USXdNakV5TlZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eXJscGROZ3dGOGgKMGN3ekRKRUdPcmZBb2RsdUtOUTRXYmprVGM3ajJXY0hpQ2hhQUhtLytrOCtueTdJYVAvT1NiMkh0c0lOOFVaOApSY0ZwREdpWDBKczFHcnN4Q3lXVkZ1VndoRE44UHZRc1NkYjJDamJNMlVYdDZuVzRNZmRuUUIzcDdmM1lneHY3CmEyWFFLUndkTzhhSExhWWRGK1BvaUNDVGMyQURHMVJ1UzVvWEV2Y1ZBa3JLaDFDMHNLQi9FUFpiSVNIVCtpWDkKeWg1M2VZb3NBalUyOERPL3J5dFpVdU9TS01tbWJqUjRVOUxiVlE0ZUkrMzVPWU9UZi9iNTJ0bjhWRFVzdXBIbgpVWU8vaWs5d2w5RmFQKzlGdm9WQjdIUXNwaFdVOGpSZy9RSElMTjNXREQ0R1RKTlkwVzVIMDNweGVIWmNHbHVLCmV1VS9IbjgwZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdxNjRJbDNyUEZ1RVVkNWFjOUhQNGt1dmF0TXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJJemg5cWpzQkVLTWs1QVd2ZkFKNGY0WEN2dDJiYjZCM1VMNkk3TUprVDAxZU5DalRMSDlwZVJsVG5pCk1WOFZ3VGtkWXpKN3FGV01ubTZ6NW1PRzZyc01TbG9YNithTklmT0h5c1YvUGpxVFhzV2R4RzBrTGNod0xmUEoKYzlqSTA5c3FuejhxOGZaYUdyTUZhdUpqZ0g2UTVSbHA4VmZyM0ZYRm1Ib2tTdEhvZHVQQ2JFblBvMVlvK2VYegpMditCa013aHEzbmN4a2lXclZ3NEtrSnY1S2V4cklWNTI5eDJpbHdCU1BLSitiTXdlNDlRWEp0cEVSeFBYV1VBCnU5bzRJVnVINDk2VWpMSzBQOWhaa3dMblgzVlJxcE1nZVhJdUszTEROcDhSbWRRcGszcE9nUFBFM2VpRHFTc24KNERHY1prYzVCakRGR25mNElOdjlwN1Roc3lZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSWNnelB0Slk5aEVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRJeE1qSXdNakV5TlZvWERUSTVNVEl3T1RJd01qRXlOVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTMrb2xmb20yK25jbzk1SFlMZnBTaURoYWwvVWM0cExzT2VKMFcvSlA2RWRHQW1aVElWVXFxS3EzWko1WgpXaHhQS25KV2JxWEsrWkZSZkgrdnN2ZUNSNEkwK1J1MnNyUU5MVTlZb2drNUN5Yy9UNStlekpEaDQvZ1piL0FpCmF5T3FxV1RSSHQ5bkExUWdYR01KS3FERGh0TmUvcXQ1WnBoTWFXd0ZnNE96TkhRWGxaRnpMUDhkOC9KTlFEZUQKODFBZ3l2bG90TVRBQWZWTkpNN05VYXBGNTdUSE5OVnFvM01nSkVxSkhoU3lZWkhka3pCaEhyOXJXZGRNVktMbQorc1lINmdvQ0E2UDRYY1hoZmg3ak85UGJaTnp6UGZ6QUhBd0RkejNybFM0U3FadGZkZUVOWC8vc2VzS0xGdUN4CmxHSEQxOXV0bEpDQW9PMUVkUGhuR2hqb1RRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYMU5IY3N3a1V4V3UzcEoyWldXZUhneW5QYzh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFR0FzY2kyUjJvajRFcUVDNVBVajdRRjFZZ0VucmNWa2VVYWpBN21paFArCmdOeVpDWDV4VEx1WVpaSnByOURqWFdVQlNsdDgyZEtNeDR3TkdDb0IwMnM0VVNTOElWQllGV3dnc29wL3hxTmsKSS9Xalc2TTlyT2ZBTGk1UzhVT3NseHBndEd5aUh2c3J2cHBQQ0Z6YmZ4dUUwdzEwUW9oVzhvdFpkYWlWS09jMQo2MkllTGRGc2swb2dWMGNjUVV6QlpBQmQ5ZXRaMnAvZGxxenhsOVhIQklTdG9KWVVwOHNOQzFHdCtkeHhnekFJCnVKbkRRUnhEaWtLYVNLZWtCa2crS2J3RUQ5WGdLazhqVUhBNkVFd0tHM2xkbTY5eWZ5ZzJEeUNjcVNsMkVNdlcKdlBncU5GZmZOblhOZGIzQ01zRGoycTJ3SjJKeStlcGlieDVLdHNFVHQzRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9Ea3pPRFUxTWpFd0hoY05NakF3TlRFek1UVTFPRFF3V2hjTk16QXcKTlRFeE1UVTFPRFF4V2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRGt6Ck9EVTFNakV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p4bUQ3a3hDbHg3a0EKTDhxWm5LSFphTVZ5TmJwSzBvem91UW9ENzZMV1lqTnNYRlRXVmlRdUppUml2WEtnVThmU2hISWJJdDFGSU5rcwpGZUZ4QkRad1BFMWhqcHZEUHcrY2Q3emhZcUFpbUtkdHlRMDE4RjBTR0VKNnpab25XZENZeHNxbkZWaEtOSzR2Cmk2czU2TmRTN1RPRUozNmNDbWt0YlovVEE4cXdtYVI1NkdTM2pPZUNIa0FwQ2pRNnpxS1dnTmNmR1VmWGJRZjAKS0VMK1lvZ0R2OVVRMjFOcTBhVHlUcnVhSUlQRy9KUWtiNlFQeTluNVo1d3NWR0RGenp6MjFQbXhhN3lVZDJPUApodGFOZ1Mza053WnJ2TjZ6ODNRdkVEVjdTWnNpTUgvUkpGaDZZTVdnQllXeTA2dU9kK3RvMGoyTXc5c0lSaDFoCnd3c3Z1K0Z4QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVitCQzFGTHFZSW1TbUJDVy9ONC8xdzlQanV6QWZCZ05WSFNNRUdEQVdnQlNWK0JDMQpGTHFZSW1TbUJDVy9ONC8xdzlQanV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGcVdBNUMxdUNnZFpmRWlXCjRMZnB6bjA3WEZKVDJGb0h3eEpwNGF4S21WbTg1Q0tpdklyaEJvVDBuN1o1S3lvOElPYWgzTytldzJWS2xsWVMKWU81VHpwVS9GME96azJxRTgwcCtkVDFSY3hTZ2ZCUktyQlc3b3ozN2I0V1g0blNoK0QyUit5M3UyRXp0TTRjcAp3c0E5NzlzNHhSdXpXZkJ5OWNnQTJvQnZrNzhaTzJHMCtJSVRJdlFLSHRnbTZmUjZsM243Qm9PcGpQWm1wT1hXCkMrVlJtckJCYjZmcVMzWGNUMTIrdFpLR3NJNVU4S1k4d3dUQkY0MWJnRkk4OGg2emJ5amZHMFJvVm5xUXdNMGsKYy9aL1ZhL2IwV0hFVGVEQkc1aUVEbDlONTI3SXdJZXFrRmxjN1pqYW9pQTE0K3ZlWnFQS1k4SFFuTFZscTI1ZQpaRmxPbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxTnpZeE9EWXdOelF3SGhjTk1Ua3hNakV5TWpFeU56VXpXaGNOTWpFeE1qRXgKTWpFeU56VTBXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU56WXhPRFl3TnpRdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETEx3cEdIdkpUeHFpN0VpQVgxTmNxCjhDQlpIanZEeXEwKy84Z2FtZDJDU0hIY096bGljTlhGUG4rOUlDWURsMjN2eEo0ZlQ4M3RnN1FSZ2R6eVI2N0YKN0IxMEFheGJjNFRkclVRWi9mcXMvWU05ZjNJWWNsK2U1djZITFl4cW1FN2xkRjN6ZEgybUwvckU3MmgvUjRKcApybS9YQldaYXpwM2ViNU9tdmpYc3B0bkdpN3NzYncrMlA2TzFGMGRZRDZTaWFoUjkvaGl0N2lMVXZIakRaWm9XCnByZEc0T2RYYUxYallHLzBBK3VTaHBRRnlwaDdsUGErVFl6UkFIcE1tODArSmZ6YnRKS1dmMlBpd2JzSmF3ZVUKWEZtaklReDI2QWZoZlJ4SUQxTldXTmgvZEdmQWNEQ0pYUTYvWlVSZFhreklnbjVKL1NpZXhSTHhKN1JFcnIrOQpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZXBVZ09DNFhNSWtJMlNrNFBubGtOVTdtYlRBYWwxVDZhV3BmN09Oc3oKWFJENDNGUTY1WjZVVlZScmgvZzkzWGNCL2w1aE9yaDJSZUlGZ0JyR2J1d1FweVpTTzRUUEM2WDlhMjNRWENRMQpidkhxeFVmYlB2YWc0Um93T28yeWs5UDJiSkhOOEZ1N2pEUGpENHV6OUgvbmZJNHgxNzJSVGJmMW1NTm1nL1BvClpBSDN3N0tONzhzcVhzOEQ4dDMvYmhZVE94RFNlZWEzd0Y3MzFrVlNJbEtvb1B4Y092NGl6alQxa1MvMExPSEwKb1RhQ1poV01IdGtXbGN0WVpkSS80d2lCdTdDSExITmNHMG5NbXVKcVFxSXFCa0ZNczQ2YmZtcmdPaFFkWXk5TQpDaXFqZkovbnQrTjJlNlEzclAyL3k5VzUrRU4xZ3V6Z1lBM0lLcWpWYklPYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  namespace: M3NjYWxlLXByb2plY3Q=
  service-ca.crt: 
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltaHBUMmsyVGtFd1N6aHVUMHBhV0VaemVUSnpaMEk1VDJkbFpXczViSFUzTFU5d1FscEhWV05tVW1NaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUl6YzJOaGJHVXRjSEp2YW1WamRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSmtaWEJzYjNsbGNpMTBiMnRsYmkwMk56bHpOeUlzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG01aGJXVWlPaUprWlhCc2IzbGxjaUlzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJbVV3WW1FNU1XWTBMVFZpTkRNdE5ESTNOQzFpTURWbExUZ3lPV0ZqTWpBNE9EUTJaQ0lzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERvemMyTmhiR1V0Y0hKdmFtVmpkRHBrWlhCc2IzbGxjaUo5Lkt0WnBzT2lmeUZUQ0hnSnlORklmMFhZYnB5bXNTZDFxLVhlcW9TcG5LMjg2UF9OOGdmZHFabmdQdXhKazNjT2ctNS01Ny1iQVg1Q2RzSXNUeElWQk9BMjdPMnVFWDZlM3Bqc1FmZGxtZU5QLTR4a1M0Rm5nZFFLTGMyMEVOM3doLXZXTVhlZUVvSktlekhwcDVFdUlNa1RGd01iZDA2aHhScDkyemNfRE0wMUdkamtIZEVfeEd5NXRFS2pzZE8tanZjM2lzdzAwTEY3VjdYNzljTDZtR2ctdGk3aWFGOG1GYUpnb28waTUybU45Q3VXeml6MEE5RHI3dlR4b3ROVG1OU1NYeUZHVy1fQmJtQVhLRE4ycmFzQ1JGZjJKTTVkWkRJM2NOSGl1aXJQZTBoWWFjWGRITGw1UDZ0ZEE1Z2daUlRfRG8tS0tMRDV5cGpUOTZkU0RYUQ==
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: deployer
    kubernetes.io/service-account.uid: e0ba91f4-5b43-4274-b05e-829ac208846d
  creationTimestamp: "2020-07-27T12:56:31Z"
  name: deployer-token-679s7
  namespace: 3scale-project
  resourceVersion: "198370266"
  selfLink: /api/v1/namespaces/3scale-project/secrets/deployer-token-679s7
  uid: 35a7bdda-20b5-4d6a-b69b-39bfa873f661
type: kubernetes.io/service-account-token
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJSU9LRGtxcVpKUnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qRXlNakF5TVRJMVdoY05Namt4TWpBNU1qQXlNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxXN0NtNkgyc050WkhQT1pNanFhOWtNT1BKdHJQUgovSnFWSFJzWGdBYmdUSjhmdmVJenVEejhjc1RobSthYU1zUWxwR3BITHpXZkExK3lVc3hibkZCOGpibmNxdzJoCnFrZ1pzTjluMHBEKzc5SkcyWE9UeTMxV04wTThKMWRVRko5K1VuckVJYXUwYWlya3VrTnZDV2xkcnAwMkFzOEUKclc5dlh2NEhhdTRLemE5enB3TEFVK1Fsc3l4c0tzRk9BM1JkZm9QR2NkakRzZWowT1hlN0t3R1dvR0hycjc1Ygp6K0JmbmV4WUcwNWQyZHRhQi9yUnN4RmlPL2RKai9PS3hEY0NXT1RXWU5XY1lGQ0lKSVJyZVJYSE1XUUNRS0c5ClBEQ1pxb0ZKMGhkUlhBTlNMaUlLUkJqcEw0VEZaTGFzU3h0WVZZT1E2d1BpWS9WUDJEL1dqQzBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPbwptOVhXKzFYNWwwaXpzWHRwN2l6dzByL2lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFrdWhvdG1tTFp4V3Q1ClVnZXF1TTJEMXlvU2xIVDhxazlIb3VrVmJ4S1JuZWxEUG1GVkhJNU1NRkhnWmRnTUd3ZU90VS9QdjNHd21ZNHQKNlRJbE4wVXQxWloxL094S1JiTEc3M3Yrb0tNa1dFa3FBenl4N250MUtBZUFqQi9tVDE2SUdaVERFOExoY25FRgpCMGxVMnd2aGExMnYvYjgxeTQ2c3pLcG03eXFIenZ4d2JGZUtLK2dhTlJvN1lGbUUvNm5rQlJTSHdqSk84cmVwCmFqMlFmbDJaUHBmRlVPdjFheU9hY1lXUHBua2YzZFBSelMxY25IeUZJVnFQSmxqZTByVDVZNlk3Qy94Y3pGV04KRjhXTGlBTTdJQlFVTUdVUDlOd1p1NDc3NEVWbEpsZnRqWEdEcWg3UkFWViszU05aNTBuWjVFdHpONHdoNUxYYwppcEI0Sy9PUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1YclhlcmdVY3JFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1USXhNakl3TWpFeU5Wb1hEVEk1TVRJd09USXdNakV5TlZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eXJscGROZ3dGOGgKMGN3ekRKRUdPcmZBb2RsdUtOUTRXYmprVGM3ajJXY0hpQ2hhQUhtLytrOCtueTdJYVAvT1NiMkh0c0lOOFVaOApSY0ZwREdpWDBKczFHcnN4Q3lXVkZ1VndoRE44UHZRc1NkYjJDamJNMlVYdDZuVzRNZmRuUUIzcDdmM1lneHY3CmEyWFFLUndkTzhhSExhWWRGK1BvaUNDVGMyQURHMVJ1UzVvWEV2Y1ZBa3JLaDFDMHNLQi9FUFpiSVNIVCtpWDkKeWg1M2VZb3NBalUyOERPL3J5dFpVdU9TS01tbWJqUjRVOUxiVlE0ZUkrMzVPWU9UZi9iNTJ0bjhWRFVzdXBIbgpVWU8vaWs5d2w5RmFQKzlGdm9WQjdIUXNwaFdVOGpSZy9RSElMTjNXREQ0R1RKTlkwVzVIMDNweGVIWmNHbHVLCmV1VS9IbjgwZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdxNjRJbDNyUEZ1RVVkNWFjOUhQNGt1dmF0TXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJJemg5cWpzQkVLTWs1QVd2ZkFKNGY0WEN2dDJiYjZCM1VMNkk3TUprVDAxZU5DalRMSDlwZVJsVG5pCk1WOFZ3VGtkWXpKN3FGV01ubTZ6NW1PRzZyc01TbG9YNithTklmT0h5c1YvUGpxVFhzV2R4RzBrTGNod0xmUEoKYzlqSTA5c3FuejhxOGZaYUdyTUZhdUpqZ0g2UTVSbHA4VmZyM0ZYRm1Ib2tTdEhvZHVQQ2JFblBvMVlvK2VYegpMditCa013aHEzbmN4a2lXclZ3NEtrSnY1S2V4cklWNTI5eDJpbHdCU1BLSitiTXdlNDlRWEp0cEVSeFBYV1VBCnU5bzRJVnVINDk2VWpMSzBQOWhaa3dMblgzVlJxcE1nZVhJdUszTEROcDhSbWRRcGszcE9nUFBFM2VpRHFTc24KNERHY1prYzVCakRGR25mNElOdjlwN1Roc3lZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSWNnelB0Slk5aEVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRJeE1qSXdNakV5TlZvWERUSTVNVEl3T1RJd01qRXlOVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTMrb2xmb20yK25jbzk1SFlMZnBTaURoYWwvVWM0cExzT2VKMFcvSlA2RWRHQW1aVElWVXFxS3EzWko1WgpXaHhQS25KV2JxWEsrWkZSZkgrdnN2ZUNSNEkwK1J1MnNyUU5MVTlZb2drNUN5Yy9UNStlekpEaDQvZ1piL0FpCmF5T3FxV1RSSHQ5bkExUWdYR01KS3FERGh0TmUvcXQ1WnBoTWFXd0ZnNE96TkhRWGxaRnpMUDhkOC9KTlFEZUQKODFBZ3l2bG90TVRBQWZWTkpNN05VYXBGNTdUSE5OVnFvM01nSkVxSkhoU3lZWkhka3pCaEhyOXJXZGRNVktMbQorc1lINmdvQ0E2UDRYY1hoZmg3ak85UGJaTnp6UGZ6QUhBd0RkejNybFM0U3FadGZkZUVOWC8vc2VzS0xGdUN4CmxHSEQxOXV0bEpDQW9PMUVkUGhuR2hqb1RRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYMU5IY3N3a1V4V3UzcEoyWldXZUhneW5QYzh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFR0FzY2kyUjJvajRFcUVDNVBVajdRRjFZZ0VucmNWa2VVYWpBN21paFArCmdOeVpDWDV4VEx1WVpaSnByOURqWFdVQlNsdDgyZEtNeDR3TkdDb0IwMnM0VVNTOElWQllGV3dnc29wL3hxTmsKSS9Xalc2TTlyT2ZBTGk1UzhVT3NseHBndEd5aUh2c3J2cHBQQ0Z6YmZ4dUUwdzEwUW9oVzhvdFpkYWlWS09jMQo2MkllTGRGc2swb2dWMGNjUVV6QlpBQmQ5ZXRaMnAvZGxxenhsOVhIQklTdG9KWVVwOHNOQzFHdCtkeHhnekFJCnVKbkRRUnhEaWtLYVNLZWtCa2crS2J3RUQ5WGdLazhqVUhBNkVFd0tHM2xkbTY5eWZ5ZzJEeUNjcVNsMkVNdlcKdlBncU5GZmZOblhOZGIzQ01zRGoycTJ3SjJKeStlcGlieDVLdHNFVHQzRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9Ea3pPRFUxTWpFd0hoY05NakF3TlRFek1UVTFPRFF3V2hjTk16QXcKTlRFeE1UVTFPRFF4V2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRGt6Ck9EVTFNakV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p4bUQ3a3hDbHg3a0EKTDhxWm5LSFphTVZ5TmJwSzBvem91UW9ENzZMV1lqTnNYRlRXVmlRdUppUml2WEtnVThmU2hISWJJdDFGSU5rcwpGZUZ4QkRad1BFMWhqcHZEUHcrY2Q3emhZcUFpbUtkdHlRMDE4RjBTR0VKNnpab25XZENZeHNxbkZWaEtOSzR2Cmk2czU2TmRTN1RPRUozNmNDbWt0YlovVEE4cXdtYVI1NkdTM2pPZUNIa0FwQ2pRNnpxS1dnTmNmR1VmWGJRZjAKS0VMK1lvZ0R2OVVRMjFOcTBhVHlUcnVhSUlQRy9KUWtiNlFQeTluNVo1d3NWR0RGenp6MjFQbXhhN3lVZDJPUApodGFOZ1Mza053WnJ2TjZ6ODNRdkVEVjdTWnNpTUgvUkpGaDZZTVdnQllXeTA2dU9kK3RvMGoyTXc5c0lSaDFoCnd3c3Z1K0Z4QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVitCQzFGTHFZSW1TbUJDVy9ONC8xdzlQanV6QWZCZ05WSFNNRUdEQVdnQlNWK0JDMQpGTHFZSW1TbUJDVy9ONC8xdzlQanV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGcVdBNUMxdUNnZFpmRWlXCjRMZnB6bjA3WEZKVDJGb0h3eEpwNGF4S21WbTg1Q0tpdklyaEJvVDBuN1o1S3lvOElPYWgzTytldzJWS2xsWVMKWU81VHpwVS9GME96azJxRTgwcCtkVDFSY3hTZ2ZCUktyQlc3b3ozN2I0V1g0blNoK0QyUit5M3UyRXp0TTRjcAp3c0E5NzlzNHhSdXpXZkJ5OWNnQTJvQnZrNzhaTzJHMCtJSVRJdlFLSHRnbTZmUjZsM243Qm9PcGpQWm1wT1hXCkMrVlJtckJCYjZmcVMzWGNUMTIrdFpLR3NJNVU4S1k4d3dUQkY0MWJnRkk4OGg2emJ5amZHMFJvVm5xUXdNMGsKYy9aL1ZhL2IwV0hFVGVEQkc1aUVEbDlONTI3SXdJZXFrRmxjN1pqYW9pQTE0K3ZlWnFQS1k4SFFuTFZscTI1ZQpaRmxPbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxTnpZeE9EWXdOelF3SGhjTk1Ua3hNakV5TWpFeU56VXpXaGNOTWpFeE1qRXgKTWpFeU56VTBXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU56WXhPRFl3TnpRdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETEx3cEdIdkpUeHFpN0VpQVgxTmNxCjhDQlpIanZEeXEwKy84Z2FtZDJDU0hIY096bGljTlhGUG4rOUlDWURsMjN2eEo0ZlQ4M3RnN1FSZ2R6eVI2N0YKN0IxMEFheGJjNFRkclVRWi9mcXMvWU05ZjNJWWNsK2U1djZITFl4cW1FN2xkRjN6ZEgybUwvckU3MmgvUjRKcApybS9YQldaYXpwM2ViNU9tdmpYc3B0bkdpN3NzYncrMlA2TzFGMGRZRDZTaWFoUjkvaGl0N2lMVXZIakRaWm9XCnByZEc0T2RYYUxYallHLzBBK3VTaHBRRnlwaDdsUGErVFl6UkFIcE1tODArSmZ6YnRKS1dmMlBpd2JzSmF3ZVUKWEZtaklReDI2QWZoZlJ4SUQxTldXTmgvZEdmQWNEQ0pYUTYvWlVSZFhreklnbjVKL1NpZXhSTHhKN1JFcnIrOQpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZXBVZ09DNFhNSWtJMlNrNFBubGtOVTdtYlRBYWwxVDZhV3BmN09Oc3oKWFJENDNGUTY1WjZVVlZScmgvZzkzWGNCL2w1aE9yaDJSZUlGZ0JyR2J1d1FweVpTTzRUUEM2WDlhMjNRWENRMQpidkhxeFVmYlB2YWc0Um93T28yeWs5UDJiSkhOOEZ1N2pEUGpENHV6OUgvbmZJNHgxNzJSVGJmMW1NTm1nL1BvClpBSDN3N0tONzhzcVhzOEQ4dDMvYmhZVE94RFNlZWEzd0Y3MzFrVlNJbEtvb1B4Y092NGl6alQxa1MvMExPSEwKb1RhQ1poV01IdGtXbGN0WVpkSS80d2lCdTdDSExITmNHMG5NbXVKcVFxSXFCa0ZNczQ2YmZtcmdPaFFkWXk5TQpDaXFqZkovbnQrTjJlNlEzclAyL3k5VzUrRU4xZ3V6Z1lBM0lLcWpWYklPYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  namespace: M3NjYWxlLXByb2plY3Q=
  service-ca.crt: 
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltaHBUMmsyVGtFd1N6aHVUMHBhV0VaemVUSnpaMEk1VDJkbFpXczViSFUzTFU5d1FscEhWV05tVW1NaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUl6YzJOaGJHVXRjSEp2YW1WamRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSmtaWEJzYjNsbGNpMTBiMnRsYmkxcmJucDJjeUlzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG01aGJXVWlPaUprWlhCc2IzbGxjaUlzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJbVV3WW1FNU1XWTBMVFZpTkRNdE5ESTNOQzFpTURWbExUZ3lPV0ZqTWpBNE9EUTJaQ0lzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERvemMyTmhiR1V0Y0hKdmFtVmpkRHBrWlhCc2IzbGxjaUo5LmZUNzVIdzhwQmVsdHpBTVB5cVdaa2YweG1nTnNkVThhV1hNTTNfb3RzVWp6NVpmZldBa2c2WkloVHNmX29uMktBYU5xYVRzQ3I1b2xsa0t6Zm9aRUFpc1Vjc25IamY5QUhWZ0oyNXNaMUtfaWxtMG0xVElIdHVHX3FnaHJZMkhaMDFzN1BEN2ZMYjZzWFM4X1M4eVJTNVVyTGlvTXhRVFZIR0oxV1pZWkhrZ0I0TTlYWUdmcDJDd19HeDdlZGg3TUVSZ0ZoZHo1OHgzcVQ3UmNlclFrRmRiSVhqenU5eGN1Y3dTdWpwSzN2bC04Z3F5Q1Vlc3NrREVVeTVOR2EtaUs0NWpuZHhJXzRHUnp3UDJ0RTdPNHR6RHg5VHBPUXpPcU10dGRXNGF1b1JUUUxLU1JGZlZNTU0xN1hXU3pnMU9sQkpXUHFCTWRQZ0R0cVZjRUhMbG9mdw==
kind: Secret
metadata:
  annotations:
    kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
    kubernetes.io/service-account.name: deployer
    kubernetes.io/service-account.uid: e0ba91f4-5b43-4274-b05e-829ac208846d
  creationTimestamp: "2020-07-27T12:56:31Z"
  name: deployer-token-knzvs
  namespace: 3scale-project
  resourceVersion: "198370272"
  selfLink: /api/v1/namespaces/3scale-project/secrets/deployer-token-knzvs
  uid: 98a688bb-98b1-41dc-bb8c-4caed361255c
type: kubernetes.io/service-account-token
apiVersion: v1
data:
  .dockercfg: 
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: robot-deployer
    kubernetes.io/service-account.uid: aea740a2-39c0-447c-99ea-d0ab537c3125
    openshift.io/token-secret.name: robot-deployer-token-x7z5k
    openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6ImhpT2k2TkEwSzhuT0paWEZzeTJzZ0I5T2dlZWs5bHU3LU9wQlpHVWNmUmMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiIzc2NhbGUtcHJvamVjdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJyb2JvdC1kZXBsb3llci10b2tlbi14N3o1ayIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJyb2JvdC1kZXBsb3llciIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImFlYTc0MGEyLTM5YzAtNDQ3Yy05OWVhLWQwYWI1MzdjMzEyNSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDozc2NhbGUtcHJvamVjdDpyb2JvdC1kZXBsb3llciJ9.KAwGZZMoXvOGbfbbDSqLQWBCgcANnYwMmAZ7UsTKxEie6qdsz9CTgrzWG1zQMxP7TZXH8iMsNNt0ym0vijn6oXvObaShWWfYeT3FESoGIkOQ2FACImUDPXUQpHEPIOmpqWmMKTOAIzCS2tkm-OnqDJonMwtzJXpb8n9cR7ebxLD6lHR2YPcu1y80qzfmyI1CmQE6TZNe2RGHGbcUDvqqfk7RD6aGmCqhev2L3Go_Zwlk_78EdHEJvd0V5GzkR-RD3hlfbUKJk6XyEZ7-s09iHio4VljgOxTBixoz3ScJrr4RECZ_ACnSRFiELppOtpEwOIPWOcTzYtRaLJjVUgDcVQ
  creationTimestamp: "2020-07-27T12:56:31Z"
  name: robot-deployer-dockercfg-t9rl5
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: v1
    blockOwnerDeletion: false
    controller: true
    kind: Secret
    name: robot-deployer-token-x7z5k
    uid: 3ac24ebd-bf3b-4649-86c3-8ecda1d8df3e
  resourceVersion: "198370299"
  selfLink: /api/v1/namespaces/3scale-project/secrets/robot-deployer-dockercfg-t9rl5
  uid: 90077bc7-40df-4c52-9cb7-853207ffb12f
type: kubernetes.io/dockercfg
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJSU9LRGtxcVpKUnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qRXlNakF5TVRJMVdoY05Namt4TWpBNU1qQXlNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxXN0NtNkgyc050WkhQT1pNanFhOWtNT1BKdHJQUgovSnFWSFJzWGdBYmdUSjhmdmVJenVEejhjc1RobSthYU1zUWxwR3BITHpXZkExK3lVc3hibkZCOGpibmNxdzJoCnFrZ1pzTjluMHBEKzc5SkcyWE9UeTMxV04wTThKMWRVRko5K1VuckVJYXUwYWlya3VrTnZDV2xkcnAwMkFzOEUKclc5dlh2NEhhdTRLemE5enB3TEFVK1Fsc3l4c0tzRk9BM1JkZm9QR2NkakRzZWowT1hlN0t3R1dvR0hycjc1Ygp6K0JmbmV4WUcwNWQyZHRhQi9yUnN4RmlPL2RKai9PS3hEY0NXT1RXWU5XY1lGQ0lKSVJyZVJYSE1XUUNRS0c5ClBEQ1pxb0ZKMGhkUlhBTlNMaUlLUkJqcEw0VEZaTGFzU3h0WVZZT1E2d1BpWS9WUDJEL1dqQzBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPbwptOVhXKzFYNWwwaXpzWHRwN2l6dzByL2lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFrdWhvdG1tTFp4V3Q1ClVnZXF1TTJEMXlvU2xIVDhxazlIb3VrVmJ4S1JuZWxEUG1GVkhJNU1NRkhnWmRnTUd3ZU90VS9QdjNHd21ZNHQKNlRJbE4wVXQxWloxL094S1JiTEc3M3Yrb0tNa1dFa3FBenl4N250MUtBZUFqQi9tVDE2SUdaVERFOExoY25FRgpCMGxVMnd2aGExMnYvYjgxeTQ2c3pLcG03eXFIenZ4d2JGZUtLK2dhTlJvN1lGbUUvNm5rQlJTSHdqSk84cmVwCmFqMlFmbDJaUHBmRlVPdjFheU9hY1lXUHBua2YzZFBSelMxY25IeUZJVnFQSmxqZTByVDVZNlk3Qy94Y3pGV04KRjhXTGlBTTdJQlFVTUdVUDlOd1p1NDc3NEVWbEpsZnRqWEdEcWg3UkFWViszU05aNTBuWjVFdHpONHdoNUxYYwppcEI0Sy9PUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1YclhlcmdVY3JFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1USXhNakl3TWpFeU5Wb1hEVEk1TVRJd09USXdNakV5TlZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eXJscGROZ3dGOGgKMGN3ekRKRUdPcmZBb2RsdUtOUTRXYmprVGM3ajJXY0hpQ2hhQUhtLytrOCtueTdJYVAvT1NiMkh0c0lOOFVaOApSY0ZwREdpWDBKczFHcnN4Q3lXVkZ1VndoRE44UHZRc1NkYjJDamJNMlVYdDZuVzRNZmRuUUIzcDdmM1lneHY3CmEyWFFLUndkTzhhSExhWWRGK1BvaUNDVGMyQURHMVJ1UzVvWEV2Y1ZBa3JLaDFDMHNLQi9FUFpiSVNIVCtpWDkKeWg1M2VZb3NBalUyOERPL3J5dFpVdU9TS01tbWJqUjRVOUxiVlE0ZUkrMzVPWU9UZi9iNTJ0bjhWRFVzdXBIbgpVWU8vaWs5d2w5RmFQKzlGdm9WQjdIUXNwaFdVOGpSZy9RSElMTjNXREQ0R1RKTlkwVzVIMDNweGVIWmNHbHVLCmV1VS9IbjgwZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdxNjRJbDNyUEZ1RVVkNWFjOUhQNGt1dmF0TXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJJemg5cWpzQkVLTWs1QVd2ZkFKNGY0WEN2dDJiYjZCM1VMNkk3TUprVDAxZU5DalRMSDlwZVJsVG5pCk1WOFZ3VGtkWXpKN3FGV01ubTZ6NW1PRzZyc01TbG9YNithTklmT0h5c1YvUGpxVFhzV2R4RzBrTGNod0xmUEoKYzlqSTA5c3FuejhxOGZaYUdyTUZhdUpqZ0g2UTVSbHA4VmZyM0ZYRm1Ib2tTdEhvZHVQQ2JFblBvMVlvK2VYegpMditCa013aHEzbmN4a2lXclZ3NEtrSnY1S2V4cklWNTI5eDJpbHdCU1BLSitiTXdlNDlRWEp0cEVSeFBYV1VBCnU5bzRJVnVINDk2VWpMSzBQOWhaa3dMblgzVlJxcE1nZVhJdUszTEROcDhSbWRRcGszcE9nUFBFM2VpRHFTc24KNERHY1prYzVCakRGR25mNElOdjlwN1Roc3lZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSWNnelB0Slk5aEVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRJeE1qSXdNakV5TlZvWERUSTVNVEl3T1RJd01qRXlOVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTMrb2xmb20yK25jbzk1SFlMZnBTaURoYWwvVWM0cExzT2VKMFcvSlA2RWRHQW1aVElWVXFxS3EzWko1WgpXaHhQS25KV2JxWEsrWkZSZkgrdnN2ZUNSNEkwK1J1MnNyUU5MVTlZb2drNUN5Yy9UNStlekpEaDQvZ1piL0FpCmF5T3FxV1RSSHQ5bkExUWdYR01KS3FERGh0TmUvcXQ1WnBoTWFXd0ZnNE96TkhRWGxaRnpMUDhkOC9KTlFEZUQKODFBZ3l2bG90TVRBQWZWTkpNN05VYXBGNTdUSE5OVnFvM01nSkVxSkhoU3lZWkhka3pCaEhyOXJXZGRNVktMbQorc1lINmdvQ0E2UDRYY1hoZmg3ak85UGJaTnp6UGZ6QUhBd0RkejNybFM0U3FadGZkZUVOWC8vc2VzS0xGdUN4CmxHSEQxOXV0bEpDQW9PMUVkUGhuR2hqb1RRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYMU5IY3N3a1V4V3UzcEoyWldXZUhneW5QYzh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFR0FzY2kyUjJvajRFcUVDNVBVajdRRjFZZ0VucmNWa2VVYWpBN21paFArCmdOeVpDWDV4VEx1WVpaSnByOURqWFdVQlNsdDgyZEtNeDR3TkdDb0IwMnM0VVNTOElWQllGV3dnc29wL3hxTmsKSS9Xalc2TTlyT2ZBTGk1UzhVT3NseHBndEd5aUh2c3J2cHBQQ0Z6YmZ4dUUwdzEwUW9oVzhvdFpkYWlWS09jMQo2MkllTGRGc2swb2dWMGNjUVV6QlpBQmQ5ZXRaMnAvZGxxenhsOVhIQklTdG9KWVVwOHNOQzFHdCtkeHhnekFJCnVKbkRRUnhEaWtLYVNLZWtCa2crS2J3RUQ5WGdLazhqVUhBNkVFd0tHM2xkbTY5eWZ5ZzJEeUNjcVNsMkVNdlcKdlBncU5GZmZOblhOZGIzQ01zRGoycTJ3SjJKeStlcGlieDVLdHNFVHQzRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9Ea3pPRFUxTWpFd0hoY05NakF3TlRFek1UVTFPRFF3V2hjTk16QXcKTlRFeE1UVTFPRFF4V2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRGt6Ck9EVTFNakV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p4bUQ3a3hDbHg3a0EKTDhxWm5LSFphTVZ5TmJwSzBvem91UW9ENzZMV1lqTnNYRlRXVmlRdUppUml2WEtnVThmU2hISWJJdDFGSU5rcwpGZUZ4QkRad1BFMWhqcHZEUHcrY2Q3emhZcUFpbUtkdHlRMDE4RjBTR0VKNnpab25XZENZeHNxbkZWaEtOSzR2Cmk2czU2TmRTN1RPRUozNmNDbWt0YlovVEE4cXdtYVI1NkdTM2pPZUNIa0FwQ2pRNnpxS1dnTmNmR1VmWGJRZjAKS0VMK1lvZ0R2OVVRMjFOcTBhVHlUcnVhSUlQRy9KUWtiNlFQeTluNVo1d3NWR0RGenp6MjFQbXhhN3lVZDJPUApodGFOZ1Mza053WnJ2TjZ6ODNRdkVEVjdTWnNpTUgvUkpGaDZZTVdnQllXeTA2dU9kK3RvMGoyTXc5c0lSaDFoCnd3c3Z1K0Z4QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVitCQzFGTHFZSW1TbUJDVy9ONC8xdzlQanV6QWZCZ05WSFNNRUdEQVdnQlNWK0JDMQpGTHFZSW1TbUJDVy9ONC8xdzlQanV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGcVdBNUMxdUNnZFpmRWlXCjRMZnB6bjA3WEZKVDJGb0h3eEpwNGF4S21WbTg1Q0tpdklyaEJvVDBuN1o1S3lvOElPYWgzTytldzJWS2xsWVMKWU81VHpwVS9GME96azJxRTgwcCtkVDFSY3hTZ2ZCUktyQlc3b3ozN2I0V1g0blNoK0QyUit5M3UyRXp0TTRjcAp3c0E5NzlzNHhSdXpXZkJ5OWNnQTJvQnZrNzhaTzJHMCtJSVRJdlFLSHRnbTZmUjZsM243Qm9PcGpQWm1wT1hXCkMrVlJtckJCYjZmcVMzWGNUMTIrdFpLR3NJNVU4S1k4d3dUQkY0MWJnRkk4OGg2emJ5amZHMFJvVm5xUXdNMGsKYy9aL1ZhL2IwV0hFVGVEQkc1aUVEbDlONTI3SXdJZXFrRmxjN1pqYW9pQTE0K3ZlWnFQS1k4SFFuTFZscTI1ZQpaRmxPbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxTnpZeE9EWXdOelF3SGhjTk1Ua3hNakV5TWpFeU56VXpXaGNOTWpFeE1qRXgKTWpFeU56VTBXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU56WXhPRFl3TnpRdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETEx3cEdIdkpUeHFpN0VpQVgxTmNxCjhDQlpIanZEeXEwKy84Z2FtZDJDU0hIY096bGljTlhGUG4rOUlDWURsMjN2eEo0ZlQ4M3RnN1FSZ2R6eVI2N0YKN0IxMEFheGJjNFRkclVRWi9mcXMvWU05ZjNJWWNsK2U1djZITFl4cW1FN2xkRjN6ZEgybUwvckU3MmgvUjRKcApybS9YQldaYXpwM2ViNU9tdmpYc3B0bkdpN3NzYncrMlA2TzFGMGRZRDZTaWFoUjkvaGl0N2lMVXZIakRaWm9XCnByZEc0T2RYYUxYallHLzBBK3VTaHBRRnlwaDdsUGErVFl6UkFIcE1tODArSmZ6YnRKS1dmMlBpd2JzSmF3ZVUKWEZtaklReDI2QWZoZlJ4SUQxTldXTmgvZEdmQWNEQ0pYUTYvWlVSZFhreklnbjVKL1NpZXhSTHhKN1JFcnIrOQpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZXBVZ09DNFhNSWtJMlNrNFBubGtOVTdtYlRBYWwxVDZhV3BmN09Oc3oKWFJENDNGUTY1WjZVVlZScmgvZzkzWGNCL2w1aE9yaDJSZUlGZ0JyR2J1d1FweVpTTzRUUEM2WDlhMjNRWENRMQpidkhxeFVmYlB2YWc0Um93T28yeWs5UDJiSkhOOEZ1N2pEUGpENHV6OUgvbmZJNHgxNzJSVGJmMW1NTm1nL1BvClpBSDN3N0tONzhzcVhzOEQ4dDMvYmhZVE94RFNlZWEzd0Y3MzFrVlNJbEtvb1B4Y092NGl6alQxa1MvMExPSEwKb1RhQ1poV01IdGtXbGN0WVpkSS80d2lCdTdDSExITmNHMG5NbXVKcVFxSXFCa0ZNczQ2YmZtcmdPaFFkWXk5TQpDaXFqZkovbnQrTjJlNlEzclAyL3k5VzUrRU4xZ3V6Z1lBM0lLcWpWYklPYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  namespace: M3NjYWxlLXByb2plY3Q=
  service-ca.crt: 
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltaHBUMmsyVGtFd1N6aHVUMHBhV0VaemVUSnpaMEk1VDJkbFpXczViSFUzTFU5d1FscEhWV05tVW1NaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUl6YzJOaGJHVXRjSEp2YW1WamRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnliMkp2ZEMxa1pYQnNiM2xsY2kxMGIydGxiaTFuYm0xbk9TSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMbTVoYldVaU9pSnliMkp2ZEMxa1pYQnNiM2xsY2lJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1GbFlUYzBNR0V5TFRNNVl6QXRORFEzWXkwNU9XVmhMV1F3WVdJMU16ZGpNekV5TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREb3pjMk5oYkdVdGNISnZhbVZqZERweWIySnZkQzFrWlhCc2IzbGxjaUo5LkdlTXBRak5ZeEJuckNEbVBzZTd1dUVjejlDUzNnUTIyQlVFV3NScERiRUlMcGZFXy1uR1Zlemhqck52RU1rX01mWXZFTXd5WWlrLVJxb2NxT3BsMXN5dzJGTlppaTRxRmRFRmhQcmpvME5HcThKV2FUTU1FR2JtSkV3ejhEVkIwSFFscGxCSWE4OTRRRDRVTjZLMW1tY2ZzV1ZKTVh6MHQ1dTFFeVZxV3RJazhucnotS2hkMW5SeWNFZjVrWmdtYWJFS3k5RGVMV1NYajFYN3lzaERvZkFKU3JtUzdlNTgxV20tOWFrMEhKTTg1VTBJUXZ4TE5jc2FkdnZSRE03T0xmLXJfZ2MyeEZaWWo1SFNHZG9RYXZqOThxdzVpdjNsMXM3RUZJQnZRYS05OWphc0Y4VV9CTXEwR1hmajlUaXBUcXZSOFBrYmFuRE9fTlg0NnpmWVZrdw==
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: robot-deployer
    kubernetes.io/service-account.uid: aea740a2-39c0-447c-99ea-d0ab537c3125
  creationTimestamp: "2020-07-27T12:56:31Z"
  name: robot-deployer-token-gnmg9
  namespace: 3scale-project
  resourceVersion: "198370292"
  selfLink: /api/v1/namespaces/3scale-project/secrets/robot-deployer-token-gnmg9
  uid: 46ce625f-4c90-4720-83d0-ff0811f80b41
type: kubernetes.io/service-account-token
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJSU9LRGtxcVpKUnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qRXlNakF5TVRJMVdoY05Namt4TWpBNU1qQXlNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxXN0NtNkgyc050WkhQT1pNanFhOWtNT1BKdHJQUgovSnFWSFJzWGdBYmdUSjhmdmVJenVEejhjc1RobSthYU1zUWxwR3BITHpXZkExK3lVc3hibkZCOGpibmNxdzJoCnFrZ1pzTjluMHBEKzc5SkcyWE9UeTMxV04wTThKMWRVRko5K1VuckVJYXUwYWlya3VrTnZDV2xkcnAwMkFzOEUKclc5dlh2NEhhdTRLemE5enB3TEFVK1Fsc3l4c0tzRk9BM1JkZm9QR2NkakRzZWowT1hlN0t3R1dvR0hycjc1Ygp6K0JmbmV4WUcwNWQyZHRhQi9yUnN4RmlPL2RKai9PS3hEY0NXT1RXWU5XY1lGQ0lKSVJyZVJYSE1XUUNRS0c5ClBEQ1pxb0ZKMGhkUlhBTlNMaUlLUkJqcEw0VEZaTGFzU3h0WVZZT1E2d1BpWS9WUDJEL1dqQzBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPbwptOVhXKzFYNWwwaXpzWHRwN2l6dzByL2lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFrdWhvdG1tTFp4V3Q1ClVnZXF1TTJEMXlvU2xIVDhxazlIb3VrVmJ4S1JuZWxEUG1GVkhJNU1NRkhnWmRnTUd3ZU90VS9QdjNHd21ZNHQKNlRJbE4wVXQxWloxL094S1JiTEc3M3Yrb0tNa1dFa3FBenl4N250MUtBZUFqQi9tVDE2SUdaVERFOExoY25FRgpCMGxVMnd2aGExMnYvYjgxeTQ2c3pLcG03eXFIenZ4d2JGZUtLK2dhTlJvN1lGbUUvNm5rQlJTSHdqSk84cmVwCmFqMlFmbDJaUHBmRlVPdjFheU9hY1lXUHBua2YzZFBSelMxY25IeUZJVnFQSmxqZTByVDVZNlk3Qy94Y3pGV04KRjhXTGlBTTdJQlFVTUdVUDlOd1p1NDc3NEVWbEpsZnRqWEdEcWg3UkFWViszU05aNTBuWjVFdHpONHdoNUxYYwppcEI0Sy9PUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1YclhlcmdVY3JFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1USXhNakl3TWpFeU5Wb1hEVEk1TVRJd09USXdNakV5TlZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eXJscGROZ3dGOGgKMGN3ekRKRUdPcmZBb2RsdUtOUTRXYmprVGM3ajJXY0hpQ2hhQUhtLytrOCtueTdJYVAvT1NiMkh0c0lOOFVaOApSY0ZwREdpWDBKczFHcnN4Q3lXVkZ1VndoRE44UHZRc1NkYjJDamJNMlVYdDZuVzRNZmRuUUIzcDdmM1lneHY3CmEyWFFLUndkTzhhSExhWWRGK1BvaUNDVGMyQURHMVJ1UzVvWEV2Y1ZBa3JLaDFDMHNLQi9FUFpiSVNIVCtpWDkKeWg1M2VZb3NBalUyOERPL3J5dFpVdU9TS01tbWJqUjRVOUxiVlE0ZUkrMzVPWU9UZi9iNTJ0bjhWRFVzdXBIbgpVWU8vaWs5d2w5RmFQKzlGdm9WQjdIUXNwaFdVOGpSZy9RSElMTjNXREQ0R1RKTlkwVzVIMDNweGVIWmNHbHVLCmV1VS9IbjgwZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdxNjRJbDNyUEZ1RVVkNWFjOUhQNGt1dmF0TXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJJemg5cWpzQkVLTWs1QVd2ZkFKNGY0WEN2dDJiYjZCM1VMNkk3TUprVDAxZU5DalRMSDlwZVJsVG5pCk1WOFZ3VGtkWXpKN3FGV01ubTZ6NW1PRzZyc01TbG9YNithTklmT0h5c1YvUGpxVFhzV2R4RzBrTGNod0xmUEoKYzlqSTA5c3FuejhxOGZaYUdyTUZhdUpqZ0g2UTVSbHA4VmZyM0ZYRm1Ib2tTdEhvZHVQQ2JFblBvMVlvK2VYegpMditCa013aHEzbmN4a2lXclZ3NEtrSnY1S2V4cklWNTI5eDJpbHdCU1BLSitiTXdlNDlRWEp0cEVSeFBYV1VBCnU5bzRJVnVINDk2VWpMSzBQOWhaa3dMblgzVlJxcE1nZVhJdUszTEROcDhSbWRRcGszcE9nUFBFM2VpRHFTc24KNERHY1prYzVCakRGR25mNElOdjlwN1Roc3lZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSWNnelB0Slk5aEVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRJeE1qSXdNakV5TlZvWERUSTVNVEl3T1RJd01qRXlOVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTMrb2xmb20yK25jbzk1SFlMZnBTaURoYWwvVWM0cExzT2VKMFcvSlA2RWRHQW1aVElWVXFxS3EzWko1WgpXaHhQS25KV2JxWEsrWkZSZkgrdnN2ZUNSNEkwK1J1MnNyUU5MVTlZb2drNUN5Yy9UNStlekpEaDQvZ1piL0FpCmF5T3FxV1RSSHQ5bkExUWdYR01KS3FERGh0TmUvcXQ1WnBoTWFXd0ZnNE96TkhRWGxaRnpMUDhkOC9KTlFEZUQKODFBZ3l2bG90TVRBQWZWTkpNN05VYXBGNTdUSE5OVnFvM01nSkVxSkhoU3lZWkhka3pCaEhyOXJXZGRNVktMbQorc1lINmdvQ0E2UDRYY1hoZmg3ak85UGJaTnp6UGZ6QUhBd0RkejNybFM0U3FadGZkZUVOWC8vc2VzS0xGdUN4CmxHSEQxOXV0bEpDQW9PMUVkUGhuR2hqb1RRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYMU5IY3N3a1V4V3UzcEoyWldXZUhneW5QYzh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFR0FzY2kyUjJvajRFcUVDNVBVajdRRjFZZ0VucmNWa2VVYWpBN21paFArCmdOeVpDWDV4VEx1WVpaSnByOURqWFdVQlNsdDgyZEtNeDR3TkdDb0IwMnM0VVNTOElWQllGV3dnc29wL3hxTmsKSS9Xalc2TTlyT2ZBTGk1UzhVT3NseHBndEd5aUh2c3J2cHBQQ0Z6YmZ4dUUwdzEwUW9oVzhvdFpkYWlWS09jMQo2MkllTGRGc2swb2dWMGNjUVV6QlpBQmQ5ZXRaMnAvZGxxenhsOVhIQklTdG9KWVVwOHNOQzFHdCtkeHhnekFJCnVKbkRRUnhEaWtLYVNLZWtCa2crS2J3RUQ5WGdLazhqVUhBNkVFd0tHM2xkbTY5eWZ5ZzJEeUNjcVNsMkVNdlcKdlBncU5GZmZOblhOZGIzQ01zRGoycTJ3SjJKeStlcGlieDVLdHNFVHQzRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9Ea3pPRFUxTWpFd0hoY05NakF3TlRFek1UVTFPRFF3V2hjTk16QXcKTlRFeE1UVTFPRFF4V2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRGt6Ck9EVTFNakV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p4bUQ3a3hDbHg3a0EKTDhxWm5LSFphTVZ5TmJwSzBvem91UW9ENzZMV1lqTnNYRlRXVmlRdUppUml2WEtnVThmU2hISWJJdDFGSU5rcwpGZUZ4QkRad1BFMWhqcHZEUHcrY2Q3emhZcUFpbUtkdHlRMDE4RjBTR0VKNnpab25XZENZeHNxbkZWaEtOSzR2Cmk2czU2TmRTN1RPRUozNmNDbWt0YlovVEE4cXdtYVI1NkdTM2pPZUNIa0FwQ2pRNnpxS1dnTmNmR1VmWGJRZjAKS0VMK1lvZ0R2OVVRMjFOcTBhVHlUcnVhSUlQRy9KUWtiNlFQeTluNVo1d3NWR0RGenp6MjFQbXhhN3lVZDJPUApodGFOZ1Mza053WnJ2TjZ6ODNRdkVEVjdTWnNpTUgvUkpGaDZZTVdnQllXeTA2dU9kK3RvMGoyTXc5c0lSaDFoCnd3c3Z1K0Z4QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVitCQzFGTHFZSW1TbUJDVy9ONC8xdzlQanV6QWZCZ05WSFNNRUdEQVdnQlNWK0JDMQpGTHFZSW1TbUJDVy9ONC8xdzlQanV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGcVdBNUMxdUNnZFpmRWlXCjRMZnB6bjA3WEZKVDJGb0h3eEpwNGF4S21WbTg1Q0tpdklyaEJvVDBuN1o1S3lvOElPYWgzTytldzJWS2xsWVMKWU81VHpwVS9GME96azJxRTgwcCtkVDFSY3hTZ2ZCUktyQlc3b3ozN2I0V1g0blNoK0QyUit5M3UyRXp0TTRjcAp3c0E5NzlzNHhSdXpXZkJ5OWNnQTJvQnZrNzhaTzJHMCtJSVRJdlFLSHRnbTZmUjZsM243Qm9PcGpQWm1wT1hXCkMrVlJtckJCYjZmcVMzWGNUMTIrdFpLR3NJNVU4S1k4d3dUQkY0MWJnRkk4OGg2emJ5amZHMFJvVm5xUXdNMGsKYy9aL1ZhL2IwV0hFVGVEQkc1aUVEbDlONTI3SXdJZXFrRmxjN1pqYW9pQTE0K3ZlWnFQS1k4SFFuTFZscTI1ZQpaRmxPbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxTnpZeE9EWXdOelF3SGhjTk1Ua3hNakV5TWpFeU56VXpXaGNOTWpFeE1qRXgKTWpFeU56VTBXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU56WXhPRFl3TnpRdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETEx3cEdIdkpUeHFpN0VpQVgxTmNxCjhDQlpIanZEeXEwKy84Z2FtZDJDU0hIY096bGljTlhGUG4rOUlDWURsMjN2eEo0ZlQ4M3RnN1FSZ2R6eVI2N0YKN0IxMEFheGJjNFRkclVRWi9mcXMvWU05ZjNJWWNsK2U1djZITFl4cW1FN2xkRjN6ZEgybUwvckU3MmgvUjRKcApybS9YQldaYXpwM2ViNU9tdmpYc3B0bkdpN3NzYncrMlA2TzFGMGRZRDZTaWFoUjkvaGl0N2lMVXZIakRaWm9XCnByZEc0T2RYYUxYallHLzBBK3VTaHBRRnlwaDdsUGErVFl6UkFIcE1tODArSmZ6YnRKS1dmMlBpd2JzSmF3ZVUKWEZtaklReDI2QWZoZlJ4SUQxTldXTmgvZEdmQWNEQ0pYUTYvWlVSZFhreklnbjVKL1NpZXhSTHhKN1JFcnIrOQpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZXBVZ09DNFhNSWtJMlNrNFBubGtOVTdtYlRBYWwxVDZhV3BmN09Oc3oKWFJENDNGUTY1WjZVVlZScmgvZzkzWGNCL2w1aE9yaDJSZUlGZ0JyR2J1d1FweVpTTzRUUEM2WDlhMjNRWENRMQpidkhxeFVmYlB2YWc0Um93T28yeWs5UDJiSkhOOEZ1N2pEUGpENHV6OUgvbmZJNHgxNzJSVGJmMW1NTm1nL1BvClpBSDN3N0tONzhzcVhzOEQ4dDMvYmhZVE94RFNlZWEzd0Y3MzFrVlNJbEtvb1B4Y092NGl6alQxa1MvMExPSEwKb1RhQ1poV01IdGtXbGN0WVpkSS80d2lCdTdDSExITmNHMG5NbXVKcVFxSXFCa0ZNczQ2YmZtcmdPaFFkWXk5TQpDaXFqZkovbnQrTjJlNlEzclAyL3k5VzUrRU4xZ3V6Z1lBM0lLcWpWYklPYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  namespace: M3NjYWxlLXByb2plY3Q=
  service-ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJSU9LRGtxcVpKUnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qRXlNakF5TVRJMVdoY05Namt4TWpBNU1qQXlNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxXN0NtNkgyc050WkhQT1pNanFhOWtNT1BKdHJQUgovSnFWSFJzWGdBYmdUSjhmdmVJenVEejhjc1RobSthYU1zUWxwR3BITHpXZkExK3lVc3hibkZCOGpibmNxdzJoCnFrZ1pzTjluMHBEKzc5SkcyWE9UeTMxV04wTThKMWRVRko5K1VuckVJYXUwYWlya3VrTnZDV2xkcnAwMkFzOEUKclc5dlh2NEhhdTRLemE5enB3TEFVK1Fsc3l4c0tzRk9BM1JkZm9QR2NkakRzZWowT1hlN0t3R1dvR0hycjc1Ygp6K0JmbmV4WUcwNWQyZHRhQi9yUnN4RmlPL2RKai9PS3hEY0NXT1RXWU5XY1lGQ0lKSVJyZVJYSE1XUUNRS0c5ClBEQ1pxb0ZKMGhkUlhBTlNMaUlLUkJqcEw0VEZaTGFzU3h0WVZZT1E2d1BpWS9WUDJEL1dqQzBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPbwptOVhXKzFYNWwwaXpzWHRwN2l6dzByL2lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFrdWhvdG1tTFp4V3Q1ClVnZXF1TTJEMXlvU2xIVDhxazlIb3VrVmJ4S1JuZWxEUG1GVkhJNU1NRkhnWmRnTUd3ZU90VS9QdjNHd21ZNHQKNlRJbE4wVXQxWloxL094S1JiTEc3M3Yrb0tNa1dFa3FBenl4N250MUtBZUFqQi9tVDE2SUdaVERFOExoY25FRgpCMGxVMnd2aGExMnYvYjgxeTQ2c3pLcG03eXFIenZ4d2JGZUtLK2dhTlJvN1lGbUUvNm5rQlJTSHdqSk84cmVwCmFqMlFmbDJaUHBmRlVPdjFheU9hY1lXUHBua2YzZFBSelMxY25IeUZJVnFQSmxqZTByVDVZNlk3Qy94Y3pGV04KRjhXTGlBTTdJQlFVTUdVUDlOd1p1NDc3NEVWbEpsZnRqWEdEcWg3UkFWViszU05aNTBuWjVFdHpONHdoNUxYYwppcEI0Sy9PUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1YclhlcmdVY3JFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1USXhNakl3TWpFeU5Wb1hEVEk1TVRJd09USXdNakV5TlZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eXJscGROZ3dGOGgKMGN3ekRKRUdPcmZBb2RsdUtOUTRXYmprVGM3ajJXY0hpQ2hhQUhtLytrOCtueTdJYVAvT1NiMkh0c0lOOFVaOApSY0ZwREdpWDBKczFHcnN4Q3lXVkZ1VndoRE44UHZRc1NkYjJDamJNMlVYdDZuVzRNZmRuUUIzcDdmM1lneHY3CmEyWFFLUndkTzhhSExhWWRGK1BvaUNDVGMyQURHMVJ1UzVvWEV2Y1ZBa3JLaDFDMHNLQi9FUFpiSVNIVCtpWDkKeWg1M2VZb3NBalUyOERPL3J5dFpVdU9TS01tbWJqUjRVOUxiVlE0ZUkrMzVPWU9UZi9iNTJ0bjhWRFVzdXBIbgpVWU8vaWs5d2w5RmFQKzlGdm9WQjdIUXNwaFdVOGpSZy9RSElMTjNXREQ0R1RKTlkwVzVIMDNweGVIWmNHbHVLCmV1VS9IbjgwZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdxNjRJbDNyUEZ1RVVkNWFjOUhQNGt1dmF0TXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJJemg5cWpzQkVLTWs1QVd2ZkFKNGY0WEN2dDJiYjZCM1VMNkk3TUprVDAxZU5DalRMSDlwZVJsVG5pCk1WOFZ3VGtkWXpKN3FGV01ubTZ6NW1PRzZyc01TbG9YNithTklmT0h5c1YvUGpxVFhzV2R4RzBrTGNod0xmUEoKYzlqSTA5c3FuejhxOGZaYUdyTUZhdUpqZ0g2UTVSbHA4VmZyM0ZYRm1Ib2tTdEhvZHVQQ2JFblBvMVlvK2VYegpMditCa013aHEzbmN4a2lXclZ3NEtrSnY1S2V4cklWNTI5eDJpbHdCU1BLSitiTXdlNDlRWEp0cEVSeFBYV1VBCnU5bzRJVnVINDk2VWpMSzBQOWhaa3dMblgzVlJxcE1nZVhJdUszTEROcDhSbWRRcGszcE9nUFBFM2VpRHFTc24KNERHY1prYzVCakRGR25mNElOdjlwN1Roc3lZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSWNnelB0Slk5aEVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRJeE1qSXdNakV5TlZvWERUSTVNVEl3T1RJd01qRXlOVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTMrb2xmb20yK25jbzk1SFlMZnBTaURoYWwvVWM0cExzT2VKMFcvSlA2RWRHQW1aVElWVXFxS3EzWko1WgpXaHhQS25KV2JxWEsrWkZSZkgrdnN2ZUNSNEkwK1J1MnNyUU5MVTlZb2drNUN5Yy9UNStlekpEaDQvZ1piL0FpCmF5T3FxV1RSSHQ5bkExUWdYR01KS3FERGh0TmUvcXQ1WnBoTWFXd0ZnNE96TkhRWGxaRnpMUDhkOC9KTlFEZUQKODFBZ3l2bG90TVRBQWZWTkpNN05VYXBGNTdUSE5OVnFvM01nSkVxSkhoU3lZWkhka3pCaEhyOXJXZGRNVktMbQorc1lINmdvQ0E2UDRYY1hoZmg3ak85UGJaTnp6UGZ6QUhBd0RkejNybFM0U3FadGZkZUVOWC8vc2VzS0xGdUN4CmxHSEQxOXV0bEpDQW9PMUVkUGhuR2hqb1RRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYMU5IY3N3a1V4V3UzcEoyWldXZUhneW5QYzh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFR0FzY2kyUjJvajRFcUVDNVBVajdRRjFZZ0VucmNWa2VVYWpBN21paFArCmdOeVpDWDV4VEx1WVpaSnByOURqWFdVQlNsdDgyZEtNeDR3TkdDb0IwMnM0VVNTOElWQllGV3dnc29wL3hxTmsKSS9Xalc2TTlyT2ZBTGk1UzhVT3NseHBndEd5aUh2c3J2cHBQQ0Z6YmZ4dUUwdzEwUW9oVzhvdFpkYWlWS09jMQo2MkllTGRGc2swb2dWMGNjUVV6QlpBQmQ5ZXRaMnAvZGxxenhsOVhIQklTdG9KWVVwOHNOQzFHdCtkeHhnekFJCnVKbkRRUnhEaWtLYVNLZWtCa2crS2J3RUQ5WGdLazhqVUhBNkVFd0tHM2xkbTY5eWZ5ZzJEeUNjcVNsMkVNdlcKdlBncU5GZmZOblhOZGIzQ01zRGoycTJ3SjJKeStlcGlieDVLdHNFVHQzRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9Ea3pPRFUxTWpFd0hoY05NakF3TlRFek1UVTFPRFF3V2hjTk16QXcKTlRFeE1UVTFPRFF4V2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRGt6Ck9EVTFNakV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p4bUQ3a3hDbHg3a0EKTDhxWm5LSFphTVZ5TmJwSzBvem91UW9ENzZMV1lqTnNYRlRXVmlRdUppUml2WEtnVThmU2hISWJJdDFGSU5rcwpGZUZ4QkRad1BFMWhqcHZEUHcrY2Q3emhZcUFpbUtkdHlRMDE4RjBTR0VKNnpab25XZENZeHNxbkZWaEtOSzR2Cmk2czU2TmRTN1RPRUozNmNDbWt0YlovVEE4cXdtYVI1NkdTM2pPZUNIa0FwQ2pRNnpxS1dnTmNmR1VmWGJRZjAKS0VMK1lvZ0R2OVVRMjFOcTBhVHlUcnVhSUlQRy9KUWtiNlFQeTluNVo1d3NWR0RGenp6MjFQbXhhN3lVZDJPUApodGFOZ1Mza053WnJ2TjZ6ODNRdkVEVjdTWnNpTUgvUkpGaDZZTVdnQllXeTA2dU9kK3RvMGoyTXc5c0lSaDFoCnd3c3Z1K0Z4QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVitCQzFGTHFZSW1TbUJDVy9ONC8xdzlQanV6QWZCZ05WSFNNRUdEQVdnQlNWK0JDMQpGTHFZSW1TbUJDVy9ONC8xdzlQanV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGcVdBNUMxdUNnZFpmRWlXCjRMZnB6bjA3WEZKVDJGb0h3eEpwNGF4S21WbTg1Q0tpdklyaEJvVDBuN1o1S3lvOElPYWgzTytldzJWS2xsWVMKWU81VHpwVS9GME96azJxRTgwcCtkVDFSY3hTZ2ZCUktyQlc3b3ozN2I0V1g0blNoK0QyUit5M3UyRXp0TTRjcAp3c0E5NzlzNHhSdXpXZkJ5OWNnQTJvQnZrNzhaTzJHMCtJSVRJdlFLSHRnbTZmUjZsM243Qm9PcGpQWm1wT1hXCkMrVlJtckJCYjZmcVMzWGNUMTIrdFpLR3NJNVU4S1k4d3dUQkY0MWJnRkk4OGg2emJ5amZHMFJvVm5xUXdNMGsKYy9aL1ZhL2IwV0hFVGVEQkc1aUVEbDlONTI3SXdJZXFrRmxjN1pqYW9pQTE0K3ZlWnFQS1k4SFFuTFZscTI1ZQpaRmxPbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxTnpZeE9EWXdOelF3SGhjTk1Ua3hNakV5TWpFeU56VXpXaGNOTWpFeE1qRXgKTWpFeU56VTBXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU56WXhPRFl3TnpRdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETEx3cEdIdkpUeHFpN0VpQVgxTmNxCjhDQlpIanZEeXEwKy84Z2FtZDJDU0hIY096bGljTlhGUG4rOUlDWURsMjN2eEo0ZlQ4M3RnN1FSZ2R6eVI2N0YKN0IxMEFheGJjNFRkclVRWi9mcXMvWU05ZjNJWWNsK2U1djZITFl4cW1FN2xkRjN6ZEgybUwvckU3MmgvUjRKcApybS9YQldaYXpwM2ViNU9tdmpYc3B0bkdpN3NzYncrMlA2TzFGMGRZRDZTaWFoUjkvaGl0N2lMVXZIakRaWm9XCnByZEc0T2RYYUxYallHLzBBK3VTaHBRRnlwaDdsUGErVFl6UkFIcE1tODArSmZ6YnRKS1dmMlBpd2JzSmF3ZVUKWEZtaklReDI2QWZoZlJ4SUQxTldXTmgvZEdmQWNEQ0pYUTYvWlVSZFhreklnbjVKL1NpZXhSTHhKN1JFcnIrOQpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZXBVZ09DNFhNSWtJMlNrNFBubGtOVTdtYlRBYWwxVDZhV3BmN09Oc3oKWFJENDNGUTY1WjZVVlZScmgvZzkzWGNCL2w1aE9yaDJSZUlGZ0JyR2J1d1FweVpTTzRUUEM2WDlhMjNRWENRMQpidkhxeFVmYlB2YWc0Um93T28yeWs5UDJiSkhOOEZ1N2pEUGpENHV6OUgvbmZJNHgxNzJSVGJmMW1NTm1nL1BvClpBSDN3N0tONzhzcVhzOEQ4dDMvYmhZVE94RFNlZWEzd0Y3MzFrVlNJbEtvb1B4Y092NGl6alQxa1MvMExPSEwKb1RhQ1poV01IdGtXbGN0WVpkSS80d2lCdTdDSExITmNHMG5NbXVKcVFxSXFCa0ZNczQ2YmZtcmdPaFFkWXk5TQpDaXFqZkovbnQrTjJlNlEzclAyL3k5VzUrRU4xZ3V6Z1lBM0lLcWpWYklPYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFVUQ0NBam1nQXdJQkFnSUlYUjNQMEZQMjlRSXdEUVlKS29aSWh2Y05BUUVMQlFBd05qRTBNRElHQTFVRQpBd3dyYjNCbGJuTm9hV1owTFhObGNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVFUzTmpFNE5UYzROekFlCkZ3MHlNREEwTWpneE9UQTVNRE5hRncweU1qQTJNamN4T1RBNU1EUmFNRFl4TkRBeUJnTlZCQU1NSzI5d1pXNXoKYUdsbWRDMXpaWEoyYVdObExYTmxjblpwYm1jdGMybG5ibVZ5UURFMU56WXhPRFUzT0Rjd2dnRWlNQTBHQ1NxRwpTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDazloSDB6allManYweE5MYVlULzhDTDJLNmE0TzNwdVFpCjRMU015K1NRQVJ0VG1TbTRLRDNGZ3ZsbStzQTVXYlBJNEFLUXQwbWp1eGdYd2lnSjduV2IvN0dwMGFvQUl0a00KMEpFRnRNdlhXK2JnOTVNSTFSczZ3RVpiZzNWMXRxb1BIQVVOMW95bGNGUDJEU3QvV1VMYXRXZWdGZ0tWN0pjeQppZnNpQ3JQRGVWQnN0YVFlT1UyTGMzcFBmaUM1MXorK2NEZ04xNVJmbjZZWWJ1V2loZ2hZMHRjUzJSWnprMVMzClVidlVNUjRWaFJXOWNvR0J4S3l1VTZxNms2SUdnUEZHNGMvVXh5TkJpc2hzbVdUYUM0c2V0eE5wang2eW5mNVcKN2lZaWg5MGIyL3RwczJTSXRUbGxzMUUxeElIWTJHbUlValhITzR5cSt6NzQraktjektlckFnTUJBQUdqWXpCaApNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCU1lad1ZiCjBYbERiNnJpUzJFV2JXMXlVM0tkQ0RBZkJnTlZIU01FR0RBV2dCU1lad1ZiMFhsRGI2cmlTMkVXYlcxeVUzS2QKQ0RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWJZeUJUSjNoSXBIc1dwSFQ3WVcyK3VadHcwUlNqbUk2NE9SdgpzYlFNTGlZdVR3VUxxUXRKQVRIcEw1NG0wamV6c01hTzlDR3FkRy80K1BQUDQycUx0c0JVWC8zZGhPZjB0UHNTCjJPSnZlRTZSOXNuOEtuc1RqUjhOOW5KSVdSRnduZzZNUDBqS3V3b1JnU0orbENqM0NhdVBQQ2FQeklINnY3NHQKSkNIODN5NEdzTUt4VG4wd0lFNlFheWdkcFAyMGwrbXBMM3dkNnVJaXd1R3BPZnZ2bU1rM1RkNThnR1lKKzd3cgpMQXUzeXYrOFR0eENUVXFnSmhDeFg1enNadGdKM09HV2ZtaldTcjZxQmFRbksyWjRBOUZLcWlVOXFldjRRcmFtCjBkdHhkb3lpTHhHeWxiMFIwR1BFTStzOG5PM2lBRGxVQlQ3M3lWWFZENzZqV0V2Zjh3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1qQ0NBaHFnQXdJQkFnSUllSUdLLzF1anNjQXdEUVlKS29aSWh2Y05BUUVMQlFBd05qRTBNRElHQTFVRQpBd3dyYjNCbGJuTm9hV1owTFhObGNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVFUzTmpFNE5UYzROekFlCkZ3MHhPVEV5TVRJeU1USXpNRGRhRncweU1UQTFNamd4T1RBNU1EUmFNRFl4TkRBeUJnTlZCQU1NSzI5d1pXNXoKYUdsbWRDMXpaWEoyYVdObExYTmxjblpwYm1jdGMybG5ibVZ5UURFMU56WXhPRFUzT0Rjd2dnRWlNQTBHQ1NxRwpTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDcEFuc0FhTis0YzhyeWk4RVpHVVFaUDRSSFhvQ1lKRWJZCjVGLzZ3R0JEMnBvdURPczN5K0w2b0Y0ZlNkNE5iSkJNT1VXZkx4eGNlQWZSMXBoQXpFYmQrRmNaTmtaZDRSUG0KakxCL3BmWFoxenhNQ3dYNlhEWnlFd2xMUWJWTUZZazV5V2VUYnRiaUZPZnU0RXhpVVd4bWhCZ1YycVk1RVlZYgpXZDJST0dEU2VHbDNtM2p5UGlNdlFPSkxDeDFkblZmWTdlbDcxcWJUNVBZeURLY1duK0Y3aEMwb2JTMEVNQjkyCnNGdHlmeEU4VGJKNDNsbWJQOE5iSHBTZmFLMFJuUkFuOFVoQ2hWdVhKenZRYWRScElLNnhhZGFCMytkOGJqaDkKVU1GaFhYM3pjQmhPOG5FS1AzRkNnamI3NWU1NTdlVFAxZnllTmdjTEhTMUNBQ1JHYWlOZkFnTUJBQUdqUkRCQwpNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01COEdBMVVkSXdRWU1CYUFGSmhuCkJWdlJlVU52cXVKTFlSWnRiWEpUY3AwSU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlA0WlljRnVFM0tsek8KUGswQzVYRFpqY1dNeVp4Z1hxRXhQS0lQNzZhc0NEdzduQ25HWVIvNkk0TlVzSUFrMC9mdFQwT05GRW5ZMTdBcgpmVW1FY0xCSktWQ25zNDg1SVFIcGc2OXo0UmdHYW1vb2dENEZyenJTbHcxY3NSclVZdlo0d21LYUFQTGdLQjMrCjhXZi9NVENRRG9jUzlGWFZESFFVOEpoS0lZNitMQjVYYjJldTAwMGJqdHZrdkxwUWc1Z1Jkd2svamtHdkNDRjgKNWxNTW9XTkpxRkJqQVdwcFBkdy9aQjZKQWs2RkVmR3VCTTdUc3ZTUnlUOU81b3BkRGl0eGFoNFgwdER4V0V1dAp4dVlpUDA1Q0dvK0YwRVZ5S1M1blNwazRMVjVYeDNIRGI4Y1FoRkFmYWlPSTVKcTBvU3hpajk5cDl0ZDRVQ284CmgzQmpJSUFwCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltaHBUMmsyVGtFd1N6aHVUMHBhV0VaemVUSnpaMEk1VDJkbFpXczViSFUzTFU5d1FscEhWV05tVW1NaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUl6YzJOaGJHVXRjSEp2YW1WamRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnliMkp2ZEMxa1pYQnNiM2xsY2kxMGIydGxiaTE0TjNvMWF5SXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMbTVoYldVaU9pSnliMkp2ZEMxa1pYQnNiM2xsY2lJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExuVnBaQ0k2SW1GbFlUYzBNR0V5TFRNNVl6QXRORFEzWXkwNU9XVmhMV1F3WVdJMU16ZGpNekV5TlNJc0luTjFZaUk2SW5ONWMzUmxiVHB6WlhKMmFXTmxZV05qYjNWdWREb3pjMk5oYkdVdGNISnZhbVZqZERweWIySnZkQzFrWlhCc2IzbGxjaUo5LktBd0daWk1vWHZPR2JmYmJEU3FMUVdCQ2djQU5uWXdNbUFaN1VzVEt4RWllNnFkc3o5Q1RncnpXRzF6UU14UDdUWlhIOGlNc05OdDB5bTB2aWpuNm9Ydk9iYVNoV1dmWWVUM0ZFU29HSWtPUTJGQUNJbVVEUFhVUXBIRVBJT21wcVdtTUtUT0FJekNTMnRrbS1PbnFESm9uTXd0ekpYcGI4bjljUjdlYnhMRDZsSFIyWVBjdTF5ODBxemZteUkxQ21RRTZUWk5lMlJHSEdiY1VEdnFxZms3UkQ2YUdtQ3FoZXYyTDNHb19ad2xrXzc4RWRIRUp2ZDBWNUd6a1ItUkQzaGxmYlVLSms2WHlFWjctczA5aUhpbzRWbGpnT3hUQml4b3ozU2NKcnI0UkVDWl9BQ25TUkZpRUxwcE90cEV3T0lQV09jVHpZdFJhTEpqVlVnRGNWUQ==
kind: Secret
metadata:
  annotations:
    kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
    kubernetes.io/service-account.name: robot-deployer
    kubernetes.io/service-account.uid: aea740a2-39c0-447c-99ea-d0ab537c3125
  creationTimestamp: "2020-07-27T12:56:31Z"
  name: robot-deployer-token-x7z5k
  namespace: 3scale-project
  resourceVersion: "198370295"
  selfLink: /api/v1/namespaces/3scale-project/secrets/robot-deployer-token-x7z5k
  uid: 3ac24ebd-bf3b-4649-86c3-8ecda1d8df3e
type: kubernetes.io/service-account-token
apiVersion: v1
data:
  SECRET_KEY_BASE: aTJsbmZ2VmxrTzB0c1JTb1NtaVJ2WUNSV29KMlhCMVgybTFYQkhaaGZXeU1tUzI0c05ERWIyMjljbjlKSThKYzRHb0d0WndZM2IydWRLZjkzUEllVDNpbUh1QzBOWEdkOWNJUTRvNUxnaDVMaUVCakM5eEF0M3hxcVZ5UVlqeEg=
kind: Secret
metadata:
  creationTimestamp: "2020-07-27T13:05:50Z"
  labels:
    app: 3scale-api-management
    threescale_component: system
  name: system-app
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIManager
    name: claro-apimanager-pelado
    uid: 3d48e8a8-df41-4aa1-9516-43d087853cca
  resourceVersion: "198378408"
  selfLink: /api/v1/namespaces/3scale-project/secrets/system-app
  uid: 89b34019-5011-4bd4-b33f-7dc9c8746947
type: Opaque
apiVersion: v1
data:
  DB_PASSWORD: b3JhY2xlMDA=
  DB_USER: b3JhY2xl
  URL: bXlzcWwyOi8vb3JhY2xlOm9yYWNsZTAwQDEwLjkyLjU2LjE1OC8zc2NhbGU=
kind: Secret
metadata:
  creationTimestamp: "2020-07-27T12:57:43Z"
  name: system-database
  namespace: 3scale-project
  resourceVersion: "198371365"
  selfLink: /api/v1/namespaces/3scale-project/secrets/system-database
  uid: 985f913e-f527-46d6-b141-8bfdb1e2c583
type: Opaque
apiVersion: v1
data:
  PASSWORD: bGdYREJKV0w=
  URL: aHR0cDovL3N5c3RlbS1tYXN0ZXI6MzAwMC9tYXN0ZXIvZXZlbnRzL2ltcG9ydA==
kind: Secret
metadata:
  creationTimestamp: "2020-07-27T13:05:50Z"
  labels:
    app: 3scale-api-management
    threescale_component: system
  name: system-events-hook
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIManager
    name: claro-apimanager-pelado
    uid: 3d48e8a8-df41-4aa1-9516-43d087853cca
  resourceVersion: "198378402"
  selfLink: /api/v1/namespaces/3scale-project/secrets/system-events-hook
  uid: 5ea91044-5825-4a27-9411-143493167712
type: Opaque
apiVersion: v1
data:
  ACCESS_TOKEN: cWNORUk3cVA=
  BASE_URL: aHR0cDovL3FjTkVJN3FQQHN5c3RlbS1tYXN0ZXI6MzAwMA==
  PROXY_CONFIGS_ENDPOINT: aHR0cDovL3FjTkVJN3FQQHN5c3RlbS1tYXN0ZXI6MzAwMC9tYXN0ZXIvYXBpL3Byb3h5L2NvbmZpZ3M=
kind: Secret
metadata:
  creationTimestamp: "2020-07-27T13:05:50Z"
  labels:
    app: 3scale-api-management
    threescale_component: system
  name: system-master-apicast
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIManager
    name: claro-apimanager-pelado
    uid: 3d48e8a8-df41-4aa1-9516-43d087853cca
  resourceVersion: "198378405"
  selfLink: /api/v1/namespaces/3scale-project/secrets/system-master-apicast
  uid: 5a8217a2-207e-4a7f-8107-f00b5c6faa03
type: Opaque
apiVersion: v1
data:
  SERVERS: c3lzdGVtLW1lbWNhY2hlOjExMjEx
kind: Secret
metadata:
  creationTimestamp: "2020-07-27T13:05:50Z"
  labels:
    app: 3scale-api-management
    threescale_component: system
  name: system-memcache
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIManager
    name: claro-apimanager-pelado
    uid: 3d48e8a8-df41-4aa1-9516-43d087853cca
  resourceVersion: "198378409"
  selfLink: /api/v1/namespaces/3scale-project/secrets/system-memcache
  uid: 898e8ca1-1e67-4494-ae48-558751f3fe3f
type: Opaque
apiVersion: v1
data:
  PRIVATE_KEY: ""
  PUBLIC_KEY: ""
kind: Secret
metadata:
  creationTimestamp: "2020-07-27T13:05:50Z"
  labels:
    app: 3scale-api-management
    threescale_component: system
  name: system-recaptcha
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIManager
    name: claro-apimanager-pelado
    uid: 3d48e8a8-df41-4aa1-9516-43d087853cca
  resourceVersion: "198378407"
  selfLink: /api/v1/namespaces/3scale-project/secrets/system-recaptcha
  uid: 0c810a1e-0d40-4698-bb60-04644c70d8fc
type: Opaque
apiVersion: v1
data:
  MESSAGE_BUS_NAMESPACE: ""
  MESSAGE_BUS_SENTINEL_HOSTS: ""
  MESSAGE_BUS_SENTINEL_ROLE: ""
  MESSAGE_BUS_URL: cmVkaXM6Ly8xMC45Mi4xMTIuMjIzOjYzNzkvOA==
  NAMESPACE: ""
  SENTINEL_HOSTS: ""
  SENTINEL_ROLE: ""
  URL: cmVkaXM6Ly8xMC45Mi4xMTIuMjIzOjYzNzkvMQ==
kind: Secret
metadata:
  creationTimestamp: "2020-07-27T12:57:48Z"
  labels:
    app: 3scale-api-management
    threescale_component: system
  name: system-redis
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIManager
    name: claro-apimanager-pelado
    uid: 3d48e8a8-df41-4aa1-9516-43d087853cca
  resourceVersion: "198378404"
  selfLink: /api/v1/namespaces/3scale-project/secrets/system-redis
  uid: f3ef6110-3772-45de-8f97-6920256d6e70
type: Opaque
apiVersion: v1
data:
  ADMIN_ACCESS_TOKEN: RkxLVVpxWkNFMG5ybk9SQQ==
  ADMIN_EMAIL: ""
  ADMIN_PASSWORD: dTBPOHZ3eUk=
  ADMIN_USER: YWRtaW4=
  MASTER_ACCESS_TOKEN: YWtLTzJKWGk=
  MASTER_DOMAIN: bWFzdGVy
  MASTER_PASSWORD: UzZETE5hWXU=
  MASTER_USER: bWFzdGVy
  TENANT_NAME: M3NjYWxl
kind: Secret
metadata:
  creationTimestamp: "2020-07-27T13:05:50Z"
  labels:
    app: 3scale-api-management
    threescale_component: system
  name: system-seed
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIManager
    name: claro-apimanager-pelado
    uid: 3d48e8a8-df41-4aa1-9516-43d087853cca
  resourceVersion: "198378406"
  selfLink: /api/v1/namespaces/3scale-project/secrets/system-seed
  uid: b4b92c5d-eec5-4a34-891b-9976ca135cdc
type: Opaque
apiVersion: v1
data:
  address: ""
  authentication: ""
  domain: ""
  openssl.verify.mode: ""
  password: ""
  port: ""
  username: ""
kind: Secret
metadata:
  creationTimestamp: "2020-07-27T13:05:50Z"
  labels:
    app: 3scale-api-management
    threescale_component: system
    threescale_component_element: smtp
  name: system-smtp
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIManager
    name: claro-apimanager-pelado
    uid: 3d48e8a8-df41-4aa1-9516-43d087853cca
  resourceVersion: "198378400"
  selfLink: /api/v1/namespaces/3scale-project/secrets/system-smtp
  uid: e815d9fa-5ff2-45a0-a810-ff2007f1e440
type: Opaque
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5yZWRoYXQuaW8iOnsidXNlcm5hbWUiOiI1NDQ1MTc4fGNsYXJvaW1hZ2VzIiwicGFzc3dvcmQiOiJleUpoYkdjaU9pSlNVelV4TWlKOS5leUp6ZFdJaU9pSTNOMlV3TWpGak9EZ3pZek0wTldFME9XUmlNMlJoTTJVMVl6RXlPRGd4TWlKOS5JeW4zc2dUcjZXU2c2TGUtWk5IUkxVOFhzSVo0bGdOX2VtZDhsOVVHYldvUmlSZ2V1RnpSZnRxam1pUTlBbVRXRGt2S1lvWllNWDhEcTAzaEMzM1RtTUpQc1VHZFVSSXg1UUNFdEhGWkpfYk5GSkUzRENBVDdSeXZSVFF1RTlzUlBaNkNlNV9RX0tJMHJkMlFNSnBnYjNFNGlNREg1SlJxa0RjYk9kNWx6aG13ZERLVkdQLWNUT0NYdzRfcXpZNVlfcVpFRFp6LVl5R3pjbzVIUF8wNVo0cEZzZHBLWFhJcnhCYkIxU2c4czExdG1tWFhxdXVuaThJTjY2bnVib0M0N3NPWVMyY0FXYXhQcXM2eWduODhya1JkZnhSZGI0cVU2R1Q5NklUNGpRbVFwb2o2dVZ5X1JlSFRvRXV3MVZnWVB3czM1SFZpQWVoemdmTXBsUFB3d2VOcFJPa054MXdtY2YyZXRjVmFHLWY3M1FHVE11cjBCbFpqQ0RmMEZvR1BTc1dLYmJoNkdaUXJ0Sng4OHRBRWxxcHowZnJNUTNkNWx2ZjJra3F5MXdkX1N5cTc1cno5aDhzcGlIZ29ITGpQelBpS1hVV1FQTm5NLUt0SGQ0Ui1DSEpQQ2VReHp4eWM3cnlld3ZTVWVVLVBWZWdxcTdYelZQOTlmMzNBTGFrNzdUN3pkdEk4MFRIdjlpTW9tbHFoOGE2d2h6TTQtSHBKc0ZJWWQ2STNWdGY1NnVFb2dQcl9KMmI3ZmdPajBUTTNRY1I3VFRFLW9tXzBHUmg2WXhfb09GSVljbnZvbW9VUzFJQ0R6THJ5djB5MjZsM2lCd2JONUZJSVdvVXR2cTF1bTlzRjlHR0xDeXItQ1lPVm0tSmt2cVR0VzBzMjFvRGRqZlhNUlVRMHNxRSIsImF1dGgiOiJOVFEwTlRFM09IeGpiR0Z5YjJsdFlXZGxjenBsZVVwb1lrZGphVTlwU2xOVmVsVjRUV2xLT1M1bGVVcDZaRmRKYVU5cFNUTk9NbFYzVFdwR2FrOUVaM3BaZWswd1RsZEZNRTlYVW1sTk1sSm9UVEpWTVZsNlJYbFBSR2Q0VFdsS09TNUplVzR6YzJkVWNqWlhVMmMyVEdVdFdrNUlVa3hWT0ZoelNWbzBiR2RPWDJWdFpEaHNPVlZIWWxkdlVtbFNaMlYxUm5wU1puUnhhbTFwVVRsQmJWUlhSR3QyUzFsdldsbE5XRGhFY1RBemFFTXpNMVJ0VFVwUWMxVkhaRlZTU1hnMVVVTkZkRWhHV2twZllrNUdTa1V6UkVOQlZEZFNlWFpTVkZGMVJUbHpVbEJhTmtObE5WOVJYMHRKTUhKa01sRk5TbkJuWWpORk5HbE5SRWcxU2xKeGEwUmpZazlrTld4NmFHMTNaRVJMVmtkUUxXTlVUME5ZZHpSZmNYcFpOVmxmY1ZwRlJGcDZMVmw1UjNwamJ6VklVRjh3TlZvMGNFWnpaSEJMV0ZoSmNuaENZa0l4VTJjNGN6RXhkRzF0V0ZoeGRYVnVhVGhKVGpZMmJuVmliME0wTjNOUFdWTXlZMEZYWVhoUWNYTTJlV2R1T0RoeWExSmtabmhTWkdJMGNWVTJSMVE1TmtsVU5HcFJiVkZ3YjJvMmRWWjVYMUpsU0ZSdlJYVjNNVlpuV1ZCM2N6TTFTRlpwUVdWb2VtZG1UWEJzVUZCM2QyVk9jRkpQYTA1NE1YZHRZMll5WlhSalZtRkhMV1kzTTFGSFZFMTFjakJDYkZwcVEwUm1NRVp2UjFCVGMxZExZbUpvTmtkYVVYSjBTbmc0T0hSQlJXeHhjSG93Wm5KTlVUTmtOV3gyWmpKcmEzRjVNWGRrWDFONWNUYzFjbm81YURoemNHbElaMjlJVEdwUWVsQnBTMWhWVjFGUVRtNU5MVXQwU0dRMFVpMURTRXBRUTJWUmVIcDRlV00zY25sbGQzWlRWV1ZWTFZCV1pXZHhjVGRZZWxaUU9UbG1Nek5CVEdGck56ZFVOM3BrZEVrNE1GUklkamxwVFc5dGJIRm9PR0UyZDJoNlRUUXRTSEJLYzBaSldXUTJTVE5XZEdZMU5uVkZiMmRRY2w5S01tSTNabWRQYWpCVVRUTlJZMUkzVkZSRkxXOXRYekJIVW1nMldYaGZiMDlHU1ZsamJuWnZiVzlWVXpGSlEwUjZUSEo1ZGpCNU1qWnNNMmxDZDJKT05VWkpTVmR2VlhSMmNURjFiVGx6UmpsSFIweERlWEl0UTFsUFZtMHRTbXQyY1ZSMFZ6QnpNakZ2UkdScVpsaE5VbFZSTUhOeFJRPT0ifX19
kind: Secret
metadata:
  creationTimestamp: "2020-07-27T12:57:35Z"
  name: threescale-registry-auth
  namespace: 3scale-project
  resourceVersion: "198371256"
  selfLink: /api/v1/namespaces/3scale-project/secrets/threescale-registry-auth
  uid: 39d12e23-4824-4dae-8020-f2da33f20634
type: kubernetes.io/dockerconfigjson
apiVersion: v1
data:
  DATABASE_URL: cG9zdGdyZXNxbDovL3p5bmM6b1JFU2Z1eHJtNUJBYndFb0B6eW5jLWRhdGFiYXNlOjU0MzIvenluY19wcm9kdWN0aW9u
  SECRET_KEY_BASE: VWt2S081NjNjeklUa0sxTA==
  ZYNC_AUTHENTICATION_TOKEN: WlRIcVBCYkxIWVF1aVkwZQ==
  ZYNC_DATABASE_PASSWORD: b1JFU2Z1eHJtNUJBYndFbw==
kind: Secret
metadata:
  creationTimestamp: "2020-07-27T13:05:51Z"
  labels:
    app: 3scale-api-management
    threescale_component: zync
  name: zync
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: apps.3scale.net/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: APIManager
    name: claro-apimanager-pelado
    uid: 3d48e8a8-df41-4aa1-9516-43d087853cca
  resourceVersion: "198378433"
  selfLink: /api/v1/namespaces/3scale-project/secrets/zync
  uid: 9ae4cede-704a-4369-9895-c4a0a551baee
type: Opaque
apiVersion: v1
data:
  .dockercfg: 
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: zync-que-sa
    kubernetes.io/service-account.uid: a62f609e-18d5-4677-b2c1-12ee236f37a2
    openshift.io/token-secret.name: zync-que-sa-token-zzxqs
    openshift.io/token-secret.value: eyJhbGciOiJSUzI1NiIsImtpZCI6ImhpT2k2TkEwSzhuT0paWEZzeTJzZ0I5T2dlZWs5bHU3LU9wQlpHVWNmUmMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiIzc2NhbGUtcHJvamVjdCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJ6eW5jLXF1ZS1zYS10b2tlbi16enhxcyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJ6eW5jLXF1ZS1zYSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImE2MmY2MDllLTE4ZDUtNDY3Ny1iMmMxLTEyZWUyMzZmMzdhMiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDozc2NhbGUtcHJvamVjdDp6eW5jLXF1ZS1zYSJ9.ieR62x3f25ckUFK9wD5OR6sj1KM_7Qx1x1iMYq3AmZzQwGpBRZJBv52gknuwaC75GP8Hkqm_3QP3NrnVMy9UbFi9Ehj4qO1jwgfPG4cmQl9mfnX5IYqHqtigouhHWM98xzrYipEhKZ9qYKNdIye_2IEQ5XoIVhdr07L_7sM9lm8bvj5DpCZsn3BO7ykvkgWlouLPPHCJPK1rlUJVVi1xjeLbjqhq0fFOeVsM8pHfeiNd5IK5hoQipR2frCvLQvYKYkmFb5dlx5M__NDo_W7GCf6_oN9LL9hszQguFXTLBaoFdXbUwrs3_VxUqDmBbK3oMnsixlEem63PqBvqBYL1Mg
  creationTimestamp: "2020-07-27T13:05:50Z"
  name: zync-que-sa-dockercfg-bd56x
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: v1
    blockOwnerDeletion: false
    controller: true
    kind: Secret
    name: zync-que-sa-token-zzxqs
    uid: c55082d8-b961-432e-97c3-fbe40eba4cc2
  resourceVersion: "198378418"
  selfLink: /api/v1/namespaces/3scale-project/secrets/zync-que-sa-dockercfg-bd56x
  uid: eda7ae60-4e77-4e11-acab-b79171b3c1c2
type: kubernetes.io/dockercfg
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJSU9LRGtxcVpKUnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qRXlNakF5TVRJMVdoY05Namt4TWpBNU1qQXlNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxXN0NtNkgyc050WkhQT1pNanFhOWtNT1BKdHJQUgovSnFWSFJzWGdBYmdUSjhmdmVJenVEejhjc1RobSthYU1zUWxwR3BITHpXZkExK3lVc3hibkZCOGpibmNxdzJoCnFrZ1pzTjluMHBEKzc5SkcyWE9UeTMxV04wTThKMWRVRko5K1VuckVJYXUwYWlya3VrTnZDV2xkcnAwMkFzOEUKclc5dlh2NEhhdTRLemE5enB3TEFVK1Fsc3l4c0tzRk9BM1JkZm9QR2NkakRzZWowT1hlN0t3R1dvR0hycjc1Ygp6K0JmbmV4WUcwNWQyZHRhQi9yUnN4RmlPL2RKai9PS3hEY0NXT1RXWU5XY1lGQ0lKSVJyZVJYSE1XUUNRS0c5ClBEQ1pxb0ZKMGhkUlhBTlNMaUlLUkJqcEw0VEZaTGFzU3h0WVZZT1E2d1BpWS9WUDJEL1dqQzBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPbwptOVhXKzFYNWwwaXpzWHRwN2l6dzByL2lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFrdWhvdG1tTFp4V3Q1ClVnZXF1TTJEMXlvU2xIVDhxazlIb3VrVmJ4S1JuZWxEUG1GVkhJNU1NRkhnWmRnTUd3ZU90VS9QdjNHd21ZNHQKNlRJbE4wVXQxWloxL094S1JiTEc3M3Yrb0tNa1dFa3FBenl4N250MUtBZUFqQi9tVDE2SUdaVERFOExoY25FRgpCMGxVMnd2aGExMnYvYjgxeTQ2c3pLcG03eXFIenZ4d2JGZUtLK2dhTlJvN1lGbUUvNm5rQlJTSHdqSk84cmVwCmFqMlFmbDJaUHBmRlVPdjFheU9hY1lXUHBua2YzZFBSelMxY25IeUZJVnFQSmxqZTByVDVZNlk3Qy94Y3pGV04KRjhXTGlBTTdJQlFVTUdVUDlOd1p1NDc3NEVWbEpsZnRqWEdEcWg3UkFWViszU05aNTBuWjVFdHpONHdoNUxYYwppcEI0Sy9PUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1YclhlcmdVY3JFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1USXhNakl3TWpFeU5Wb1hEVEk1TVRJd09USXdNakV5TlZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eXJscGROZ3dGOGgKMGN3ekRKRUdPcmZBb2RsdUtOUTRXYmprVGM3ajJXY0hpQ2hhQUhtLytrOCtueTdJYVAvT1NiMkh0c0lOOFVaOApSY0ZwREdpWDBKczFHcnN4Q3lXVkZ1VndoRE44UHZRc1NkYjJDamJNMlVYdDZuVzRNZmRuUUIzcDdmM1lneHY3CmEyWFFLUndkTzhhSExhWWRGK1BvaUNDVGMyQURHMVJ1UzVvWEV2Y1ZBa3JLaDFDMHNLQi9FUFpiSVNIVCtpWDkKeWg1M2VZb3NBalUyOERPL3J5dFpVdU9TS01tbWJqUjRVOUxiVlE0ZUkrMzVPWU9UZi9iNTJ0bjhWRFVzdXBIbgpVWU8vaWs5d2w5RmFQKzlGdm9WQjdIUXNwaFdVOGpSZy9RSElMTjNXREQ0R1RKTlkwVzVIMDNweGVIWmNHbHVLCmV1VS9IbjgwZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdxNjRJbDNyUEZ1RVVkNWFjOUhQNGt1dmF0TXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJJemg5cWpzQkVLTWs1QVd2ZkFKNGY0WEN2dDJiYjZCM1VMNkk3TUprVDAxZU5DalRMSDlwZVJsVG5pCk1WOFZ3VGtkWXpKN3FGV01ubTZ6NW1PRzZyc01TbG9YNithTklmT0h5c1YvUGpxVFhzV2R4RzBrTGNod0xmUEoKYzlqSTA5c3FuejhxOGZaYUdyTUZhdUpqZ0g2UTVSbHA4VmZyM0ZYRm1Ib2tTdEhvZHVQQ2JFblBvMVlvK2VYegpMditCa013aHEzbmN4a2lXclZ3NEtrSnY1S2V4cklWNTI5eDJpbHdCU1BLSitiTXdlNDlRWEp0cEVSeFBYV1VBCnU5bzRJVnVINDk2VWpMSzBQOWhaa3dMblgzVlJxcE1nZVhJdUszTEROcDhSbWRRcGszcE9nUFBFM2VpRHFTc24KNERHY1prYzVCakRGR25mNElOdjlwN1Roc3lZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSWNnelB0Slk5aEVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRJeE1qSXdNakV5TlZvWERUSTVNVEl3T1RJd01qRXlOVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTMrb2xmb20yK25jbzk1SFlMZnBTaURoYWwvVWM0cExzT2VKMFcvSlA2RWRHQW1aVElWVXFxS3EzWko1WgpXaHhQS25KV2JxWEsrWkZSZkgrdnN2ZUNSNEkwK1J1MnNyUU5MVTlZb2drNUN5Yy9UNStlekpEaDQvZ1piL0FpCmF5T3FxV1RSSHQ5bkExUWdYR01KS3FERGh0TmUvcXQ1WnBoTWFXd0ZnNE96TkhRWGxaRnpMUDhkOC9KTlFEZUQKODFBZ3l2bG90TVRBQWZWTkpNN05VYXBGNTdUSE5OVnFvM01nSkVxSkhoU3lZWkhka3pCaEhyOXJXZGRNVktMbQorc1lINmdvQ0E2UDRYY1hoZmg3ak85UGJaTnp6UGZ6QUhBd0RkejNybFM0U3FadGZkZUVOWC8vc2VzS0xGdUN4CmxHSEQxOXV0bEpDQW9PMUVkUGhuR2hqb1RRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYMU5IY3N3a1V4V3UzcEoyWldXZUhneW5QYzh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFR0FzY2kyUjJvajRFcUVDNVBVajdRRjFZZ0VucmNWa2VVYWpBN21paFArCmdOeVpDWDV4VEx1WVpaSnByOURqWFdVQlNsdDgyZEtNeDR3TkdDb0IwMnM0VVNTOElWQllGV3dnc29wL3hxTmsKSS9Xalc2TTlyT2ZBTGk1UzhVT3NseHBndEd5aUh2c3J2cHBQQ0Z6YmZ4dUUwdzEwUW9oVzhvdFpkYWlWS09jMQo2MkllTGRGc2swb2dWMGNjUVV6QlpBQmQ5ZXRaMnAvZGxxenhsOVhIQklTdG9KWVVwOHNOQzFHdCtkeHhnekFJCnVKbkRRUnhEaWtLYVNLZWtCa2crS2J3RUQ5WGdLazhqVUhBNkVFd0tHM2xkbTY5eWZ5ZzJEeUNjcVNsMkVNdlcKdlBncU5GZmZOblhOZGIzQ01zRGoycTJ3SjJKeStlcGlieDVLdHNFVHQzRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9Ea3pPRFUxTWpFd0hoY05NakF3TlRFek1UVTFPRFF3V2hjTk16QXcKTlRFeE1UVTFPRFF4V2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRGt6Ck9EVTFNakV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p4bUQ3a3hDbHg3a0EKTDhxWm5LSFphTVZ5TmJwSzBvem91UW9ENzZMV1lqTnNYRlRXVmlRdUppUml2WEtnVThmU2hISWJJdDFGSU5rcwpGZUZ4QkRad1BFMWhqcHZEUHcrY2Q3emhZcUFpbUtkdHlRMDE4RjBTR0VKNnpab25XZENZeHNxbkZWaEtOSzR2Cmk2czU2TmRTN1RPRUozNmNDbWt0YlovVEE4cXdtYVI1NkdTM2pPZUNIa0FwQ2pRNnpxS1dnTmNmR1VmWGJRZjAKS0VMK1lvZ0R2OVVRMjFOcTBhVHlUcnVhSUlQRy9KUWtiNlFQeTluNVo1d3NWR0RGenp6MjFQbXhhN3lVZDJPUApodGFOZ1Mza053WnJ2TjZ6ODNRdkVEVjdTWnNpTUgvUkpGaDZZTVdnQllXeTA2dU9kK3RvMGoyTXc5c0lSaDFoCnd3c3Z1K0Z4QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVitCQzFGTHFZSW1TbUJDVy9ONC8xdzlQanV6QWZCZ05WSFNNRUdEQVdnQlNWK0JDMQpGTHFZSW1TbUJDVy9ONC8xdzlQanV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGcVdBNUMxdUNnZFpmRWlXCjRMZnB6bjA3WEZKVDJGb0h3eEpwNGF4S21WbTg1Q0tpdklyaEJvVDBuN1o1S3lvOElPYWgzTytldzJWS2xsWVMKWU81VHpwVS9GME96azJxRTgwcCtkVDFSY3hTZ2ZCUktyQlc3b3ozN2I0V1g0blNoK0QyUit5M3UyRXp0TTRjcAp3c0E5NzlzNHhSdXpXZkJ5OWNnQTJvQnZrNzhaTzJHMCtJSVRJdlFLSHRnbTZmUjZsM243Qm9PcGpQWm1wT1hXCkMrVlJtckJCYjZmcVMzWGNUMTIrdFpLR3NJNVU4S1k4d3dUQkY0MWJnRkk4OGg2emJ5amZHMFJvVm5xUXdNMGsKYy9aL1ZhL2IwV0hFVGVEQkc1aUVEbDlONTI3SXdJZXFrRmxjN1pqYW9pQTE0K3ZlWnFQS1k4SFFuTFZscTI1ZQpaRmxPbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxTnpZeE9EWXdOelF3SGhjTk1Ua3hNakV5TWpFeU56VXpXaGNOTWpFeE1qRXgKTWpFeU56VTBXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU56WXhPRFl3TnpRdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETEx3cEdIdkpUeHFpN0VpQVgxTmNxCjhDQlpIanZEeXEwKy84Z2FtZDJDU0hIY096bGljTlhGUG4rOUlDWURsMjN2eEo0ZlQ4M3RnN1FSZ2R6eVI2N0YKN0IxMEFheGJjNFRkclVRWi9mcXMvWU05ZjNJWWNsK2U1djZITFl4cW1FN2xkRjN6ZEgybUwvckU3MmgvUjRKcApybS9YQldaYXpwM2ViNU9tdmpYc3B0bkdpN3NzYncrMlA2TzFGMGRZRDZTaWFoUjkvaGl0N2lMVXZIakRaWm9XCnByZEc0T2RYYUxYallHLzBBK3VTaHBRRnlwaDdsUGErVFl6UkFIcE1tODArSmZ6YnRKS1dmMlBpd2JzSmF3ZVUKWEZtaklReDI2QWZoZlJ4SUQxTldXTmgvZEdmQWNEQ0pYUTYvWlVSZFhreklnbjVKL1NpZXhSTHhKN1JFcnIrOQpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZXBVZ09DNFhNSWtJMlNrNFBubGtOVTdtYlRBYWwxVDZhV3BmN09Oc3oKWFJENDNGUTY1WjZVVlZScmgvZzkzWGNCL2w1aE9yaDJSZUlGZ0JyR2J1d1FweVpTTzRUUEM2WDlhMjNRWENRMQpidkhxeFVmYlB2YWc0Um93T28yeWs5UDJiSkhOOEZ1N2pEUGpENHV6OUgvbmZJNHgxNzJSVGJmMW1NTm1nL1BvClpBSDN3N0tONzhzcVhzOEQ4dDMvYmhZVE94RFNlZWEzd0Y3MzFrVlNJbEtvb1B4Y092NGl6alQxa1MvMExPSEwKb1RhQ1poV01IdGtXbGN0WVpkSS80d2lCdTdDSExITmNHMG5NbXVKcVFxSXFCa0ZNczQ2YmZtcmdPaFFkWXk5TQpDaXFqZkovbnQrTjJlNlEzclAyL3k5VzUrRU4xZ3V6Z1lBM0lLcWpWYklPYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  namespace: M3NjYWxlLXByb2plY3Q=
  service-ca.crt: 
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltaHBUMmsyVGtFd1N6aHVUMHBhV0VaemVUSnpaMEk1VDJkbFpXczViSFUzTFU5d1FscEhWV05tVW1NaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUl6YzJOaGJHVXRjSEp2YW1WamRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSjZlVzVqTFhGMVpTMXpZUzEwYjJ0bGJpMHlabVJyWXlJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKNmVXNWpMWEYxWlMxellTSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMblZwWkNJNkltRTJNbVkyTURsbExURTRaRFV0TkRZM055MWlNbU14TFRFeVpXVXlNelptTXpkaE1pSXNJbk4xWWlJNkluTjVjM1JsYlRwelpYSjJhV05sWVdOamIzVnVkRG96YzJOaGJHVXRjSEp2YW1WamREcDZlVzVqTFhGMVpTMXpZU0o5Lks4cF9DRGxNd0F2dU5yejU1OUJhOTRtX0huamIyWGdXVF9FVG10OExCblhhVDZCSzMwY1FTLUl6eDlFZTJyNkZWbDZpdk9McXVUU0trTlM1Rmo1SlhUQU9hMDVwb3dLRE13Wm11Y3lJTEFzSHAtNk5ldG5rMXdZaDJJQWQydkpzRWdzZkNLdlk2c1pXbVlPemF5RlJMR1doQ19xOWd5dm90R2R3NEdKTUVLUWdTU3UtSkpBMjlhRHhXRGUzZEZqdGstRVltNlFEclp3YUd6bGRHTDUybDlIeEFweHhlQnpOZnlqVnFIck1rOWRfbVNGZk9zTmh5dVM5bGZiZXJsOGhhZkJzTXd6MGRDdWFiSldpdU1ZQ18yWE94a1V3WDBrTGRZUzdyZW42TVQ3OExtaVc4Y2l0Nkw0X21nRWRZaXd1dEFxdDlaRDg2VU45cVJmRkpwWVBvQQ==
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: zync-que-sa
    kubernetes.io/service-account.uid: a62f609e-18d5-4677-b2c1-12ee236f37a2
  creationTimestamp: "2020-07-27T13:05:50Z"
  name: zync-que-sa-token-2fdkc
  namespace: 3scale-project
  resourceVersion: "198378415"
  selfLink: /api/v1/namespaces/3scale-project/secrets/zync-que-sa-token-2fdkc
  uid: 6f1c5c2c-43ee-472d-b62f-4348afa1485f
type: kubernetes.io/service-account-token
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJSU9LRGtxcVpKUnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qRXlNakF5TVRJMVdoY05Namt4TWpBNU1qQXlNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxXN0NtNkgyc050WkhQT1pNanFhOWtNT1BKdHJQUgovSnFWSFJzWGdBYmdUSjhmdmVJenVEejhjc1RobSthYU1zUWxwR3BITHpXZkExK3lVc3hibkZCOGpibmNxdzJoCnFrZ1pzTjluMHBEKzc5SkcyWE9UeTMxV04wTThKMWRVRko5K1VuckVJYXUwYWlya3VrTnZDV2xkcnAwMkFzOEUKclc5dlh2NEhhdTRLemE5enB3TEFVK1Fsc3l4c0tzRk9BM1JkZm9QR2NkakRzZWowT1hlN0t3R1dvR0hycjc1Ygp6K0JmbmV4WUcwNWQyZHRhQi9yUnN4RmlPL2RKai9PS3hEY0NXT1RXWU5XY1lGQ0lKSVJyZVJYSE1XUUNRS0c5ClBEQ1pxb0ZKMGhkUlhBTlNMaUlLUkJqcEw0VEZaTGFzU3h0WVZZT1E2d1BpWS9WUDJEL1dqQzBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPbwptOVhXKzFYNWwwaXpzWHRwN2l6dzByL2lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFrdWhvdG1tTFp4V3Q1ClVnZXF1TTJEMXlvU2xIVDhxazlIb3VrVmJ4S1JuZWxEUG1GVkhJNU1NRkhnWmRnTUd3ZU90VS9QdjNHd21ZNHQKNlRJbE4wVXQxWloxL094S1JiTEc3M3Yrb0tNa1dFa3FBenl4N250MUtBZUFqQi9tVDE2SUdaVERFOExoY25FRgpCMGxVMnd2aGExMnYvYjgxeTQ2c3pLcG03eXFIenZ4d2JGZUtLK2dhTlJvN1lGbUUvNm5rQlJTSHdqSk84cmVwCmFqMlFmbDJaUHBmRlVPdjFheU9hY1lXUHBua2YzZFBSelMxY25IeUZJVnFQSmxqZTByVDVZNlk3Qy94Y3pGV04KRjhXTGlBTTdJQlFVTUdVUDlOd1p1NDc3NEVWbEpsZnRqWEdEcWg3UkFWViszU05aNTBuWjVFdHpONHdoNUxYYwppcEI0Sy9PUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1YclhlcmdVY3JFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1USXhNakl3TWpFeU5Wb1hEVEk1TVRJd09USXdNakV5TlZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eXJscGROZ3dGOGgKMGN3ekRKRUdPcmZBb2RsdUtOUTRXYmprVGM3ajJXY0hpQ2hhQUhtLytrOCtueTdJYVAvT1NiMkh0c0lOOFVaOApSY0ZwREdpWDBKczFHcnN4Q3lXVkZ1VndoRE44UHZRc1NkYjJDamJNMlVYdDZuVzRNZmRuUUIzcDdmM1lneHY3CmEyWFFLUndkTzhhSExhWWRGK1BvaUNDVGMyQURHMVJ1UzVvWEV2Y1ZBa3JLaDFDMHNLQi9FUFpiSVNIVCtpWDkKeWg1M2VZb3NBalUyOERPL3J5dFpVdU9TS01tbWJqUjRVOUxiVlE0ZUkrMzVPWU9UZi9iNTJ0bjhWRFVzdXBIbgpVWU8vaWs5d2w5RmFQKzlGdm9WQjdIUXNwaFdVOGpSZy9RSElMTjNXREQ0R1RKTlkwVzVIMDNweGVIWmNHbHVLCmV1VS9IbjgwZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdxNjRJbDNyUEZ1RVVkNWFjOUhQNGt1dmF0TXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJJemg5cWpzQkVLTWs1QVd2ZkFKNGY0WEN2dDJiYjZCM1VMNkk3TUprVDAxZU5DalRMSDlwZVJsVG5pCk1WOFZ3VGtkWXpKN3FGV01ubTZ6NW1PRzZyc01TbG9YNithTklmT0h5c1YvUGpxVFhzV2R4RzBrTGNod0xmUEoKYzlqSTA5c3FuejhxOGZaYUdyTUZhdUpqZ0g2UTVSbHA4VmZyM0ZYRm1Ib2tTdEhvZHVQQ2JFblBvMVlvK2VYegpMditCa013aHEzbmN4a2lXclZ3NEtrSnY1S2V4cklWNTI5eDJpbHdCU1BLSitiTXdlNDlRWEp0cEVSeFBYV1VBCnU5bzRJVnVINDk2VWpMSzBQOWhaa3dMblgzVlJxcE1nZVhJdUszTEROcDhSbWRRcGszcE9nUFBFM2VpRHFTc24KNERHY1prYzVCakRGR25mNElOdjlwN1Roc3lZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSWNnelB0Slk5aEVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRJeE1qSXdNakV5TlZvWERUSTVNVEl3T1RJd01qRXlOVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTMrb2xmb20yK25jbzk1SFlMZnBTaURoYWwvVWM0cExzT2VKMFcvSlA2RWRHQW1aVElWVXFxS3EzWko1WgpXaHhQS25KV2JxWEsrWkZSZkgrdnN2ZUNSNEkwK1J1MnNyUU5MVTlZb2drNUN5Yy9UNStlekpEaDQvZ1piL0FpCmF5T3FxV1RSSHQ5bkExUWdYR01KS3FERGh0TmUvcXQ1WnBoTWFXd0ZnNE96TkhRWGxaRnpMUDhkOC9KTlFEZUQKODFBZ3l2bG90TVRBQWZWTkpNN05VYXBGNTdUSE5OVnFvM01nSkVxSkhoU3lZWkhka3pCaEhyOXJXZGRNVktMbQorc1lINmdvQ0E2UDRYY1hoZmg3ak85UGJaTnp6UGZ6QUhBd0RkejNybFM0U3FadGZkZUVOWC8vc2VzS0xGdUN4CmxHSEQxOXV0bEpDQW9PMUVkUGhuR2hqb1RRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYMU5IY3N3a1V4V3UzcEoyWldXZUhneW5QYzh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFR0FzY2kyUjJvajRFcUVDNVBVajdRRjFZZ0VucmNWa2VVYWpBN21paFArCmdOeVpDWDV4VEx1WVpaSnByOURqWFdVQlNsdDgyZEtNeDR3TkdDb0IwMnM0VVNTOElWQllGV3dnc29wL3hxTmsKSS9Xalc2TTlyT2ZBTGk1UzhVT3NseHBndEd5aUh2c3J2cHBQQ0Z6YmZ4dUUwdzEwUW9oVzhvdFpkYWlWS09jMQo2MkllTGRGc2swb2dWMGNjUVV6QlpBQmQ5ZXRaMnAvZGxxenhsOVhIQklTdG9KWVVwOHNOQzFHdCtkeHhnekFJCnVKbkRRUnhEaWtLYVNLZWtCa2crS2J3RUQ5WGdLazhqVUhBNkVFd0tHM2xkbTY5eWZ5ZzJEeUNjcVNsMkVNdlcKdlBncU5GZmZOblhOZGIzQ01zRGoycTJ3SjJKeStlcGlieDVLdHNFVHQzRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9Ea3pPRFUxTWpFd0hoY05NakF3TlRFek1UVTFPRFF3V2hjTk16QXcKTlRFeE1UVTFPRFF4V2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRGt6Ck9EVTFNakV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p4bUQ3a3hDbHg3a0EKTDhxWm5LSFphTVZ5TmJwSzBvem91UW9ENzZMV1lqTnNYRlRXVmlRdUppUml2WEtnVThmU2hISWJJdDFGSU5rcwpGZUZ4QkRad1BFMWhqcHZEUHcrY2Q3emhZcUFpbUtkdHlRMDE4RjBTR0VKNnpab25XZENZeHNxbkZWaEtOSzR2Cmk2czU2TmRTN1RPRUozNmNDbWt0YlovVEE4cXdtYVI1NkdTM2pPZUNIa0FwQ2pRNnpxS1dnTmNmR1VmWGJRZjAKS0VMK1lvZ0R2OVVRMjFOcTBhVHlUcnVhSUlQRy9KUWtiNlFQeTluNVo1d3NWR0RGenp6MjFQbXhhN3lVZDJPUApodGFOZ1Mza053WnJ2TjZ6ODNRdkVEVjdTWnNpTUgvUkpGaDZZTVdnQllXeTA2dU9kK3RvMGoyTXc5c0lSaDFoCnd3c3Z1K0Z4QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVitCQzFGTHFZSW1TbUJDVy9ONC8xdzlQanV6QWZCZ05WSFNNRUdEQVdnQlNWK0JDMQpGTHFZSW1TbUJDVy9ONC8xdzlQanV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGcVdBNUMxdUNnZFpmRWlXCjRMZnB6bjA3WEZKVDJGb0h3eEpwNGF4S21WbTg1Q0tpdklyaEJvVDBuN1o1S3lvOElPYWgzTytldzJWS2xsWVMKWU81VHpwVS9GME96azJxRTgwcCtkVDFSY3hTZ2ZCUktyQlc3b3ozN2I0V1g0blNoK0QyUit5M3UyRXp0TTRjcAp3c0E5NzlzNHhSdXpXZkJ5OWNnQTJvQnZrNzhaTzJHMCtJSVRJdlFLSHRnbTZmUjZsM243Qm9PcGpQWm1wT1hXCkMrVlJtckJCYjZmcVMzWGNUMTIrdFpLR3NJNVU4S1k4d3dUQkY0MWJnRkk4OGg2emJ5amZHMFJvVm5xUXdNMGsKYy9aL1ZhL2IwV0hFVGVEQkc1aUVEbDlONTI3SXdJZXFrRmxjN1pqYW9pQTE0K3ZlWnFQS1k4SFFuTFZscTI1ZQpaRmxPbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxTnpZeE9EWXdOelF3SGhjTk1Ua3hNakV5TWpFeU56VXpXaGNOTWpFeE1qRXgKTWpFeU56VTBXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU56WXhPRFl3TnpRdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETEx3cEdIdkpUeHFpN0VpQVgxTmNxCjhDQlpIanZEeXEwKy84Z2FtZDJDU0hIY096bGljTlhGUG4rOUlDWURsMjN2eEo0ZlQ4M3RnN1FSZ2R6eVI2N0YKN0IxMEFheGJjNFRkclVRWi9mcXMvWU05ZjNJWWNsK2U1djZITFl4cW1FN2xkRjN6ZEgybUwvckU3MmgvUjRKcApybS9YQldaYXpwM2ViNU9tdmpYc3B0bkdpN3NzYncrMlA2TzFGMGRZRDZTaWFoUjkvaGl0N2lMVXZIakRaWm9XCnByZEc0T2RYYUxYallHLzBBK3VTaHBRRnlwaDdsUGErVFl6UkFIcE1tODArSmZ6YnRKS1dmMlBpd2JzSmF3ZVUKWEZtaklReDI2QWZoZlJ4SUQxTldXTmgvZEdmQWNEQ0pYUTYvWlVSZFhreklnbjVKL1NpZXhSTHhKN1JFcnIrOQpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZXBVZ09DNFhNSWtJMlNrNFBubGtOVTdtYlRBYWwxVDZhV3BmN09Oc3oKWFJENDNGUTY1WjZVVlZScmgvZzkzWGNCL2w1aE9yaDJSZUlGZ0JyR2J1d1FweVpTTzRUUEM2WDlhMjNRWENRMQpidkhxeFVmYlB2YWc0Um93T28yeWs5UDJiSkhOOEZ1N2pEUGpENHV6OUgvbmZJNHgxNzJSVGJmMW1NTm1nL1BvClpBSDN3N0tONzhzcVhzOEQ4dDMvYmhZVE94RFNlZWEzd0Y3MzFrVlNJbEtvb1B4Y092NGl6alQxa1MvMExPSEwKb1RhQ1poV01IdGtXbGN0WVpkSS80d2lCdTdDSExITmNHMG5NbXVKcVFxSXFCa0ZNczQ2YmZtcmdPaFFkWXk5TQpDaXFqZkovbnQrTjJlNlEzclAyL3k5VzUrRU4xZ3V6Z1lBM0lLcWpWYklPYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  namespace: M3NjYWxlLXByb2plY3Q=
  service-ca.crt: 
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltaHBUMmsyVGtFd1N6aHVUMHBhV0VaemVUSnpaMEk1VDJkbFpXczViSFUzTFU5d1FscEhWV05tVW1NaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUl6YzJOaGJHVXRjSEp2YW1WamRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSjZlVzVqTFhGMVpTMXpZUzEwYjJ0bGJpMTZlbmh4Y3lJc0ltdDFZbVZ5Ym1WMFpYTXVhVzh2YzJWeWRtbGpaV0ZqWTI5MWJuUXZjMlZ5ZG1salpTMWhZMk52ZFc1MExtNWhiV1VpT2lKNmVXNWpMWEYxWlMxellTSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMblZwWkNJNkltRTJNbVkyTURsbExURTRaRFV0TkRZM055MWlNbU14TFRFeVpXVXlNelptTXpkaE1pSXNJbk4xWWlJNkluTjVjM1JsYlRwelpYSjJhV05sWVdOamIzVnVkRG96YzJOaGJHVXRjSEp2YW1WamREcDZlVzVqTFhGMVpTMXpZU0o5LmllUjYyeDNmMjVja1VGSzl3RDVPUjZzajFLTV83UXgxeDFpTVlxM0FtWnpRd0dwQlJaSkJ2NTJna251d2FDNzVHUDhIa3FtXzNRUDNOcm5WTXk5VWJGaTlFaGo0cU8xandnZlBHNGNtUWw5bWZuWDVJWXFIcXRpZ291aEhXTTk4eHpyWWlwRWhLWjlxWUtOZEl5ZV8ySUVRNVhvSVZoZHIwN0xfN3NNOWxtOGJ2ajVEcENac24zQk83eWt2a2dXbG91TFBQSENKUEsxcmxVSlZWaTF4amVMYmpxaHEwZkZPZVZzTThwSGZlaU5kNUlLNWhvUWlwUjJmckN2TFF2WUtZa21GYjVkbHg1TV9fTkRvX1c3R0NmNl9vTjlMTDloc3pRZ3VGWFRMQmFvRmRYYlV3cnMzX1Z4VXFEbUJiSzNvTW5zaXhsRWVtNjNQcUJ2cUJZTDFNZw==
kind: Secret
metadata:
  annotations:
    kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
    kubernetes.io/service-account.name: zync-que-sa
    kubernetes.io/service-account.uid: a62f609e-18d5-4677-b2c1-12ee236f37a2
  creationTimestamp: "2020-07-27T13:05:50Z"
  name: zync-que-sa-token-zzxqs
  namespace: 3scale-project
  resourceVersion: "198378416"
  selfLink: /api/v1/namespaces/3scale-project/secrets/zync-que-sa-token-zzxqs
  uid: c55082d8-b961-432e-97c3-fbe40eba4cc2
type: kubernetes.io/service-account-token
