apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJSU9LRGtxcVpKUnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qRXlNakF5TVRJMVdoY05Namt4TWpBNU1qQXlNVEkxV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWxXN0NtNkgyc050WkhQT1pNanFhOWtNT1BKdHJQUgovSnFWSFJzWGdBYmdUSjhmdmVJenVEejhjc1RobSthYU1zUWxwR3BITHpXZkExK3lVc3hibkZCOGpibmNxdzJoCnFrZ1pzTjluMHBEKzc5SkcyWE9UeTMxV04wTThKMWRVRko5K1VuckVJYXUwYWlya3VrTnZDV2xkcnAwMkFzOEUKclc5dlh2NEhhdTRLemE5enB3TEFVK1Fsc3l4c0tzRk9BM1JkZm9QR2NkakRzZWowT1hlN0t3R1dvR0hycjc1Ygp6K0JmbmV4WUcwNWQyZHRhQi9yUnN4RmlPL2RKai9PS3hEY0NXT1RXWU5XY1lGQ0lKSVJyZVJYSE1XUUNRS0c5ClBEQ1pxb0ZKMGhkUlhBTlNMaUlLUkJqcEw0VEZaTGFzU3h0WVZZT1E2d1BpWS9WUDJEL1dqQzBDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkNPbwptOVhXKzFYNWwwaXpzWHRwN2l6dzByL2lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFrdWhvdG1tTFp4V3Q1ClVnZXF1TTJEMXlvU2xIVDhxazlIb3VrVmJ4S1JuZWxEUG1GVkhJNU1NRkhnWmRnTUd3ZU90VS9QdjNHd21ZNHQKNlRJbE4wVXQxWloxL094S1JiTEc3M3Yrb0tNa1dFa3FBenl4N250MUtBZUFqQi9tVDE2SUdaVERFOExoY25FRgpCMGxVMnd2aGExMnYvYjgxeTQ2c3pLcG03eXFIenZ4d2JGZUtLK2dhTlJvN1lGbUUvNm5rQlJTSHdqSk84cmVwCmFqMlFmbDJaUHBmRlVPdjFheU9hY1lXUHBua2YzZFBSelMxY25IeUZJVnFQSmxqZTByVDVZNlk3Qy94Y3pGV04KRjhXTGlBTTdJQlFVTUdVUDlOd1p1NDc3NEVWbEpsZnRqWEdEcWg3UkFWViszU05aNTBuWjVFdHpONHdoNUxYYwppcEI0Sy9PUQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSU1YclhlcmdVY3JFd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRFNU1USXhNakl3TWpFeU5Wb1hEVEk1TVRJd09USXdNakV5TlZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3eXJscGROZ3dGOGgKMGN3ekRKRUdPcmZBb2RsdUtOUTRXYmprVGM3ajJXY0hpQ2hhQUhtLytrOCtueTdJYVAvT1NiMkh0c0lOOFVaOApSY0ZwREdpWDBKczFHcnN4Q3lXVkZ1VndoRE44UHZRc1NkYjJDamJNMlVYdDZuVzRNZmRuUUIzcDdmM1lneHY3CmEyWFFLUndkTzhhSExhWWRGK1BvaUNDVGMyQURHMVJ1UzVvWEV2Y1ZBa3JLaDFDMHNLQi9FUFpiSVNIVCtpWDkKeWg1M2VZb3NBalUyOERPL3J5dFpVdU9TS01tbWJqUjRVOUxiVlE0ZUkrMzVPWU9UZi9iNTJ0bjhWRFVzdXBIbgpVWU8vaWs5d2w5RmFQKzlGdm9WQjdIUXNwaFdVOGpSZy9RSElMTjNXREQ0R1RKTlkwVzVIMDNweGVIWmNHbHVLCmV1VS9IbjgwZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTdxNjRJbDNyUEZ1RVVkNWFjOUhQNGt1dmF0TXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUJJemg5cWpzQkVLTWs1QVd2ZkFKNGY0WEN2dDJiYjZCM1VMNkk3TUprVDAxZU5DalRMSDlwZVJsVG5pCk1WOFZ3VGtkWXpKN3FGV01ubTZ6NW1PRzZyc01TbG9YNithTklmT0h5c1YvUGpxVFhzV2R4RzBrTGNod0xmUEoKYzlqSTA5c3FuejhxOGZaYUdyTUZhdUpqZ0g2UTVSbHA4VmZyM0ZYRm1Ib2tTdEhvZHVQQ2JFblBvMVlvK2VYegpMditCa013aHEzbmN4a2lXclZ3NEtrSnY1S2V4cklWNTI5eDJpbHdCU1BLSitiTXdlNDlRWEp0cEVSeFBYV1VBCnU5bzRJVnVINDk2VWpMSzBQOWhaa3dMblgzVlJxcE1nZVhJdUszTEROcDhSbWRRcGszcE9nUFBFM2VpRHFTc24KNERHY1prYzVCakRGR25mNElOdjlwN1Roc3lZPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSWNnelB0Slk5aEVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEU1TVRJeE1qSXdNakV5TlZvWERUSTVNVEl3T1RJd01qRXlOVm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTMrb2xmb20yK25jbzk1SFlMZnBTaURoYWwvVWM0cExzT2VKMFcvSlA2RWRHQW1aVElWVXFxS3EzWko1WgpXaHhQS25KV2JxWEsrWkZSZkgrdnN2ZUNSNEkwK1J1MnNyUU5MVTlZb2drNUN5Yy9UNStlekpEaDQvZ1piL0FpCmF5T3FxV1RSSHQ5bkExUWdYR01KS3FERGh0TmUvcXQ1WnBoTWFXd0ZnNE96TkhRWGxaRnpMUDhkOC9KTlFEZUQKODFBZ3l2bG90TVRBQWZWTkpNN05VYXBGNTdUSE5OVnFvM01nSkVxSkhoU3lZWkhka3pCaEhyOXJXZGRNVktMbQorc1lINmdvQ0E2UDRYY1hoZmg3ak85UGJaTnp6UGZ6QUhBd0RkejNybFM0U3FadGZkZUVOWC8vc2VzS0xGdUN4CmxHSEQxOXV0bEpDQW9PMUVkUGhuR2hqb1RRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYMU5IY3N3a1V4V3UzcEoyWldXZUhneW5QYzh3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFR0FzY2kyUjJvajRFcUVDNVBVajdRRjFZZ0VucmNWa2VVYWpBN21paFArCmdOeVpDWDV4VEx1WVpaSnByOURqWFdVQlNsdDgyZEtNeDR3TkdDb0IwMnM0VVNTOElWQllGV3dnc29wL3hxTmsKSS9Xalc2TTlyT2ZBTGk1UzhVT3NseHBndEd5aUh2c3J2cHBQQ0Z6YmZ4dUUwdzEwUW9oVzhvdFpkYWlWS09jMQo2MkllTGRGc2swb2dWMGNjUVV6QlpBQmQ5ZXRaMnAvZGxxenhsOVhIQklTdG9KWVVwOHNOQzFHdCtkeHhnekFJCnVKbkRRUnhEaWtLYVNLZWtCa2crS2J3RUQ5WGdLazhqVUhBNkVFd0tHM2xkbTY5eWZ5ZzJEeUNjcVNsMkVNdlcKdlBncU5GZmZOblhOZGIzQ01zRGoycTJ3SjJKeStlcGlieDVLdHNFVHQzRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGtEQ0NBbmlnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQlpNVmN3VlFZRFZRUURERTV2Y0dWdQpjMmhwWm5RdGEzVmlaUzFoY0dselpYSjJaWEl0YjNCbGNtRjBiM0pmYkc5allXeG9iM04wTFhKbFkyOTJaWEo1CkxYTmxjblpwYm1jdGMybG5ibVZ5UURFMU9Ea3pPRFUxTWpFd0hoY05NakF3TlRFek1UVTFPRFF3V2hjTk16QXcKTlRFeE1UVTFPRFF4V2pCWk1WY3dWUVlEVlFRRERFNXZjR1Z1YzJocFpuUXRhM1ZpWlMxaGNHbHpaWEoyWlhJdApiM0JsY21GMGIzSmZiRzlqWVd4b2IzTjBMWEpsWTI5MlpYSjVMWE5sY25acGJtY3RjMmxuYm1WeVFERTFPRGt6Ck9EVTFNakV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2p4bUQ3a3hDbHg3a0EKTDhxWm5LSFphTVZ5TmJwSzBvem91UW9ENzZMV1lqTnNYRlRXVmlRdUppUml2WEtnVThmU2hISWJJdDFGSU5rcwpGZUZ4QkRad1BFMWhqcHZEUHcrY2Q3emhZcUFpbUtkdHlRMDE4RjBTR0VKNnpab25XZENZeHNxbkZWaEtOSzR2Cmk2czU2TmRTN1RPRUozNmNDbWt0YlovVEE4cXdtYVI1NkdTM2pPZUNIa0FwQ2pRNnpxS1dnTmNmR1VmWGJRZjAKS0VMK1lvZ0R2OVVRMjFOcTBhVHlUcnVhSUlQRy9KUWtiNlFQeTluNVo1d3NWR0RGenp6MjFQbXhhN3lVZDJPUApodGFOZ1Mza053WnJ2TjZ6ODNRdkVEVjdTWnNpTUgvUkpGaDZZTVdnQllXeTA2dU9kK3RvMGoyTXc5c0lSaDFoCnd3c3Z1K0Z4QWdNQkFBR2pZekJoTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVitCQzFGTHFZSW1TbUJDVy9ONC8xdzlQanV6QWZCZ05WSFNNRUdEQVdnQlNWK0JDMQpGTHFZSW1TbUJDVy9ONC8xdzlQanV6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFGcVdBNUMxdUNnZFpmRWlXCjRMZnB6bjA3WEZKVDJGb0h3eEpwNGF4S21WbTg1Q0tpdklyaEJvVDBuN1o1S3lvOElPYWgzTytldzJWS2xsWVMKWU81VHpwVS9GME96azJxRTgwcCtkVDFSY3hTZ2ZCUktyQlc3b3ozN2I0V1g0blNoK0QyUit5M3UyRXp0TTRjcAp3c0E5NzlzNHhSdXpXZkJ5OWNnQTJvQnZrNzhaTzJHMCtJSVRJdlFLSHRnbTZmUjZsM243Qm9PcGpQWm1wT1hXCkMrVlJtckJCYjZmcVMzWGNUMTIrdFpLR3NJNVU4S1k4d3dUQkY0MWJnRkk4OGg2emJ5amZHMFJvVm5xUXdNMGsKYy9aL1ZhL2IwV0hFVGVEQkc1aUVEbDlONTI3SXdJZXFrRmxjN1pqYW9pQTE0K3ZlWnFQS1k4SFFuTFZscTI1ZQpaRmxPbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDN1RDQ0FkV2dBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBbU1TUXdJZ1lEVlFRRERCdHBibWR5ClpYTnpMVzl3WlhKaGRHOXlRREUxTnpZeE9EWXdOelF3SGhjTk1Ua3hNakV5TWpFeU56VXpXaGNOTWpFeE1qRXgKTWpFeU56VTBXakFtTVNRd0lnWURWUVFEREJ0cGJtZHlaWE56TFc5d1pYSmhkRzl5UURFMU56WXhPRFl3TnpRdwpnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFETEx3cEdIdkpUeHFpN0VpQVgxTmNxCjhDQlpIanZEeXEwKy84Z2FtZDJDU0hIY096bGljTlhGUG4rOUlDWURsMjN2eEo0ZlQ4M3RnN1FSZ2R6eVI2N0YKN0IxMEFheGJjNFRkclVRWi9mcXMvWU05ZjNJWWNsK2U1djZITFl4cW1FN2xkRjN6ZEgybUwvckU3MmgvUjRKcApybS9YQldaYXpwM2ViNU9tdmpYc3B0bkdpN3NzYncrMlA2TzFGMGRZRDZTaWFoUjkvaGl0N2lMVXZIakRaWm9XCnByZEc0T2RYYUxYallHLzBBK3VTaHBRRnlwaDdsUGErVFl6UkFIcE1tODArSmZ6YnRKS1dmMlBpd2JzSmF3ZVUKWEZtaklReDI2QWZoZlJ4SUQxTldXTmgvZEdmQWNEQ0pYUTYvWlVSZFhreklnbjVKL1NpZXhSTHhKN1JFcnIrOQpBZ01CQUFHakpqQWtNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVNCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZXBVZ09DNFhNSWtJMlNrNFBubGtOVTdtYlRBYWwxVDZhV3BmN09Oc3oKWFJENDNGUTY1WjZVVlZScmgvZzkzWGNCL2w1aE9yaDJSZUlGZ0JyR2J1d1FweVpTTzRUUEM2WDlhMjNRWENRMQpidkhxeFVmYlB2YWc0Um93T28yeWs5UDJiSkhOOEZ1N2pEUGpENHV6OUgvbmZJNHgxNzJSVGJmMW1NTm1nL1BvClpBSDN3N0tONzhzcVhzOEQ4dDMvYmhZVE94RFNlZWEzd0Y3MzFrVlNJbEtvb1B4Y092NGl6alQxa1MvMExPSEwKb1RhQ1poV01IdGtXbGN0WVpkSS80d2lCdTdDSExITmNHMG5NbXVKcVFxSXFCa0ZNczQ2YmZtcmdPaFFkWXk5TQpDaXFqZkovbnQrTjJlNlEzclAyL3k5VzUrRU4xZ3V6Z1lBM0lLcWpWYklPYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  namespace: M3NjYWxlLXByb2plY3Q=
  service-ca.crt: 
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNkltaHBUMmsyVGtFd1N6aHVUMHBhV0VaemVUSnpaMEk1VDJkbFpXczViSFUzTFU5d1FscEhWV05tVW1NaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUl6YzJOaGJHVXRjSEp2YW1WamRDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSXpjMk5oYkdVdGIzQmxjbUYwYjNJdGRHOXJaVzR0T1hSdGVHSWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzV1WVcxbElqb2lNM05qWVd4bExXOXdaWEpoZEc5eUlpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WlhKMmFXTmxMV0ZqWTI5MWJuUXVkV2xrSWpvaVltRXhabUppTURBdE56VmtaUzAwWmpsaUxXSm1aREV0TXpkbFlUY3pNamc1TVRCbElpd2ljM1ZpSWpvaWMzbHpkR1Z0T25ObGNuWnBZMlZoWTJOdmRXNTBPak56WTJGc1pTMXdjbTlxWldOME9qTnpZMkZzWlMxdmNHVnlZWFJ2Y2lKOS5ZeWNLbTM2aFZzby02Wkp6Rk9uNjgtT3NMc0JHdTZrZnBvYWw1SEJub2d3REJ4ejFGTFBEWWltTThzN1A2dGFHaS1iRHhmcVU0cUNCVXVrNWJEVjlCa1BEZEJGX3JUNVNCMlJMeFg4TzBEb0RUUlByanNTbjR5d0ppUHRYeTJWNENKRnZCRTZFSmgxOV9aTkhZMy1tNXNiZ2wzR3UxcVZsZ09QRnh6X2otcThEUDdZdkd0S0VDMFEzMWtFRnBUVktaMy00clpxSkhxdlpMTmE0UDZwaFRzNFo4N2M5Q2Y2eGstb2Y5NkZEZVpmR21XRXQ2MzFMMm1jb1lpZFZwS1lEVHQ5OTFVeThwX2hTVUJNdVJ5R3BudzA5dXBpQUpWLXcwbkc1LVZDdnNTSDFCLWltSmxaUEZVNEhQZkZia05ZNjZJVm1peUZ0dms4MDdTeHR3TGpMeFE=
kind: Secret
metadata:
  annotations:
    kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
    kubernetes.io/service-account.name: 3scale-operator
    kubernetes.io/service-account.uid: ba1fbb00-75de-4f9b-bfd1-37ea7328910e
  creationTimestamp: "2020-07-27T12:57:04Z"
  name: 3scale-operator-token-9tmxb
  namespace: 3scale-project
  resourceVersion: "198370754"
  selfLink: /api/v1/namespaces/3scale-project/secrets/3scale-operator-token-9tmxb
  uid: 93cb882d-87d1-40eb-933c-e16287d0c303
type: kubernetes.io/service-account-token
