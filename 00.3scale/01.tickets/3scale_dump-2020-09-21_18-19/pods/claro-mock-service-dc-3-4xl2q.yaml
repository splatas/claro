apiVersion: v1
kind: Pod
metadata:
  annotations:
    k8s.v1.cni.cncf.io/networks-status: |-
      [{
          "name": "openshift-sdn",
          "interface": "eth0",
          "ips": [
              "10.128.1.106"
          ],
          "dns": {},
          "default-route": [
              "10.128.0.1"
          ]
      }]
    kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu, memory request for container
      claro-mock-service; cpu, memory limit for container claro-mock-service'
    openshift.io/deployment-config.latest-version: "3"
    openshift.io/deployment-config.name: claro-mock-service-dc
    openshift.io/deployment.name: claro-mock-service-dc-3
    openshift.io/scc: restricted
  creationTimestamp: "2020-09-08T13:16:51Z"
  generateName: claro-mock-service-dc-3-
  labels:
    app: claro-mock-service
    deployment: claro-mock-service-dc-3
    deploymentconfig: claro-mock-service-dc
  name: claro-mock-service-dc-3-4xl2q
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicationController
    name: claro-mock-service-dc-3
    uid: d078b1ce-b490-440f-89a2-f0a470607151
  resourceVersion: "250754896"
  selfLink: /api/v1/namespaces/3scale-project/pods/claro-mock-service-dc-3-4xl2q
  uid: 95f68f2b-7ba0-4d88-bdeb-4055bbfe759c
spec:
  containers:
  - image: image-registry.openshift-image-registry.svc:5000/3scale-project/claro-mock-service:1.0
    imagePullPolicy: Always
    name: claro-mock-service
    ports:
    - containerPort: 8080
      protocol: TCP
    resources:
      limits:
        cpu: "2"
        memory: 1Gi
      requests:
        cpu: 200m
        memory: 1Gi
    securityContext:
      capabilities:
        drop:
        - KILL
        - MKNOD
        - SETGID
        - SETUID
      runAsUser: 1000710000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-fc8nn
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: default-dockercfg-h648n
  nodeName: infra-01.osepext01.claro.amx
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000710000
    seLinuxOptions:
      level: s0:c27,c4
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - name: default-token-fc8nn
    secret:
      defaultMode: 420
      secretName: default-token-fc8nn
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2020-09-08T13:16:51Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2020-09-08T13:17:06Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2020-09-08T13:17:06Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2020-09-08T13:16:51Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://4ee35b2832e14ae5e73b09b7789f807cc6b88cf65c49fa377e6fa7eb4e2dea31
    image: image-registry.openshift-image-registry.svc:5000/3scale-project/claro-mock-service:1.0
    imageID: image-registry.openshift-image-registry.svc:5000/3scale-project/claro-mock-service@sha256:3d4219df0aeb172d1a4ada20c268ea47dd04ae10a67f599e90075f81b80608d1
    lastState: {}
    name: claro-mock-service
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2020-09-08T13:17:05Z"
  hostIP: 10.92.114.128
  phase: Running
  podIP: 10.128.1.106
  podIPs:
  - ip: 10.128.1.106
  qosClass: Burstable
  startTime: "2020-09-08T13:16:51Z"
