apiVersion: v1
kind: Pod
metadata:
  annotations:
    k8s.v1.cni.cncf.io/networks-status: |-
      [{
          "name": "openshift-sdn",
          "interface": "eth0",
          "ips": [
              "10.128.3.208"
          ],
          "dns": {},
          "default-route": [
              "10.128.2.1"
          ]
      }]
    openshift.io/deployment-config.latest-version: "3"
    openshift.io/deployment-config.name: backend-listener
    openshift.io/deployment.name: backend-listener-3
    openshift.io/scc: restricted
  creationTimestamp: "2020-08-11T18:05:49Z"
  generateName: backend-listener-3-
  labels:
    app: 3scale-api-management
    deployment: backend-listener-3
    deploymentConfig: backend-listener
    deploymentconfig: backend-listener
    node-role.kubernetes.io/worker: ""
    threescale_component: backend
    threescale_component_element: listener
  name: backend-listener-3-b6df6
  namespace: 3scale-project
  ownerReferences:
  - apiVersion: v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicationController
    name: backend-listener-3
    uid: ecc4dbe2-d318-44da-a18d-a4c7d4645262
  resourceVersion: "216975697"
  selfLink: /api/v1/namespaces/3scale-project/pods/backend-listener-3-b6df6
  uid: 449af975-bde1-48ad-92e6-042f6619ddb7
spec:
  containers:
  - args:
    - bin/3scale_backend
    - start
    - -e
    - production
    - -p
    - "3000"
    - -x
    - /dev/stdout
    env:
    - name: CONFIG_REDIS_PROXY
      valueFrom:
        secretKeyRef:
          key: REDIS_STORAGE_URL
          name: backend-redis
    - name: CONFIG_REDIS_SENTINEL_HOSTS
      valueFrom:
        secretKeyRef:
          key: REDIS_STORAGE_SENTINEL_HOSTS
          name: backend-redis
    - name: CONFIG_REDIS_SENTINEL_ROLE
      valueFrom:
        secretKeyRef:
          key: REDIS_STORAGE_SENTINEL_ROLE
          name: backend-redis
    - name: CONFIG_QUEUES_MASTER_NAME
      valueFrom:
        secretKeyRef:
          key: REDIS_QUEUES_URL
          name: backend-redis
    - name: CONFIG_QUEUES_SENTINEL_HOSTS
      valueFrom:
        secretKeyRef:
          key: REDIS_QUEUES_SENTINEL_HOSTS
          name: backend-redis
    - name: CONFIG_QUEUES_SENTINEL_ROLE
      valueFrom:
        secretKeyRef:
          key: REDIS_QUEUES_SENTINEL_ROLE
          name: backend-redis
    - name: RACK_ENV
      valueFrom:
        configMapKeyRef:
          key: RACK_ENV
          name: backend-environment
    - name: PUMA_WORKERS
      value: "16"
    - name: CONFIG_INTERNAL_API_USER
      valueFrom:
        secretKeyRef:
          key: username
          name: backend-internal-api
    - name: CONFIG_INTERNAL_API_PASSWORD
      valueFrom:
        secretKeyRef:
          key: password
          name: backend-internal-api
    image: registry.redhat.io/3scale-amp2/backend-rhel7@sha256:bd626295c55a7815a816d7049fba1febdec6a3305dee2a3292e92a26d56036b0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      tcpSocket:
        port: 3000
      timeoutSeconds: 1
    name: backend-listener
    ports:
    - containerPort: 3000
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /status
        port: 3000
        scheme: HTTP
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    resources:
      limits:
        cpu: "1"
        memory: 700Mi
      requests:
        cpu: 500m
        memory: 550Mi
    securityContext:
      capabilities:
        drop:
        - KILL
        - MKNOD
        - SETGID
        - SETUID
      runAsUser: 1000710000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: amp-token-5cmpq
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: threescale-registry-auth
  - name: amp-dockercfg-cvfh4
  nodeName: infra-02.osepext01.claro.amx
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000710000
    seLinuxOptions:
      level: s0:c27,c4
  serviceAccount: amp
  serviceAccountName: amp
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - name: amp-token-5cmpq
    secret:
      defaultMode: 420
      secretName: amp-token-5cmpq
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2020-08-11T18:05:49Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2020-08-11T18:06:53Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2020-08-11T18:06:53Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2020-08-11T18:05:49Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://1af8c0b4b5df82a9c997aeb4e84bb7bdf0bdd0f48de77d89b19af961f231ba17
    image: registry.redhat.io/3scale-amp2/backend-rhel7@sha256:bd626295c55a7815a816d7049fba1febdec6a3305dee2a3292e92a26d56036b0
    imageID: registry.redhat.io/3scale-amp2/backend-rhel7@sha256:bd626295c55a7815a816d7049fba1febdec6a3305dee2a3292e92a26d56036b0
    lastState: {}
    name: backend-listener
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2020-08-11T18:06:16Z"
  hostIP: 10.92.114.129
  phase: Running
  podIP: 10.128.3.208
  podIPs:
  - ip: 10.128.3.208
  qosClass: Burstable
  startTime: "2020-08-11T18:05:49Z"
